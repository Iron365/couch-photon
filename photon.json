{
  "_id": "_design/photon",
  "name": "Photon 0.2β",
  "version": "0.2.895",
  "apps": {
    "cw-Photon": {
      "id": "cw.Photon",
      "build": 895,
      "Version": "0.2",
      "Cfg": {
        "rootRepo": "//s3-eu-west-1.amazonaws.com/cdn.cloudwall.me/photon/",
        "font": "auto",
        "maxTabs": 15,
        "batchDbInfoDelay": 15,
        "batchCompactDelay": 500,
        "batchCreateDelay": 150,
        "batchUpdateCfg": 100,
        "loopActiveTasks": 5,
        "tasksReadReplicator": true
      },
      "lang": {
        "en": {
          "TIP_LOGIN": "Log in",
          "TIP_PROFILE": "Edit user \nprofile doc",
          "TIP_CONFIG": "CouchDB config",
          "TIP_SHARE": "About Photon",
          "ERR_REQ_INVALIDCALL": "Invalid request params, probably invalid command or we have a bug",
          "ERR_REQ": {
            "0": "Offline",
            "400": "Bad request",
            "401": "Unauthorized",
            "403": "Forbidden",
            "404": "Not found",
            "405": "Not allowed",
            "408": "Timeout",
            "409": "Conflict",
            "429": "Too many requests",
            "500": "Internal error",
            "501": "Not implemented",
            "503": "Service unavailable",
            "504": "Gateway timeout",
            "509": "Bandwidth quota",
            "999": "Unknown error"
          },
          "FAIL_TOO_MANY_TABS": "{1} tabs maximum, close something",
          "FAIL_TAB_APP": "Failed starting tab app. See console for details.",
          "DLG_UNLOAD": "There are unsaved changes. Reload?",
          "DLG_UNSAVED": "There are unsaved changes. Proceed?",
          "NewSync": {
            "TXT_TITLE": "New replication",
            "LBL_MODE": "Sync mode",
            "TAG_MODE": {
              "tags": [
                [
                  {
                    "Continuous": "live"
                  },
                  {
                    "Forever": "doc"
                  }
                ]
              ],
              "empty": {
                "One time": ""
              }
            },
            "LBL_ID": "Sync name",
            "PLC_ID": "Doc _id for _replicator DB",
            "ERR_ID": "Required",
            "ERR_ID_UND": "Doc name can’t start with underscore",
            "LBL_FROM": "Source DB",
            "PLC_FROM": "Local name or remote URL",
            "ERR_FROM": "Existing DB name or valid URL",
            "LBL_TO": "Target DB",
            "PLC_TO": "Local name or remote URL",
            "ERR_TO": "Existing DB name or valid URL",
            "ERR_DUP": "Source and Target must be different",
            "LBL_FN": "Filter fn",
            "PLC_FN": "ddocName/filterFnName, filter function",
            "ERR_FN_DESIGN": "No _design prefix, only ddocName/filter",
            "ERR_FN": "Valid format is ddocName/filter",
            "LBL_QRY": "Qry params",
            "PLC_QRY": "Query params for filter fn, JSON object",
            "ERR_QRY": "Must be non-empty JSON object",
            "LBL_DOCS": "Docs to sync",
            "PLC_DOCS": "JSON [] of doc _id-s to replicate",
            "ERR_DOCS": "Must be non-empty JSON array of strings",
            "BTN_START": "Start replication",
            "BTN_START_DOC": "Create doc and start",
            "BTN_CANCEL": "Cancel",
            "BTN_CLEAR": "Clear",
            "MSG_OK": "Successfully started new sync task",
            "MSG_OK_DOC": "Successfully created doc ‘{1}’ in _replicator DB",
            "MSG_FAIL": "Failed starting replication. Server responded ‘{1}: {2}’"
          },
          "DelDB": {
            "TXT_TITLE": "Delete DBs",
            "TXT_TITLE1": "Delete DB",
            "PLC_DBS": "Select DBs to delete",
            "ERR_DBS": "Select at least one DB",
            "TXT_WARN": "function (obj) {\n\t\t\tvar c = Object.clone(obj);\n\t\t\tc.scount = c.count < 2?'':'s';\n\t\t\tc.size = (+c.size).bytes(1).replace(/B$/,'b');\n\t\t\tc.disk = (+c.disk).bytes(1).replace(/B$/,'b');\n\t\t\treturn 'You are deleting {count} DB{scount}, containing {size} of data. It will free ~{disk} of disk space.'.assign(c);\n\t\t}",
            "BTN_START": "function (count) {\n\t\t\tif (!count) return 'Nothing to delete';\n\t\t\treturn 'Delete '+count+' DB'+(count>1?'s':'');\n\t\t}",
            "BTN_CANCEL": "Cancel",
            "MSG_OK": "Successfully deleted ‘{1}’ DB",
            "MSG_FAIL": "Failed deleting DB ‘{1}’. Server responded ‘{2}: {3}’"
          },
          "SecObj": {
            "TXT_TITLE": "Access control",
            "LBL_DBS": "DBs",
            "PLC_DBS": "Select DB names to set ACL",
            "ERR_DBS": "Select at least one DB",
            "TXT_ADM": "Administrators",
            "LBL_UADM": "Users",
            "PLC_UADM": "User names",
            "LBL_GADM": "Roles",
            "PLC_GADM": "Roles with admin access",
            "ERR_ADM": "Invalid name",
            "TXT_MEM": "Members",
            "PLC_UMEM": "User names",
            "PLC_GMEM": "Roles with member access",
            "BTN_START": "Set security",
            "BTN_CANCEL": "Cancel",
            "MSG_OK": "Security object for DB ‘{1}’ updated",
            "MSG_FAIL": "Failed updating security object for DB ‘{1}’. Server responded ‘{2}: {3}’"
          },
          "Login": {
            "TXT_LOGIN": "Log in",
            "PLC_UNAME": "Username",
            "PLC_PWD": "Password",
            "BTN_LOGIN": "Make session",
            "BTN_CANCEL": "Cancel",
            "MSG_AUTH_OK": "Authorized as {1}",
            "MSG_AUTH_FAIL": "Authorization as {1} failed. Server responded {2}: {3}"
          },
          "Logout": {
            "TXT_LOGOUT": "Log out",
            "TXT_PROFILE": "Profile",
            "MSG_LOGOUT_START": "Logging out...",
            "MSG_LOGOUT_OK": "You was logged out successfully",
            "MSG_LOGOUT_FAIL": "Log out failed. Server responded {1}: {2}"
          },
          "Tab": {
            "BTN_CLOSETAB": "Close tab"
          },
          "NewDB": {
            "TXT_TITLE": "Create DBs",
            "TXT_TITLE1": "Create DB",
            "LBL_DBS": "Names",
            "PLC_DBS": "DBs to create",
            "ERR_DB_EXIST": "DB {1} already exists",
            "ERR_DB_NAME": "Lowercase a-z, 0-9 and  _$()+- are only allowed in DB names",
            "ERR_DB_UND": "DB names must start with lowercase a-z",
            "TXT_ADM": "Administrators",
            "LBL_UADM": "Users",
            "PLC_UADM": "User names",
            "LBL_GADM": "Roles",
            "PLC_GADM": "Roles with admin access",
            "ERR_ADM": "Invalid name",
            "TXT_MEM": "Members",
            "PLC_UMEM": "User names",
            "PLC_GMEM": "Roles with member access",
            "BTN_START": "Create DBs",
            "BTN_START_PUBLIC": "Create public DBs",
            "BTN_CANCEL": "Cancel",
            "MSG_NEWDB_START": "Created new DB ‘{1}’",
            "MSG_NEWDB_FAIL": "Failed creating DB ‘{1}’. Server responded ‘{2}: {3}’",
            "MSG_NEWDB_NOACL": "DB ‘{1}’ created, but setting security config failed, so DB is public. Server responded ‘{2}: {3}’"
          },
          "Compact": {
            "TXT_TITLE": "Compact DBs",
            "TXT_TITLE1": "Compact DB",
            "PLC_DBS": "Select DBs to compact",
            "PLC_DDOCS": "Select ddocs for view compaction",
            "ERR_DBS": "Select at least one DB",
            "ERR_DDOCS": "Select at least one design doc",
            "TAG_OP": [
              {
                "Strip old revs": "docs"
              },
              {
                "Strip old views": "views"
              },
              {
                "Compact views": "ddocs"
              }
            ],
            "ERR_OP": "Select at least one action",
            "ERR_VC": "View compaction requires selecting ddocs, so it’s unavailable for multiple DBs selected",
            "BTN_START": "Start compaction",
            "BTN_CANCEL": "Cancel",
            "MSG_COMPACT_START": "Started compaction of ‘{1}’",
            "MSG_COMPACT_FAIL": "Failed starting compaction of ‘{1}’. Server responded ‘{2}: {3}’",
            "MSG_COMPACT_FAIL_SOME": "Errors occured during at least one compaction tasks, check console for details"
          },
          "$error": {
            "TXT_ERR": "<div class=\"w50p tal lh170 dib vat\">Error switching <i>{1}</i><br><span class=\"bolder\">{2}</span></div>"
          },
          "$view": {
            "TXT_FROM": "from",
            "PLC_STARTKEY": "Start key or _skip",
            "TIP_SHIFT_MINUS": "Shift frame backward",
            "TIP_SHIFT_PLUS": "Shift frame forward",
            "TIP_CLEAR_FILTER": "Clear startkey",
            "TIP_RELOAD": "Reload",
            "BTN_NEWDOC": "New doc ",
            "BTN_COPYDOCS": "Copy…",
            "BTN_DELDOCS": "Del docs…",
            "BTN_ACL": "ACL…",
            "BTN_COMPACT": "Compact…",
            "BTN_CANCEL": "Cancel",
            "TIP_CLOSEJSON": "Close JSON",
            "PLC_SEARCH": "Not works",
            "ERR_GETVIEWS": "Failed reading list of view functions for {1} DB.",
            "ERR_GETACL": "Failed reading security object",
            "TXT_ALLDOCS": "function (a,b) {\n\t\t\treturn 'All docs'+(!a?'':', showing {1} of {2} entr'.assign(a,b)+(b%10==1 && b%100!=11?'y':'ies'));\n\t\t}",
            "TXT_MAPVIEW": "function (a,b) {\n\t\t\treturn (!a?'No rows':'{1} of {2} row'.assign(a,b)+(b!=1?'s':''));\n\t\t}",
            "MSG_STARTKEY_CHANGED": "Starting from key {1}",
            "TXT_SELECT": "Select {1}",
            "TXT_UNSELECT": "Unselect {1}",
            "TXT_SELECT_ALL": "all",
            "TXT_SELECT_FILTERED": "filtered",
            "TXT_DEL_TITLE": "Bulk delete docs",
            "TXT_DEL_WARN": "function (num,db) {\n\t\t\treturn 'You are going to delete '+num+' doc'+(num>1?'s':'')+' from the ‘'+db+'’ DB.'\n\t\t}",
            "BTN_DEL_START": "Proceed",
            "MSG_DEL_OK": "function (num,delnum,db) {\n\t\t\tvar h = ' from the ‘'+db+'’ DB';\n\t\t\tif (delnum == num ) h = 'Successfully deleted '+delnum+' doc'+(delnum>1?'s':'') + h;\n\t\t\telse {\n\t\t\t\th = 'Deleted '+delnum+' doc'+(delnum>1?'s':'') + h\n\t\t\t\t\t+', but failed to delete '+(num-delnum)+' doc'+((num-delnum)>1?'s':'');\n\t\t\t\t\n\t\t\t\th+='. Possibly, deletion was denied by validate function, see console for details.';\n\t\t\t}\n\t\t\treturn h;\n\t\t}",
            "MSG_DEL_FAIL": "Failed deleting docs’. Server responded ‘{1}: {2}’"
          },
          "$about": {
            "L_PHO": "Photon version",
            "L_PHOADD": "Photon addons",
            "L_PHOLIBS": "Photon libs",
            "L_VER": "CouchDB version",
            "L_VENDOR": "Vendor",
            "L_URL": "Node URL",
            "L_COUCH": "Welcome msg",
            "L_FEAT": "Aux features",
            "L_DL": "Download this version of Photon as a json",
            "L_DLPREP": "Preparing json...",
            "L_CHECK_UPDATES": "Check for updates...",
            "TXT_UPD": "Update found. Local version is <nobr class=\"bolder\">{1}</nobr>, update is <nobr class=\"bolder\">{2}</nobr>. Update Photon?",
            "MSG_UPD_NONEED": "No update needed",
            "BTN_UPDATE": "Proceed",
            "BTN_CANCEL": "Cancel",
            "ERR_UPDATE_CHECK": "Failed reading new version, sorry",
            "ERR_UPDATE": "Failed updating Photon. Server responded {1}: {2}",
            "MSG_UPDATE_OK": "Photon was successfully updated, please reload the page!"
          },
          "$dbs": {
            "TIP_RELOAD": "Reload",
            "BTN_NEWDB": "New DB…",
            "BTN_COMPACT": "Compact…",
            "BTN_DELDB": "Delete…",
            "BTN_CANCEL": "Cancel",
            "PLC_SEARCH": "Search",
            "TXT_MAPVIEW": "function (a,b) {\n\t\t\treturn (!a && !b?'No DBs':(a==b?'{1} DB':'{1} of {2} DB').assign(a,b)+(b>1?'s':''));\n\t\t}",
            "TXT_TASKVIEW": "function (a,b) {\n\t\t\treturn (!a&& !b?'No tasks':(a==b?'{1} task':'{1} of {2} task').assign(a,b)+(b>1?'s':''));\n\t\t}",
            "TIP_DBSIZE": "Data: {1}\nDisk: {2}",
            "MSG_NEWDB_START": "Created new DB ‘{1}’",
            "MSG_NEWDB_FAIL": "Failed creating DB ‘{1}’. Server responded ‘{2}: {3}’",
            "MSG_NEWDB_NOACL": "DB ‘{1}’ created, but setting security config failed, so DB is public. Server responded ‘{2}: {3}’",
            "TXT_SELECT": "Select {1}",
            "TXT_UNSELECT": "Unselect {1}",
            "TXT_SELECT_ALL": "all",
            "TXT_SELECT_FILTERED": "filtered",
            "H_DOCS": "Docs",
            "H_DELDOCS": "Deleted",
            "H_SEQ": "Seq",
            "H_SIZE": "Disk",
            "TXT_TASK_TITLE": "Tasks",
            "TAGS_TASK_TYPE": {
              "tags": [
                [
                  {
                    "Active": "active"
                  }
                ],
                [
                  {
                    "Sync": "replication"
                  },
                  {
                    "Compaction": "compaction"
                  }
                ]
              ],
              "empty": {
                " All ": ""
              }
            },
            "BTN_TASK_NEWSYNC": "New sync…"
          },
          "$doc": {
            "TXT_REV": "Latest revision",
            "PLC_SEARCH": "Not works",
            "PLC_RELOAD": "Reload",
            "BTN_SAVE": "Save doc ",
            "BTN_SAVEAS": "Save as…",
            "BTN_DEL": "Delete…",
            "BTN_CANCEL": "Cancel",
            "MSG_SAVE": "Doc {1} was successfully saved with revision {2}",
            "ERR_SAVE": "Error saving doc, server responded {1}.",
            "ERR_SAVELOAD": "Doc was saved, however loading it after save failed. Server responded ‘{1}’.",
            "MSG_CONFLICT": "<div class=\"fs130 lh150 mb2 bolder orange\">Conflict</div>Conflict saving doc ‘{1}’ <br><span class=\"dib w140\">Your rev: </span><nobr>{2}</nobr> <br><span class=\"dib w140\">DB rev:   </span><nobr>{3}</nobr>.",
            "BTN_CONFLICT_YES": "Overwrite DB doc",
            "BTN_CONFLICT_NO": "Cancel save",
            "MSG_CONFLICT_CANCELLED": "Cancelled, doc was not saved",
            "MSG_CONFLICT_LOADFAIL": "Failed loading conflicting revision, doc can not be saved",
            "TXT_DEL_TITLE": "Delete doc",
            "TXT_DEL_TITLE_CONFLICT": "Delete doc conflict",
            "TXT_DEL_WARN": "You are going to delete doc <nobr>‘{1}’</nobr> from the ‘{2}’ DB.",
            "BTN_DEL_START": "Proceed",
            "TXT_DEL_NODEL": "Note, that the doc has conflict revisions, and one of them probably become active after deletion.",
            "TXT_DEL_CONFLICT": "Note, that you are deleting conflict revision, it will not affect active version of the doc.",
            "LBL_DEL_ALL": "Del doc and its content",
            "LBL_DEL_RETAIN": "Mark doc as deleted, but retain content",
            "MSG_DEL_OK": "Successfully deleted doc ‘{1}’ from the ‘{2}’ DB",
            "MSG_DEL_FAIL": "Failed deleting doc ‘{1}’. Server responded ‘{2}: {3}’",
            "MSG_DEL_RELOAD": "Updated latest active revision of the doc",
            "MSG_DEL_RELOAD_FAIL": "Failed reading active rev of doc ‘{1}’. Server responded ‘{2}: {3}’"
          },
          "$config": {
            "PLC_SEARCH": "Not works",
            "PLC_RELOAD": "Reload",
            "ERR_RELOAD": "Error reloading config. Server responded {1}: {2}",
            "BTN_SAVE": "Save changes &nbsp;",
            "BTN_REVERT": "Revert to saved ",
            "BTN_CANCEL": "Cancel",
            "BTN_CLOSE": "Close",
            "TXT_SAVE_TITLE": "Save config",
            "TXT_SAVE_SKIPERRORS": "Changes have errors, invalid keys will not be saved.",
            "BTN_SAVE_START": "Save",
            "TXT_ITITLE": "Changes",
            "TXT_ITITLE_EMPTY": "You made no changes in the config yet",
            "LBL_IUPD": "{1} updated",
            "LBL_IADD": "{1} added",
            "LBL_IDEL": "{1} deleted",
            "LBL_IERR": "<span class=\"red1\">{1} invalid</span>",
            "ERR_VAL": {
              "CHARS": "Forbidden chars in key, only a-z, 0-9 and _-! allowed",
              "VALSTRING": "Value must be a string"
            },
            "MSG_SAVE_OK": "Successfully updated config",
            "MSG_SAVE_FAIL": "Failed updating some keys, see console, for details"
          }
        }
      },
      "Base": "",
      "All": {},
      "Tabs": [],
      "History": [],
      "DownloadURL": false,
      "data": {
        "path": [],
        "name": ""
      },
      "params": {
        "restyle": 20
      },
      "init": "function ($o) {\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tcfg = that.Cfg,\n\t\t\tchilds = 'Tab Login Logout Compact NewDB DelDB SecObj NewSync'.split(' ').add(Object.keys(that).filter(/^\\$/));\n\n\t// isStandalone\n\tthat._compiled = that._compiled || !cw.CW;\n\t\n\t// init Photon local storage\n\tthat.Ls = that.Ls();\n\n\t// Base\n\tif (!that.Base) {\n\t\tthat.Base = window.DDOC ? window.DDOC._base : [location.protocol,'',location.host,''].compact().join('/');\n\t}\n\n\t// HTML\n\t$o.formgen('init', that.HTML.assign(that.lang));\n\n\t// Mount editors, taken from global cache\n\tObject.keys(that.Ed).forEach(function(k){\n\t\tif (!that.Ed[k].id) return;\n\t\tthat.Ed[k] = $.extend(\n\t\t\ttrue, \n\t\t\t$.my.cache(that.Ed[k].id) || {}, \n\t\t\tthat.Ed[k], \n\t\t\t{Pho:that.Pho}\n\t\t);\n\t})\n\n\t// Mount lang and Pho on child manifests\n\tchilds.forEach(function(m){\n\t\tif (!that[m]) return;\n\n\t\tif (that[m].lang) $.extend(that[m].lang, that.lang[m] || {});\n\t\tthat[m].Pho = that.Pho;\n\t\tthat[m].Req = that.Req;\n\t});\n\t\n\t// j2h converter\n\tthat.j2h = that.Ed.jsontree.j2h;\n\n\t// Mount app/tab close event handler\n\t$o.on('tabclose.my', function(evt, tabid){ that.Close(tabid); });\n\t\n\t// on Standalone run\n\tif (that._compiled) {\n\t\t// Tab restore\n\t\tvar tabs = that.Ls('TabCloseHistory');\n\t\tif (tabs && tabs.length) {\n\t\t\tif (Date.now() - tabs[0].stamp < 30e3) that.Tabs = Object.clone(tabs[0].tabs, true);\n\t\t\telse {\n\t\t\t\t//search for most fat\n\t\t\t\tvar fat = [];\n\t\t\t\ttabs.forEach(function(e){\n\t\t\t\t\tif (Date.now() - e.stamp > 180*24*36e5) return;\n\t\t\t\t\tif (fat.length < e.tabs.length) fat = e.tabs;\n\t\t\t\t});\n\t\t\t\tif (fat.length) that.Tabs = Object.clone(tabs[0].tabs, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t// After app init\n\t$o.then(function(){\n\t\t\n\t\t// Specific parts\n\t\t// for in-CloudWall exec...\n\t\tif (!that._compiled) {\n\t\t\tcw.log('Photon started in CloudWall');\n\t\t\t$o.on('click.my','a',function(evt){\n\t\t\t\tvar $a = $(evt.currentTarget),\n\t\t\t\t\t\thref = $a.attr('href');\n\t\t\t\tif (href[0]=='#') {\n\t\t\t\t\tvar path = decodeURIComponent(href.replace(/^#+\\/?/,'')).split('/').compact(true);\n\t\t\t\t\tthat.Switch(path);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// ... or Standalone run\n\t\tif (that._compiled) {\n\t\t\tcw.log('Photon couchapp started');\n\t\t\t// start router\n\t\t\t(function _Router (start) {\n\t\t\t\tfunction _route(){\n\t\t\t\t\tvar h = (location.hash+'').replace(/^#+/,'').split('/').map(decodeURIComponent);\n\t\t\t\t\tif (h[1]=='_design') { h[2] = '_design/'+h[2]; h.removeAt(1); }\n\t\t\t\t\tthat.Switch(h);\n\t\t\t\t}\n\t\t\t\tvar prevhash = start || '';\n\t\t\t\t$(window).on('hashchange', _route.debounce(1000/60 + 3));\n\t\t\t\tif (start != null) location.hash = start+'';\n\t\t\t\t$(window).trigger('hashchange');\n\t\t\t})();\n\t\t\t\n\t\t\t// Icon image\n\t\t\t$('link[rel=\"icon\"]').attr(\"href\", that.files['favicon.png'].url);\n\t\t\t\n\t\t\t// beforeunload handler, checks if all tab changes are saved\n\t\t\twindow.onbeforeunload = function(e) {\n\t\t\t\tvar dlg;\n\t\t\t\tif (that.Tabs.find(function(e){return e.hash0!=e.hash1})) {\n\t\t\t\t\tvar dlg = that.lang.DLG_UNLOAD;\n\t\t\t\t\te.returnValue = dlg;\n\t\t\t\t}\n\t\t\t\treturn dlg;\n\t\t\t};\n\t\t\t\n\t\t\t// stash tabs on unload\n\t\t\t$(window).on('unload', function(){\n\t\t\t\tvar tabs = Object.clone(that.Tabs, true),\n\t\t\t\t\t\thistory = that.Ls('TabCloseHistory') || [];\n\t\t\t\thistory.unshift({stamp:Date.now(), tabs:tabs.map(function(e){\n\t\t\t\t\te.run = false; \n\t\t\t\t\te.error = false; \n\t\t\t\t\te.hash0=e.hash1='';\n\t\t\t\t\treturn e;\n\t\t\t\t})});\n\t\t\t\tthat.Ls('TabCloseHistory',history.to(3));\n\t\t\t});\n\t\t\t\n\t\t}\n\n\t\t// rebuild styles\n\t\tthat.my.restyle();\n\t\t\n\t}.debounce(10));\n\t\n\treturn that.GetList();\n\t\n}",
      "ui": {
        "#l-root": "function (d) {return this.SVG.logo}",
        "#btn-aside-auth": {
          "bind": "function (d,v,$o) {\n\t\t\tvar that = this,\n\t\t\t\t\tauth = cw.me(),\n\t\t\t\t\th = '';\n\t\t\t$o.attr('title',auth?that.lang.TIP_PROFILE:that.lang.TIP_LOGIN);\n\t\t\t\n\t\t\th = '<span id=\"btn-auth-popup\">{1}</span>'.assign(auth?that.SVG.user:that.SVG.login);\n\t\t\t\n\t\t\tif (v==null) return h;\n\t\t\t\t\n\t\t\tif ($o.data('modal')) $o.modal(true);\n\t\t\t\n\t\t\t// Not authorized\n\t\t\telse if (!auth) {\n\t\t\t\tthat.my.modal('#btn-aside-auth',{\n\t\t\t\t\tmanifest:that.Login,\n\t\t\t\t\twidth:300,\n\t\t\t\t\tnose:'top',\n\t\t\t\t\talign:'top:105%;right:-44px;',\n\t\t\t\t\tesc:true,\n\t\t\t\t\tenter:false,\n\t\t\t\t\tscreen:false,\n\t\t\t\t\tz:1996\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// authorized\n\t\t\telse {\n\t\t\t\tthat.my.modal('#btn-aside-auth',{\n\t\t\t\t\tmanifest:that.Logout,\n\t\t\t\t\twidth:100,\n\t\t\t\t\tnose:'top',\n\t\t\t\t\talign:'top:105%;right:-44px;',\n\t\t\t\t\tesc:true,\n\t\t\t\t\tenter:false,\n\t\t\t\t\tscreen:false,\n\t\t\t\t\tz:1996\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn h;\n\t\t}",
          "events": "click.my"
        },
        "#btn-aside-config": {
          "bind": "function (d,v,$o) {\n\t\t\t$o.attr('title',this.lang.TIP_CONFIG);\n\t\t\treturn '<a href=\"#_config\">'+this.SVG.config+'</a>';\n\t\t}"
        },
        "#btn-aside-share": {
          "bind": "function (d,v,$o) {\n\t\t\t$o.attr('title',this.lang.TIP_SHARE);\n\t\t\treturn '<a href=\"#_about\">'+this.SVG.share+'</a>';\n\t\t}",
          "events": "click.my"
        },
        "#l-apptabs": {
          "init": "function ($o) {\n\t\t\tvar that = this;\n\t\t\t$o.sortable({ axis:'x' });\n\t\t}",
          "delay": 1,
          "merge": false,
          "id": [
            "id"
          ],
          "hash": "function (e) {\n\t\t\treturn cw.lib.sdbm([ e.name, e.active, e.error, e.hash0, e.hash1 ]);\n\t\t}",
          "list": "<div class=\"l-tab\"></div>",
          "bind": "this.Tabs",
          "manifest": "this.Tab"
        }
      },
      "style": {
        "   ": "function ($o) {\n\t\tvar that = this,\n\t\t\t\tw = $o.width();\n\n\t\t// Set font size\n\t\tvar fsize = w<1500?'15px':'16px',\n\t\t\t\tfweight = /Firefox/.test(window.navigator.userAgent || '')?'400':'300',\n\t\t\t\tfont = \"'-apple-system','BlinkMacSystemFont','Helvetica Neue','Segoe UI',Helvetica,Tahoma,Verdana,Sans-serif\",\n\t\t\t\tcss = \"font-size:{1}!important;font-family: \"+font+\";font-weight:{2};\";\n\n\t\t// Set for elts and controls\n\t\treturn {\n\t\t\t'':css.assign(fsize, fweight)+'line-height:1.6em;',\n\t\t\t' button, input, textarea':css.assign('-',fweight)\n\t\t};\n\t}",
        " .nocwmin": "display:none!important",
        " .notap": "-webkit-tap-highlight-color: rgba(0,0,0,0);",
        " .my-modal-overlay": "box-shadow: 2px 3px 22px -7px rgba(10, 20, 29, 0.8)!important;border-radius:2px!important;",
        " .dif": "display:inline-flex;",
        " .w12p": "width:12%;",
        " .w18p": "width:18%;",
        " .bolder": "font-weight:bolder;",
        " .lighter": "font-weight:lighter;",
        " .w2em": "width:2em;",
        " .my-tags.buttons": {
          " .tag": "border-radius:0; border: 1px solid #e3e5e7; transition:background-color 0.2s, color 0.2s;margin-left:-1px;color:#8c96a2;",
          " .tag:hover": "color:#27a;",
          " .tag.active": "border:1px solid transparent;background-color:#e3e5e7;color:white;color:#8c96a2;",
          " .tag:first-child": "border-radius:3px 0 0 3px; border-left: 1px solid #e3e5e7;",
          " .tag:last-child": "border-radius:0 3px 3px 0;",
          " .tag:first-child:last-child": "border-radius:3px;"
        },
        " div.my-modal": "border: 1px solid rgba(224, 228, 232, 0.55);",
        " .CodeMirror": "font:13.5px Cousine,'Roboto Mono','PT Mono',Menlo,Monaco,monospace!important;",
        " #l-board": {
          "": "width:100%; padding:0; overflow:hidden; ",
          " ": "function () {\n\t\t\tvar h = window.innerHeight+'px';\n\t\t\treturn this._compiled?'height:calc('+h+' - 32px);':'height:600px;'\n\t\t}"
        },
        " #l-apps": {
          "": "max-width:1600px;min-width:1020px;margin:0 auto;",
          " .l-app": {
            "": "opacity:1; transition: opacity 0.5s; transition-timing-function: ease-out;",
            " ": "function () {\n\t\t\t\tvar h = window.innerHeight+'px',\n\t\t\t\t\t\tt = 'height:calc('+h+' - ',\n\t\t\t\t\t\tc = this._compiled;\n\t\t\t\treturn {\n\t\t\t\t\t' .panelheight':c?t+'84px);':'height:548px;',\n\t\t\t\t\t' .panelheight-16':c?t+'100px);':'height:532px;',\n\t\t\t\t\t' .panelheight-32':c?t+'116px);':'height:516px;',\n\t\t\t\t\t' .panelheight-48':c?t+'132px);':'height:500px;',\n\t\t\t\t\t' .panelheight-64':c?t+'148px);':'height:484px;',\n\t\t\t\t};\n\t\t\t}",
            " .app-head": {
              "": "display:block;height:52px;overflow:hidden;width:100%;",
              " button, .button": "height:2em;padding-top:0.2em;padding-bottom:4px;line-height:19px;text-align:center;"
            },
            ".app-busy": "opacity:0.5;transition-timing-function: ease-in;",
            " .feather": {
              ":before": {
                "": "content:\" \";position:absolute;top:0;left:0;width:calc(100% - 6px);height:15px;pointer-events: none;background-image: linear-gradient(to bottom, rgba(255,255,255,1), rgba(255,255,255,0));z-index:1990;"
              },
              ":after": {
                "": "content:\" \";position:absolute;bottom:0;left:0;width:calc(100% - 6px);height:15px;background-image: linear-gradient(to top, rgba(255,255,255,1), rgba(255,255,255,0));z-index:1990;"
              }
            }
          },
          " .app-busy:after": "\t\t\t\tcontent:\" \";\t\t\t\tposition:absolute;\t\t\t\tz-index:+1993;\t\t\t\tbackground-color:rgba(255,255,255,0);\t\t\t\twidth:100%;\t\t\t\theight:110%;\t\t\t\ttop:0;\t\t\t\tleft:0;"
        },
        " .jval-bracket, .jval-key": "font-weight:bolder;",
        " .jval-trim": "display:inline-block;border-radius:2px;padding:1px 2px;line-height:1.1em;color:rgba(213, 48, 89, 0.63);background-color:rgba(43, 107, 192, 0.07);",
        " .jval-short": "color:rgba(88,101,123,0.63);xbackground-color:rgba(43, 107, 192, 0.07);",
        " .jval-key": "margin-left:2px;",
        " .jval-bracket+.jval-key": "margin-left:0px;",
        " .jval-simple": "color:rgba(52, 143, 27, 0.78);",
        " .jval-string": "color:#3b5e85;",
        " #l-header": {
          "": "width:100%;height:32px;overflow:hidden;background-size: 2px 32px;background-position:0 0;background-image: linear-gradient(to bottom, #0c1932, #4b627c);",
          " #l-tabs": {
            "": "max-width:1600px;min-width:1020px;margin:0 auto;",
            " .ui-sortable-helper": "background-color:rgba(102,120,152,0.8);border-left:1px solid #9ea6b0;",
            " .ui-sortable-placeholder+.l-tab": "border-left:1px solid #9ea6b0;",
            " .tab-busy:after": "\t\t\t\tcontent:\" \";\t\t\t\tposition:absolute;\t\t\t\tz-index:+1980;\t\t\t\twidth:100%;\t\t\t\theight:1.5px;\t\t\t\tbottom:0;\t\t\t\tleft:0;\t\t\t\toverflow:hidden;\t\t\t\tbackground-image: url(i/loader-bar2.gif);\t\t\t\tbackground-repeat: repeat-x;\t\t\t\tbackground-position-y: -1px;"
          },
          " #l-roottab": {
            "": "border-left:1px solid #9ea6b0;",
            " #l-root": "padding:3px 10px 0 20px;width:72px;display:block;"
          },
          " #l-apptabs": "width:calc(100% - 72px - 96px);",
          " .l-tab": {
            "": "line-height:29px;height:32px;min-width:72px;max-width:250px;transition:width 0.2s;border-right:1px solid #9ea6b0;border-left:1px solid transparent;display:inline-block;vertical-align:top;overflow:hidden;",
            " ": "function () {\n\t\t\t\treturn 'width:calc(100% / '+(this.Tabs.length || 1)+');';\n\t\t\t}",
            ":hover": {},
            " #btn-tabclose": "cursor:pointer;display:none;color:rgba(255,255,255,0.25);",
            " #l-tabstate": "color:rgba(141,209,255,0.92);",
            " #l-tabstate.hide+#btn-tabclose": "display:block;",
            " .l-tabmark": {
              "": "width:16px;position:absolute;line-height:20px;right:0;top:0;text-align:center;",
              "  ": "transition: opacity 0.3s, color 0.3s;"
            },
            ":hover ": {
              " #l-tabstate": "display:none!important;",
              " #btn-tabclose": "display:block!important;color:rgba(255,255,255,0.6);"
            },
            " #btn-tabclose:hover": "color:rgba(255,255,255,0.8);",
            " a": "text-decoration:none;transition: opacity 0.3s;color:white!important;opacity:0.8!important;",
            ":hover a": "opacity:1!important;",
            " #l-tabname": {
              "": "width:calc(100% - 16px);display:inline-block;overflow:hidden;text-overflow:ellipsis;padding:0 0 4px 6px;white-space: nowrap;",
              ".smaller": "font-size:0.95em;"
            },
            ".active": {
              " a": "color:#001328!important;opacity:0.8!important;font-weight:bolder;",
              ":hover a": "opacity:0.95!important;",
              "": " background-size: 2px 32px;background-position:0 0;background-image: linear-gradient(to bottom, #a3b5cd, #d2deee);",
              " #l-tabstate": "color:rgba(37,137,215,0.8);",
              " #btn-tabclose": "color:rgba(0,18,40,0.3);",
              ":hover #btn-tabclose": "color:rgba(0,18,40,0.6);",
              " #btn-tabclose:hover": "color:rgba(0,18,40,0.8);"
            }
          },
          " #l-aside": {
            "": "position:absolute;top:0;right:0;width:96px;border-right:1px solid #9ea6b0;white-space: nowrap;width:auto;z-index:2;",
            ">div": "height:32px; width:32px; cursor:pointer;border-left:1px solid #9ea6b0;display:inline-block; vertical-align:top; overflow:hidden;transition: color 0.3s, opacity 0.3s; color:white!important;opacity:0.7!important;",
            ">div:hover": "opacity:0.9!important;",
            "a": "text-decoration:none;"
          }
        }
      },
      "Pho": "function (key) {\n\t\t// exposed to child apps, indeed Pho\n\t\t// return Shell resource by key, \n\t\t// which is null, [path] or string\n\t\treturn null==key?this:Object.isArray(key)?cw.lib.getref(this,key):this[key];\n\t}",
      "SetTitle": "function (t) {\n\t\tvar that = this;\n\t\tif (that._compiled) $('head title').text(t+'');\n\t}",
      "LibsUsed": {
        "jQuery": "https://jquery.com/",
        "Q": "https://github.com/kriskowal/q",
        "$.ui": "https://jqueryui.com/",
        "$.my": "https://jquerymy.com/",
        "$.tags": "",
        "$.list": "",
        "select2": "http://select2.github.io/select2/",
        "CodeMirror": "https://codemirror.net/",
        "niceScroll": "https://github.com/inuyaksa/jquery.nicescroll",
        "Sugar": "http://sugarjs.com",
        "fastclick": "https://github.com/ftlabs/fastclick",
        "cw.lib": "http://cloudwall.me"
      },
      "Req": "function _Req(opts0) {\n\n\tvar isS = Object.isString,\n\t\t\tisO = Object.isObject,\n\t\t\tisA = Object.isArray;\n\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tcfg = that.Cfg,\n\t\t\tl = that.lang,\n\t\t\tpi = $.Deferred();\n\n\tvar opts = $.extend(\n\t\ttrue, \n\t\t{\n\t\t\tmethod:'GET',\n\t\t\tdataType:'json',\n\t\t\theaders:{ Accept:'application/json' },\n\t\t\tcache:false\n\t\t},\n\t\tisO(opts0)?opts0:isA(opts0)?{url:opts0}:{url:opts0+''}\n\t);\n\n\tvar url = a2url(opts.url, that.Base);\n\n\tif (!url) E(400, l.ERR_REQ_INVALIDCALL);\n\t\n\topts.url = url;\n\t\n\t$.ajax(opts)\n\t.then(function(res){\n\t\tpi.resolve(res);\n\t})\n\t.fail(function(res, b){\n\t\tvar code = res.status,\n\t\t\t\tdata = res.responseJSON || {ok:false},\n\t\t\t\tmsg = data.message || '';\n\t\tE(code, msg, data);\n\t});\n\n\treturn pi.promise();\n\n\t// - - - - - - -\n\n\tfunction E(code0, msg0, data) {\n\t\tvar code = !isNaN(code0)?(+code0):500,\n\t\t\t\tmsg = (isNaN(code0) && !msg0)?code0:msg0;\n\t\tif (!msg) {\n\t\t\tmsg = l.ERR_REQ[code] || l.ERR_REQ[999];\n\t\t}\n\t\tmsg+='';\n\t\tpi.reject(code, msg, data);\n\t}\n\n\t// - - - - - - - \n\n\tfunction a2url(a, base0) {\n\t\tvar p = [],\n\t\t\t\tq = {},\n\t\t\t\tqa = [],\n\t\t\t\turl = '',\n\t\t\t\tbase = base0?(base0+'').replace(/\\/+$/,'')+'/':'',\n\t\t\t\ttostr = {startkey:1,endkey:1,start_key:1,end_key:1,key:1},\n\t\t\t\treddoc = /^_design\\//;\n\n\t\tif (typeof a == 'string') {\n\t\t\turl = !/^http[s]?:/.test(a)?base+a.replace(/^\\/+/,''):a;\n\t\t}\n\t\telse if (Object.isArray(a)) {\n\t\t\ta.forEach(function(e, i){\n\t\t\t\tif(''===e || null==e) return;\n\t\t\t\tif (Object.isObject(e)) $.extend(true, q, e);\n\t\t\t\telse if (reddoc.test(e+'')) p.add((e+'').split('/'));\n\t\t\t\telse p.push(encodeURIComponent(e+''));\n\t\t\t});\n\n\t\t\tqa = Object.keys(q).map(function(key){\n\t\t\t\tvar v = q[key];\n\t\t\t\tif (tostr[key] || typeof v != 'string') v = JSON.stringify(v);\n\t\t\t\treturn encodeURIComponent(key)+'='+encodeURIComponent(v);\n\t\t\t});\n\t\t\t\n\t\t\turl = base+p.join('/')+(qa.length?'?'+qa.join('&'):'');\n\t\t}\n\n\t\treturn url;\n\t}\n}",
      "GetList": "function () {\n\t\n\t// Returns promise resolved with prefilled that.All{}\n\t\n\tvar that = this,\n\t\t\td = that.data;\n\t\n\treturn that.Req(['_all_dbs'])\n\t.then(function(list){\n\t\tvar prev = Object.keys(that.All),\n\t\t\t\tcurr = list.slice(0);\n\t\t\n\t\t// Delete non existent\n\t\tprev.subtract(curr).forEach(function(i){ delete that.All[i]; });\n\t\t\n\t\tcurr.forEach(function(dbname){\n\t\t\t// construct db objs\n\t\t\tvar db = {\n\t\t\t\tname:dbname,\n\t\t\t\tnamesafe:dbname.escapeHTML(),\n\t\t\t\thref:encodeURIComponent(dbname),\n\t\t\t\tsizesafe:'',\n\t\t\t\tsyncstate:'',\n\t\t\t\t\n\t\t\t\tstamp:0,\n\t\t\t\tcommitted_update_seq:-1,\n\t\t\t\tcompact_running:false,\n\t\t\t\tdata_size:'',\n\t\t\t\tdb_name:'',\n\t\t\t\tdisk_format_version:'',\n\t\t\t\tdisk_size:0,\n\t\t\t\tdoc_count:'',\n\t\t\t\tdoc_del_count:'',\n\t\t\t\tinstance_start_time:'',\n\t\t\t\tpurge_seq:'',\n\t\t\t\tupdate_seq:'',\n\t\t\t\t\n\t\t\t\tsecurity:{\n\t\t\t\t\tstamp:0,\n\t\t\t\t\tadmins:{names:[],roles:[]},\n\t\t\t\t\tmemebers:{names:[],roles:[]}\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\ttasks:{ stamp:0, pids:[] },\n\t\t\t\tsyncs:{ stamp:0, docs:[] }\n\t\t\t};\n\t\t\t\n\t\t\tthat.All[dbname] = $.extend( true, db, that.All[dbname] || {}, {stamp:Date.now()} );\n\n\t\t});\n\t\t\n\t\treturn that.All\n\t});\n}",
      "Switch": "function _switch(path0,tabid) {\n\t\n\t// Switches tabs, called by flatiron on hash change\n\t// or internal router if env is CloudWall big\n\t\n\tcw.log('Photon tab switch attempt', path0, tabid||'')\n\t\n\tvar that = this,\n\t\t\t_redrawTabs = _redrawTabsSync,//.debounce(0),\n\t\t\td = that.data,\n\t\t\tpath = (\n\t\t\t\tObject.isString(path0)\n\t\t\t\t? path0.replace(/^#/,'').split('/').compact(!0)\n\t\t\t\t: Object.isArray(path0)\n\t\t\t\t? path0.slice(0).compact(true)\n\t\t\t\t: []\n\t\t\t);\n\t\n\tif (path[1]=='_design') {path[2] = '_design/'+path[2]; path.removeAt(1);}\n\t\n\tvar spath = path.join('\\fffd'),\n\t\t\tswitcher = [],\n\t\t\tnewtab,\n\t\t\tisNew = false;\n\t\n\tthat.Tabs.forEach(function(t){\n\t\tif (t.path.join('\\fffd') == spath) switcher.push(t);\n\t});\n\tif (switcher.length > 1) {\n\t\tif (tabid) {\n\t\t\tswitcher[0] = switcher.find(function(tf){return tf.id == tabid}) || switcher[0];\n\t\t}\n\t}\n\tnewtab = switcher[0];\n\t\n\tif(newtab && newtab.active && newtab.run) return false;\n\t\n\t// Derive type\n\tvar type = 'error',\n\t\t\ttitle = 'Error',\n\t\t\tisDB = /^(_users|_replicator|[a-zA-Z0-9$\\(\\)\\+\\-][a-zA-Z0-9$\\(\\)\\+\\-\\/_]*)$/.test(path[0]),\n\t\t\tappData,\n\t\t\tpl = path.length;\n\tif (!pl) {\n\t\ttitle = 'Photon';\n\t\ttype = 'dbs';\n\t}\n\telse if (pl == 1 && path[0]=='_config') {\n\t\ttitle= '_config';\n\t\ttype='config';\n\t}\n\telse if (pl == 1 && path[0]=='_about') {\n\t\ttitle= 'About';\n\t\ttype='about';\n\t}\n\telse if (isDB && path[1]=='_new') {\n\t\ttitle = 'New doc';\n\t\ttype = 'doc';\n\t\tappData = {isNew:true}\n\t}\n\telse if (isDB && (pl == 1 || path[1] == '_view'|| path[1] == '_all_docs')) {\n\t\ttitle = path[0];\n\t\ttype = 'view';\n\t\tif (path[1] == '_all_docs') {\n\t\t\tif (pl!=4) path.length = 1;\n\t\t\telse {\n\t\t\t\tappData = {\n\t\t\t\t\tstart:path[2], \n\t\t\t\t\tlimit:'+'+(that.$view.Steps.find(Math.abs(+path[5])) || '100'),\n\t\t\t\t\treverse:(path[3]+'')[0]=='-'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (path[1] == '_view') {\n\t\t\tif (pl!=6) path.length = 4;\n\t\t\telse {\n\t\t\t\tappData = {\n\t\t\t\t\tstart:path[4], \n\t\t\t\t\tlimit:'+'+(that.$view.Steps.find(Math.abs(+path[5])) || '100'),\n\t\t\t\t\treverse:(path[5]+'')[0]=='-'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if (pl == 2 && isDB) {\n\t\ttitle = path[0].truncate(10,'right','…')+'\\u2009/\\u2009'+path[1];\n\t\ttype = 'doc';\n\t} \n\telse if (pl == 3 && path[1] == '_design') {\n\t\ttitle = path[0].truncate(10,'right','…')+'\\u2009/\\u2009'+'_d…'+path[2];\n\t\ttype = 'doc';\n\t}\n\telse if (pl == 3 && isDB) {\n\t\ttitle = path[0].truncate(10,'right','…')+'\\u2009/\\u2009'+path[1];\n\t\ttype = 'doc';\n\t\tappData={rev:path[2].replace(/^\\D+/,'')}\n\t}\n\t\n\tif (type=='error') appData = {error:'Unrecognized command'}\n\t\n\t\n\t// Switch off tabs\n\tthat.Tabs.forEach(function(t){\n\t\tif (t!==newtab) t.active = false;\n\t});\n\t\n\t// new tab not exists?\n\tif (!newtab) {\n\t\t\n\t\tif (that.Tabs.length >= that.Cfg.maxTabs) {\n\t\t\tcw.lib.note(that.lang.FAIL_TOO_MANY_TABS.assign(that.Cfg.maxTabs+''), 'error');\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tisNew = true;\n\t\tnewtab = {\n\t\t\tid:cw.lib.sdbm(Date.now()+path),\n\t\t\ttype:type,\n\t\t\thash0:'',hash1:'',\n\t\t\tactive:true,\n\t\t\tname:title,\n\t\t\tpath:path.slice(0),\n\t\t\terror:type=='error',\n\t\t\trun:false\n\t\t};\n\t\tif (type!='dbs') that.Tabs.push(newtab);\n\t\telse that.Tabs.unshift(newtab);\n\t}\n\t\n\tnewtab.active = true;\n\tthat.SetTitle(newtab.name);\n\tthat.my.restyle();\n\t_redrawTabs();\n\t\n\tvar app = _runApp(type, path, newtab.id, appData);\n\t\n\tif (app.then) {\n\t\tapp.then(function(){\n\t\t\tvar waschanged = false;\n\t\t\tnewtab.run = true;\n\t\t\t// we were able to start it\n\t\t\tcw.log('Photon tab of type ${1} started'.assign(type), path);\n\t\t\tnewtab.hash0 = newtab.hash1 = app.my('manifest').hash();\n\t\t\tnewtab.name = app.my('manifest').title();\n\t\t\tthat.SetTitle(newtab.name);\n\t\t\tif (that.History.last() != newtab.id) that.History.push(newtab.id);\n\t\t\t\n\t\t\t// Track app changes\n\t\t\tapp.on('change.my', function(){\n\t\t\t\tnewtab.hash1 = app.my('manifest').hash();\n\t\t\t\tvar name = app.my('manifest').title();\n\t\t\t\tif (newtab.hash0 != newtab.hash1 || name != newtab.name) {\n\t\t\t\t\tnewtab.name = name;\n\t\t\t\t\twaschanged = true;\n\t\t\t\t\t_redrawTabs();\n\t\t\t\t}\n\t\t\t\telse if (waschanged) {\n\t\t\t\t\t_redrawTabs();\n\t\t\t\t}\n\t\t\t\tif (newtab.active) that.SetTitle(newtab.name);\n\t\t\t}.debounce(500));\n\t\t\t\n\t\t\t// Track hash reset\n\t\t\tapp.on('resettabhash.my', function(){\n\t\t\t\tnewtab.hash0 = newtab.hash1 = app.my('manifest').hash();\n\t\t\t\tnewtab.name = app.my('manifest').title();\n\t\t\t\t_redrawTabs();\n\t\t\t}.debounce(100));\n\t\t\t\n\t\t\t_redrawTabs();\n\t\t\t\n\t\t})\n\t\t.fail(function(a,b){\n\t\t\t// we could not start an app\n\t\t\tcw.lib.note(that.lang.FAIL_TAB_APP, 'error');\n\t\t\tthat.my.find('#l-apps>#app-'+tabid).remove();\n\t\t\tcw.log('Photon tab ${1} start fail'.assign(type), path, a);\n\t\t\tnewtab.error = true;\n\t\t\tconsole.log(a,b);\n\t\t\t// insert dummy\n\t\t\t_runApp('error', path, newtab.id, {error:Object.isString(a)&& Object.isString(b)?a+'; '+b:a});\n\t\t}.debounce(10));\n\t}\n\t\n\t\n\t// - - - - - - - -\n\t\n\tfunction _redrawTabsSync(){\n\t\tthat.my.recalc('#l-apptabs');\n\t}\n\t\n\t// - - - - - - - -\n\t\n\tfunction _runApp(type, path, tabid, data) {\n\t\tvar man = that['$'+type],\n\t\t\t\t$app = that.my.find('#l-apps>#app-'+tabid),\n\t\t\t\t$appPromise;\n\t\t\n\t\tif (!$app.length || !$app.is('.my-form')) {\n\t\t\t\n\t\t\tif(!$app.length) {\n\t\t\t\t$app = $('<div class=\"l-app\" id=\"app-'+tabid+'\"></div>');\n\t\t\t\tthat.my.find('#l-apps').append($app);\n\t\t\t}\n\t\t\t\n\t\t\tthat.my.find('#l-apps>.l-app').addClass('hide');\n\t\t\t$app.removeClass('hide');\n\t\t\t$appPromise = $app.my(man, $.extend({path:path, tabid:tabid}, data || {}));\n\t\t}\n\t\telse {\n\t\t\tthat.my.find('#l-apps>.l-app').each(function(){\n\t\t\t\tvar $t = $(this);\n\t\t\t\tif ($t.is($app)) $t.removeClass('hide');\n\t\t\t\telse $t.addClass('hide');\n\t\t\t});\n\t\t}\n\n\t\treturn $appPromise || $app;\n\t}\n\t\n}",
      "Close": "function _closeTab(opts) {\n\t\n\t// 'closetab' event handler, \n\t// bound on app DOM root during app .init()\n\t\n\tvar that = this;\n\t\n\tvar tabid,\n\t\t\tenforce = false;\n\t\n\tif (Object.isObject(opts)) {\n\t\ttabid = opts.tabid || '';\n\t\tenforce = opts.enforce || false;\n\t}\n\telse tabid = opts+'';\n\t\n\tif (that.Tabs.length<2 || !tabid) return;\n\t\n\t// Search for tab\n\tvar tab = that.Tabs.find(function(t){return t.id == tabid});\n\tif (!tab) return;\n\t\n\t// Search for app DOM node\n\tvar $app = that.my.find('#l-apps>#app-'+tabid);\n\t\n\tif ($app.length && $app.is('.my-form')) {\n\t\ttab.hash1 = $app.my('manifest').hash();\n\t\tif (tab.hash1 == tab.hash0) {\n\t\t\t_unmount($app, tab)\n\t\t}\n\t\telse {\n\t\t\t// here we should check if doc was changed \n\t\t\t// and show modal popup 'Discard changes?'\n\t\t\t$.my.modal({\n\t\t\t\tmanifest:that.Confirm,\n\t\t\t\tdata:{yes:'Close tab&nbsp;',no:'Cancel close', cancel:'', text:that.lang.DLG_UNSAVED},\n\t\t\t\twidth:300,\n\t\t\t\tclose:true,\n\t\t\t\tesc:true,\n\t\t\t\tenter:false,\n\t\t\t\tcss:'lh170 xgray p20 pb25'\n\t\t\t})\n\t\t\t.then(function(res){\n\t\t\t\tif (res.cmd == 'yes') {\n\t\t\t\t\t_unmount($app, tab);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\telse _finalize(!tab.active);\n\t\n\t// - - - - - - -\n\t\n\tfunction _unmount($app, tab) {\n\t\t$app.my('remove');\n\t\t$app.remove();\n\t\t_finalize(!tab.active);\n\t}\n\t\n\t// - - - - - - -\n\t\n\tfunction _finalize(skipSwitch) {\n\t\t// Clean up history\n\t\tthat.History.remove(tabid);\n\t\tthat.Tabs.remove(tab);\n\t\t\n\t\tcw.log('Photon tab closed', tab.path);\n\t\t\n\t\tif (skipSwitch) {\n\t\t\tthat.my.recalc('#l-apptabs');\n\t\t}\n\t\t\n\t\telse {\n\t\t\t// search for openable tab\n\t\t\t// and switch\n\t\t\t\n\t\t\tif (!that._compiled || window.history.length == 1) {\n\t\t\t\tvar ptab, tid;\n\t\t\t\twhile (that.History.length || ptab) {\n\t\t\t\t\ttid = that.History.pop();\n\t\t\t\t\tptab = that.Tabs.find(function(t){return t.id == tabid});\n\t\t\t\t}\n\n\t\t\t\tif (!ptab) ptab = that.Tabs[0];\n\t\t\t\tthat.Switch(ptab.path, ptab.id);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthat.my.recalc('#l-apptabs');\n\t\t\t\twindow.history.back();\n\t\t\t}\n\t\t}\n\t\tthat.my.restyle();\n\t}\n\t\n}",
      "Ls": "function (prefix0) {\n\t\n\t// Local storage manager\n\t// this.Ls(key) -> return value or null\n\t// this.Ls(key, null) -> deletes keys\n\t// this.Ls(key, any)  -> stores value under 'Photon.'+key\n\t\n\tvar that = this,\n\t\t\tls = window.localStorage,\n\t\t\tstorage = _photon_LS,\n\t\t\tprefix = prefix0 || that.id || 'X';\n\t\n\treturn storage;\n\t\n\t// - - - - - - - - -\n\t\n\tfunction _photon_LS (key0, data){\n\t\tvar x, \n\t\t\t\tkey = prefix+'.'+key0;\n\t\tif (null === data) return ls.removeItem(key);\n\t\telse if (undefined !== data) return ls.setItem(key, JSON.stringify(data));\n\t\telse {\n\t\t\tx = ls.getItem(key);\n\t\t\tif (Object.isString(x)) return _parse(x);\n\t\t\treturn null;\n\t\t}\n\t}\n\t\n\t// - - - - - - - - -\n\t\n\tfunction _parse(s) {\n\t\ttry{ return JSON.parse(s); } catch(e){}\n\t\treturn null;\n\t}\n}",
      "HTML": "<div id=\"l-header\">\n\t<div id=\"l-tabs\">\n\t\t\n\t\t<div id=\"l-roottab\" class=\"l-tab\" style=\"width:72px;\">\n\t\t\t<a id=\"l-root\" href=\"#\" class=\"\"></a>\n\t\t</div>\n\t\t\n\t\t<div id=\"l-apptabs\" class=\"dib vat nw oh\"></div>\n\t\t\n\t\t<div id=\"l-aside\">\n\t\t\t<div id=\"btn-aside-auth\"></div>\n\t\t\t<div id=\"btn-aside-config\"></div>\n\t\t\t<div id=\"btn-aside-share\"></div>\n\t\t</div>\n\t</div>\n</div>\n<div id=\"l-board\">\n\t<div id=\"l-apps\">\n\t</div>\n</div>",
      "Ed": {
        "jsontree": {
          "id": "cw.Sys.JSON",
          "params": {},
          "ui": {
            "#btn-save": {
              "bind": "function (d,v) {\n\t\t\t\tif (v!=null) this.my.trigger('#btn-save','savedoc.my');\n\t\t\t}"
            }
          },
          "Lib": {
            "isSystem": "function (d) {\n\t\t\tvar that = this,\n\t\t\t\t\tisNew = that.my.root().parents('.l-app').eq(0).my('data').isNew;\n\t\t\tif (!isNew) return !!(\n\t\t\t\t(d.level==1 && /^(_id|_rev|_local_seq)$/.test(d.key) && d.value) \n\t\t\t\t||\n\t\t\t\t(d.level>2 && d.path[1] =='_revs_info')\n\t\t\t\t||\n\t\t\t\t(d.path[1] == '_conflicts')\n\t\t\t);\n\t\t\treturn false;\n\t\t}"
          },
          "HTML": {
            "ItemRoot": "<div class=\"inav\"><div class=\"ikey\"></div><div class=\"idesc cp\">–</div></div><div class=\"ivalue imulti hide\"><div class=\"ilist\"></div></div><div class=\"iact buttons\"><button class=\"btn-add button green\" title=\"Add new property\">&thinsp;<span class=\"fi-plus\"></span>&thinsp;</button><button class=\"btn-takeout button\" title=\"Copy / paste / edit as JSON\"><span class=\"fi-shopping-bag\"></span></button><button class=\"btn-del button red hide\"  title=\"Del node\">&thinsp;<span class=\"fi-x\"></span>&thinsp;</button><button id=\"btn-attach\" class=\"button\" title=\"Add attachment\" style=\"width:74px\"><span class=\"fi-paperclip\"></span><span class=\"fs90\"> Attach…</span></button></div>"
          },
          "MakeList": "function (data,key,state) {\n\n\t\t// Object/array processor,\n\t\t// generates typed metaobject\n\n\t\tvar that=this,\n\t\t\t\tdt, a=[], man, bin, \n\t\t\t\thash, b = data.value,\n\t\t\t\tsdbm = cw.lib.sdbm;\n\t\t//for (var i in b) {\n\n\t\tObject.keys(b).forEach(function(i){\n\t\t\tdt = $.type(b[i]);\n\n\t\t\t// Detect multy\n\t\t\tman = /^(ob|ar)/.test(dt)?\"multi\":dt;\n\t\t\t\n\t\t\t// Photon-related stuff\n\t\t\tif (man == 'multi') {\n\t\t\t\tif (data.key == 'Root' && data.path+''=='' && i=='_attachments') {\n\t\t\t\t\tman = 'files';\n\t\t\t\t}\n\t\t\t\telse if (data.key == '_attachments' && data.path+'' == 'Root') {\n\t\t\t\t\tman = 'file';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Detect string-derived types\n\t\t\tif (dt == \"string\"){\n\t\t\t\tif (b[i].length > 12 && b[i].to(8) == 'function' && /\\}[\\r\\n\\t\\s]*$/.test(b[i].substr(-10))) {\n\t\t\t\t\tman = \"function\";\n\t\t\t\t}\n\t\t\t\telse if(\n\t\t\t\t\tb[i].length>160 && b[i].length < 50e3\n\t\t\t\t\t&& /^[a-zA-Z0-9\\+\\/]+$/.test(b[i].substr(0,158))\n\t\t\t\t\t&& /^[a-zA-Z0-9\\+\\/]+={0,2}$/.test(b[i])\n\t\t\t\t) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbin = window.atob(b[i]);\n\t\t\t\t\t\thash = sdbm(b[i]);\n\t\t\t\t\t\tman = \"base64\";\n\t\t\t\t\t}catch(e){}\n\t\t\t\t}\n\t\t\t\telse if(\n\t\t\t\t\tb[i].length>160 && b[i].length < 50e3\n\t\t\t\t\t&& /^data:image\\/(jpeg|png|gif);base64,/.test(b[i])\n\t\t\t\t) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbin = atob(b[i].replace(/^data:image\\/(jpeg|png|gif);base64,/,''));\n\t\t\t\t\t\thash = sdbm(b[i]);\n\t\t\t\t\t\tman = \"base64\";\n\t\t\t\t\t}catch(e){}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Do we have viewstate stashed?\n\t\t\tvar vs = that.data.viewstate,\n\t\t\t\t\tpath = data.path.slice(0).add(data.key),\n\t\t\t\t\tvkey = path.join('❀')+'❀'+i;\n\n\t\t\ta.push({\n\t\t\t\tstate:state?state:(vs && vs[vkey]?vs[vkey]:1),\n\t\t\t\tlevel:data.level+1,\n\t\t\t\tmanifest:\"$\"+man,\n\t\t\t\tpath:path,\n\t\t\t\ttype:dt,\n\t\t\t\tkey:i,\n\t\t\t\tid:i,\n\t\t\t\tvalue:b[i],\n\t\t\t\tbin:bin,\n\t\t\t\thash:hash\n\t\t\t});\n\t\t});\n\t\treturn a;\n\t}",
          "$files": {
            "id": "Sys.JSON.Files",
            "data": {},
            "List": [],
            "Txt": {
              "object": [
                "Files {",
                "}"
              ],
              "array": [
                "Array [",
                "]"
              ]
            },
            "init": "function _init_files($o,form) {\n\t\t\n\t\t// Special replacement for ._atatchments branch\n\t\t\n\t\tvar that = this, \n\t\t\t\td = form.data;\n\t\t$o.html(that.HTML);\n\t\t\n\t\tif (d.state > 1) that.List = that.MakeList(d);\n\t\t\n\t\t$o.find(\".ilist:eq(0)\").on(\"change.my\", function(){\n\t\t\tthat.RT('Rejoin')(d, that.List);\n\t\t}.debounce(300));\n\t\t\n\t\t$o.on(\"click.my\", \".ilist:eq(0) .btn-del\", function(evt){\n\t\t\tevt.stopPropagation();\n\t\t\tvar $f = $(this).parents(\".my-form\").eq(0);\t\t\n\t\t\tvar p = $f.parent().data(\"my\").data,\n\t\t\t\t\tt = $.type(p.value),\n\t\t\t\t\tkey = $f.my(\"data\").key;\n\t\t\t\n\t\t\tif (t==\"object\") delete p.value[key];\n\t\t\telse if (t==\"array\") p.value.removeAt(key);\n\t\t\t\n\t\t\tthat.RT('Lib').relist($o, that, form);\n\t\t});\n\t\t\n\t}",
            "ShowItems": null,
            "ui": {
              ".ivalue": {
                "css": {
                  "hide": "function () {return !this.List.length}"
                },
                "watch": [
                  ".idesc"
                ]
              },
              ".ilist": {
                "delay": 0,
                "check": false,
                "bind": "this.List",
                "list": "<div class=\"irow\"></div>",
                "id": "function (e) {return e.id;}",
                "hash": "function (e) {return e.hash;}",
                "manifest": "function (e) {\n\t\t\t\tvar that = this;\n\t\t\t\treturn that.RT(e.manifest)||that.RT('$string');\n\t\t\t}",
                "watch": [
                  ".idesc"
                ]
              },
              ".ikey": {
                "delay": 10,
                "bind": "function (d,v) {\n\t\t\t\treturn (!/^(|\\s+)$/.test(d.key))?d.key.truncate(25,'right','…'):'\"'+d.key+'\"'; \n\t\t\t}",
                "css": {
                  "bold": "function (d) {return d.state!=1}"
                },
                "watch": [
                  ".idesc"
                ]
              },
              "#btn-upload": {
                "bind": "function (d,v,$o) {\n\t\t\t\tif (v==null) return;\n\t\t\t\tvar that = this;\n\t\t\t\tif ($o.data('modal')) {\n\t\t\t\t\t$o.modal(true);\n\t\t\t\t\t_close();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$o.parent().addClass('hover');\n\t\t\t\t\tthat.my.modal('#btn-upload',{\n\t\t\t\t\t\tmanifest:that.Add,\n\t\t\t\t\t\tdata:{},\n\t\t\t\t\t\twidth:500,\n\t\t\t\t\t\talign:'top:103%, right:-38px;',\n\t\t\t\t\t\tnose:'top'\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(res){\n\t\t\t\t\t\tres.files.forEach(function(file){\n\t\t\t\t\t\t\td.value[file.name] = Object.select(file, ['content_type','data']);\n\t\t\t\t\t\t});\n\t\t\t\t\t\td.state=2;\n\t\t\t\t\t\tthat.List = that.MakeList(d);\n\t\t\t\t\t\tthat.my.redraw();\n\t\t\t\t\t})\n\t\t\t\t\t.always(function(){\n\t\t\t\t\t\t_close();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// - - - - -\n\t\t\t\tfunction _close(){\n\t\t\t\t\t$o.parent().removeClass('hover');\n\t\t\t\t}\n\t\t\t}"
              },
              ".idesc": {
                "delay": 10,
                "bind": "function (d,v,$o) {\n\t\t\t\tvar that = this,\n\t\t\t\t\t\tlist = this.List, \n\t\t\t\t\t\tt = that.Txt[d.type],\n\t\t\t\t\t\tds = Object.size(d.value),\n\t\t\t\t\t\th=\"\";\n\t\t\t\tif (v!=null) {\n\t\t\t\t\td.state = ((d.state==1 && !(d.manifest==\"$multi\" && !ds))|| !d.level?2:1);\n\t\t\t\t\tif (d.state==2) that.List = that.MakeList(d);\n\t\t\t\t\telse {\n\t\t\t\t\t\tthat.List = [];\n\t\t\t\t\t\tthat.ShowItems = null;\n\t\t\t\t\t}\n\t\t\t\t\tthat.RT('MemState')(d);\n\t\t\t\t}\n\n\t\t\t\tif (d.state==1 && that.ShowItems) {\n\t\t\t\t\th = that.ShowItems +(ds?\" ▸\":\"\");\n\t\t\t\t} else {\n\t\t\t\t\th = t[0]+ds+t[1] +\" \"\n\t\t\t\t\th += (!ds || !d.level?\"\":!that.List.length?\"▸\":\"▾\");\n\t\t\t\t\tif (d.state == 2) h = '<span class=\"o40\">'+h+'</span>';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn h;\n\t\t\t}",
                "events": "click.my"
              }
            },
            "style": {
              ">.ivalue>.ilist>.irow": "function () {\n\t\t\tvar x = 200,\n\t\t\t\t\tx1 = x - 27;\n\t\t\treturn {\n\t\t\t\t' .inav':'padding-left:'+x1+'px;',\n\t\t\t\t' .inav>.ikey':'margin-left:-'+x1+'px;width:'+x1+'px;',\n\t\t\t\t'>.inav':'padding-left:'+x+'px;',\n\t\t\t\t'>.inav>.ikey':'margin-left:-'+x+'px;width:'+x+'px;',\n\t\t\t}\n\t\t}",
              " .inav": "margin:0;"
            },
            "HTML": "<div class=\"inav\"><div class=\"ikey\"></div><div class=\"idesc cp\">–</div></div><div class=\"ivalue imulti hide\"><div class=\"ilist\"></div></div><div class=\"iact buttons\"><button class=\"btn-takeout button\" title=\"Copy / paste / edit as JSON\"><span class=\"fi-shopping-bag\"></span></button><button id=\"btn-upload\" class=\"button\" title=\"Add attachment\"><span class=\"fi-paperclip\"></span></button><button class=\"btn-del button red\"  title=\"Del all attachments\">&thinsp;<span class=\"fi-x\"></span>&thinsp;</button></div>",
            "Add": {
              "init": "function ($o) {\n\t\tvar that = this;\n\t\t\n\t\t$o.html(that.HTML);\n\t}",
              "data": {
                "files": []
              },
              "ui": {
                "#flist": {
                  "bind": "files",
                  "list": ">div",
                  "merge": false,
                  "id": [
                    "name"
                  ],
                  "hash": "function (e) {return cw.lib.sdbm([e.name, e.content_type, e.data.length, e.data.to(100)])}",
                  "manifest": {
                    "ui": {
                      "#fname": "name",
                      "#fsize": "function (d,v) {\n\t\t\t\t\t\treturn (d.data.length/4*3|0).bytes(1).replace(/B$/,'b').replace(\n\t\t\t\t\t\t\t/^([0-9\\.]+)([a-z]+)$/i,\n\t\t\t\t\t\t\t'$1<div class=\"w35 dib tal pl2\">$2</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}",
                      "#ftype": "content_type",
                      "#btn-fdel": {
                        "delay": 10,
                        "bind": "function (d,v) {if (v!=null) this.my.remove();}",
                        "events": "click.my"
                      }
                    }
                  }
                },
                "#btn-attadd": {
                  "bind": "function (d,v) {if(v!=null) this.my.commit();}",
                  "css": {
                    ":disabled": "function (d) {return !d.files.length}"
                  },
                  "watch": "#flist"
                },
                "#btn-attcancel": "function (d,v) {if(v!=null) this.my.cancel();}",
                "#mupload": {
                  "bind": "function (d,v,$o) {\n\t\t\t\tif (v==null || !v) return;\n\t\t\t\tvar that = this,\n\t\t\t\t\t\tflist = $o[0].files,\n\t\t\t\t\t\tfiles = [],\n\t\t\t\t\t\tresult = d.files.reduce(function(a,b){a[b.name] = b;return a;},{}),\n\t\t\t\t\t\tpis = [];\n\t\t\t\t\n\t\t\t\tfor(var i=0; i<flist.length;i++) files.push(flist[i]);\n\t\t\t\t\n\t\t\t\tfiles.forEach(function(f, i){\n\t\t\t\t\tif (!f) return;\n\t\t\t\t\t//a.name = f.name;\n\t\t\t\t\tvar data,\n\t\t\t\t\t\t\ta = {\n\t\t\t\t\t\t\t\tname:f.name,\n\t\t\t\t\t\t\t\tcontent_type: f.type||\"application/octet-stream\"\n\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\tpi = $.Deferred(),\n\t\t\t\t\t\t\tfr = new FileReader(), \n\t\t\t\t\t\t\tri, \n\t\t\t\t\t\t\tsb64 = [];\n\t\t\t\t\t\n\t\t\t\t\tfr.onload = function(e){\n\t\t\t\t\t\tri = new Uint8Array(e.target.result);\n\t\t\t\t\t\tfor (var i=0; i<ri.length; i++) sb64.push(String.fromCharCode(ri[i]));\n\t\t\t\t\t\tdata = window.btoa(sb64.join(\"\"));\n\t\t\t\t\t\ta.data = data;\n\t\t\t\t\t\t//a.length = sb64.length;\n\t\t\t\t\t\tresult[f.name] = a;\n\t\t\t\t\t\tpi.resolve();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tfr.readAsArrayBuffer(f);\n\t\t\t\t\tpis.push(pi.promise())\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tQ.allSettled(pis)\n\t\t\t\t.then(function(){\n\t\t\t\t\td.files = Object.values(result);\n\t\t\t\t\t$o.wrap('<form>').closest('form').get(0).reset();\n\t\t\t\t\t$o.unwrap('<form>');\n\t\t\t\t\tthat.my.recalc('#flist');\n\t\t\t\t});\n\t\t\t}"
                }
              },
              "HTML": "<div class=\"fs130 lh160 bolder\">Add files</div><div id=\"flist\" class=\"fs95\"><div class=\"frow  mb6\"><div id=\"btn-fdel\" class=\"red2 w20 dib vat pt3 cp\">✕</div><div class=\"w220 dib vat\"><input type=\"text\" class=\"w100p\" id=\"fname\" placeholder=\"File path/name.ext\"></div><div id=\"fsize\" class=\"w90 dib vat pt3 gray tar\"></div><div id=\"ftype\" class=\"w150 dib vat pt3 gray nw ell\"></div></div></div><div class=\"mt10\"><input id=\"mupload\" type=\"file\" multiple class=\"h30 w100p cp\" style=\"position:absolute;z-index:1;opacity:0;\"><div class=\"h30 pseudolink tdn\">Select files to attach...</div></div><div class=\"mt5 pt10 btd\"><button id=\"btn-attadd\" class=\"green mr2\">Attach files</button><button id=\"btn-attcancel\">Cancel</button></div>"
            }
          },
          "$file": {
            "id": "Sys.JSON.File",
            "data": {},
            "List": [],
            "init": "function _init_file($o,form) {\n\t\t\n\t\t// Special replacement for ._attachments member (a file)\n\t\t\n\t\tvar that = this, \n\t\t\t\td = form.data;\n\t\t$o.html(that.HTML);\n\t\t\n\t\t//if (d.state > 1) that.List = that.MakeList(d);\n\t\t\n\t\t$o.find(\".ilist:eq(0)\").on(\"change.my\", function(){\n\t\t\tthat.RT('Rejoin')(d, that.List);\n\t\t}.debounce(300));\n\t\t\n\t\t$o.on(\"click.my\", \".ilist:eq(0) .btn-del\", function(evt){\n\t\t\tevt.stopPropagation();\n\t\t\tvar $f = $(this).parents(\".my-form\").eq(0);\t\t\n\t\t\tvar p = $f.parent().data(\"my\").data,\n\t\t\t\t\tt = $.type(p.value),\n\t\t\t\t\tkey = $f.my(\"data\").key;\n\t\t\t\n\t\t\tif (t==\"object\") delete p.value[key];\n\t\t\telse if (t==\"array\") p.value.removeAt(key);\n\t\t\t\n\t\t\tthat.RT('Lib').relist($o, that, form);\n\t\t});\n\t\t\n\t}",
            "ShowItems": null,
            "ui": {
              ".ikey": {
                "delay": 10,
                "bind": "function (d,v) {\n\t\t\t\tvar that = this;\n\t\t\t\tvar key = ( \n\t\t\t\t\t(!/^(|\\s+)$/.test(d.key))\n\t\t\t\t\t?d.key.truncate(50,/\\//.test(d.key)?'left':'middle','…')\n\t\t\t\t\t:'\"'+d.key+'\"' \n\t\t\t\t).escapeHTML(); \n\t\t\t\t\n\t\t\t\tif (d.value.revpos==null) return key;\n\t\t\t\t\n\t\t\t\tvar rd = that.Root().data,\n\t\t\t\t\t\tlink = [rd.baseurl.replace(/\\/$/,''), rd.dbname, rd.doc._id, d.key ].join('/').escapeHTML();\n\t\t\t\t\n\t\t\t\treturn '<a href=\"{1}\" target=\"_blank\" class=\"tdn\">{2}</a>'.assign(link, key)\n\t\t\t}",
                "watch": [
                  ".idesc"
                ]
              },
              ".idesc": {
                "delay": 10,
                "bind": "function (d,v,$o) {\n\n\t\t\t\tvar that = this,\n\t\t\t\t\t\trd = that.Root().data,\n\t\t\t\t\t\tlink = [rd.baseurl.replace(/\\/$/,''), rd.dbname, rd.doc._id, d.key].join('/').escapeHTML(),\n\t\t\t\t\t\tv = d.value,\n\t\t\t\t\t\tsize = (\n\t\t\t\t\t\t\t(v.data?v.data.length/4*3|0:0) \n\t\t\t\t\t\t\t|| +v.length \n\t\t\t\t\t\t\t|| +v.size \n\t\t\t\t\t\t\t|| 0\n\t\t\t\t\t\t).bytes(1).replace(/B$/,'b').replace(\n\t\t\t\t\t\t\t/^([0-9\\.]+)([a-z]+)$/i,\n\t\t\t\t\t\t\t'$1<div class=\"w35 dib tal pl2\">$2</div>'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmime = (v.content_type || 'application/octet-stream').escapeHTML(),\n\t\t\t\t\t\tfname = d.key.split('/').last().escapeHTML(),\n\t\t\t\t\t\trevpos = (!v.digest || v.revpos==null)?'<span class=\"fi-burst-new green1\"></span> New':('r:  '+v.revpos),\n\t\t\t\t\t\th = [\n\t\t\t\t\t\t\t'<div class=\"dib vat w100 pr10 tar o90\">{1}</div>'.assign(size),\n\t\t\t\t\t\t\t'<div class=\"dib vat w200 pr10 nw ell o60\">{1}</div>'.assign(mime),\n\t\t\t\t\t\t\t'<div class=\"dib vat o60 fs95\">{1}</div>'.assign(revpos)\n\t\t\t\t\t\t].join('');\n\t\t\t\t\n\t\t\t\treturn h;\n\t\t\t}",
                "events": "click.my"
              },
              "#btn-download": {
                "bind": "function (d,v,$o) {\n\t\t\t\tif (d.value.revpos == null) return;\n\t\t\t\tvar rd = this.Root().data;\n\t\t\t\t$o.attr('download', d.key.split('/').last());\n\t\t\t\t$o.attr('href', [rd.baseurl.replace(/\\/$/,''), rd.dbname, rd.doc._id, d.key].join('/'));\n\t\t\t}",
                "css": {
                  ":disabled": "function (d,v) {return d.value.revpos == null}"
                }
              }
            },
            "style": {
              " .ikey": "cursor:normal;"
            },
            "HTML": "<div class=\"inav\"><div class=\"ikey xgray fs100\"></div><div class=\"idesc\">–</div></div><div class=\"iact buttons\"><a id=\"btn-download\" class=\"button fs90\" title=\"Download file\" download=\"file.dat\"><span class=\"fi-download\"></span></a><button class=\"btn-del button red\"  title=\"Del node\">&thinsp;<span class=\"fi-x\"></span>&thinsp;</button></div>"
          }
        },
        "jsontext": {}
      },
      "SVG": {
        "logo": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0\" y=\"0\" width=\"31\" height=\"16\" viewBox=\"0, 0, 31, 16\">\n  <g id=\"PhotonLogo\">\n     <path d=\"M15.5,0 C20.3,0.0 24.2,0.6 27.8,1.9 L28.0,1.9 C29.6,2.5 29.2,2.4 29.4,2.4 L31,3.1 L31,16 L0,16 L0,3.1 C1.7,2.4 1.3,2.5 2.4,2.1 L2.9,1.9 C6.7,0.6 10.6,0.0 15.1,0.0 z\" \n\t\t\t\t\t fill=\" #FFFFFF\" fill-opacity=\"1\"/>\n     <path d=\"M30,12 L30,15 L1,15 L1,12 L30,12 z\" \n\t\t\t\t\t fill=\" #D51D1D\"/>\n     <path d=\"M3.0,3.0 C3.1,3.7 3.2,4.3 3.2,4.6 C3.4,5.7 3.9,6.6 4.7,7.2 C5.4,7.7 6.2,8.0 7.0,8.0 C8.0,7.9 11.6,8.0 13.1,8.0 C14.0,8.0 14.6,8.6 15,9.5 L15,11 L1,11 L1,3.8 C2.6,3.1 1.9,3.4 3.0,3.0 z\" \n\t\t\t\t\t fill=\" #FA4848\"/>\n     <path d=\"M15,1 L15,7.7 C14.6,7.1 14.0,6.9 13.4,6.8 C9.5,6.8 8.6,6.8 7.6,6.8 C7.4,6.8 7.3,6.8 7.3,6.8 C5.8,6.8 4.4,5.7 4.1,4.0 L4,2.8 C7.5,1.5 11.3,1.0 15,1 z\" \n\t\t\t\t\t fill=\" #FF6767\"/>\n     <path d=\"M27.9,3.0 C27.8,3.7 27.7,4.3 27.7,4.6 C27.5,5.7 27.0,6.6 26.2,7.2 C25.5,7.7 24.7,8.0 23.9,8.0 C22.9,7.9 19.3,8.0 17.8,8.0 C16.9,8.0 16.3,8.6 16,9.5 L16,11 L30,11 L30,3.8 C28.3,3.1 29.0,3.4 27.9,3.0 z\" \n\t\t\t\t\t fill=\" #FA4848\"/>\n     <path d=\"M16,1 L16,7.7 C16.3,7.1 16.9,6.9 17.5,6.8 C21.4,6.8 22.3,6.8 23.3,6.8 C23.5,6.8 23.6,6.8 23.6,6.8 C25.1,6.8 26.5,5.7 26.8,4.0 L27,2.8 C23.4,1.5 19.6,1.0 16,1 z\" \n\t\t\t\t\t fill=\" #FF6767\"/>\n  </g>\n</svg>",
        "user": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0\" y=\"0\" width=\"32\" height=\"32\" viewBox=\"0, 0, 32, 32\">\n  <g id=\"btn-user-svg\">\n    <g>\n      <path d=\"M26.25,20.65 L23.55,23.35 L21.75,21.55 M24,17.5 C21.51,17.5 19.5,19.51 19.5,22 C19.5,24.48 21.51,26.5 24,26.5 C26.48,26.5 28.5,24.48 28.5,22 C28.5,19.51 26.48,17.5 24,17.5 z\" fill-opacity=\"0\" \n      stroke=\" #B3FF94\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M18.99,18.44 L16,17.36 L16,15.32 M17,22.5 L6.5,22.5 L6.5,21.01 C6.5,20.01 7.11,19.11 8.05,18.77 L12,17.36 L12,15.32 M17.94,11.23 C17.94,8.62 16.18,6.5 14,6.5 C11.81,6.5 10.05,8.62 10.05,11.23 C10.05,13.85 11.81,15.97 14,15.97 C16.17,15.97 17.94,13.85 17.94,11.23 z M10.09,10.47 C10.57,10.72 11.05,10.84 11.62,10.84 C12.76,10.84 14.14,10.17 14.59,9.31 C15.33,10.61 16.19,11.10 17.54,10.84 C17.67,10.81 17.78,10.82 17.91,10.81\" fill-opacity=\"0\" \n      stroke=\" #FFFFFF\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </g>\n  </g>\n</svg>",
        "login": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0\" y=\"0\" width=\"32\" height=\"32\" viewBox=\"0, 0, 32, 32\">\n  <g id=\"Layer_1\">\n    <g>\n      <path d=\"M16.5,19.5 L4.5,19.5 L4.5,10.5 L27.5,10.5 L27.5,16.52 M8.5,17 L8.5,13 M6.82,16.09 L10.17,13.90 M6.83,13.89 L10.16,16.11 M14.5,17 L14.5,13 M12.82,16.09 L16.17,13.90 M12.83,13.89 L16.16,16.11\" fill-opacity=\"0\" \n      stroke=\" #FFFFFF\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M18.5,19.83 L27.5,19.83 L27.5,26.50 L18.5,26.50 z M22.97,22.57 L22.97,24.24 M25.67,19.83 L25.67,19.00 C25.67,17.62 24.46,16.50 22.97,16.50 C21.48,16.50 20.27,17.62 20.27,19.00 L20.27,19.83 M23.42,22.15 C23.42,21.92 23.22,21.74 22.97,21.74 C22.72,21.74 22.52,21.92 22.52,22.15 C22.52,22.38 22.72,22.57 22.97,22.57 C23.22,22.57 23.42,22.38 23.42,22.15 z\" fill-opacity=\"0\" \n      stroke=\" #FFC300\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </g>\n  </g>\n</svg>",
        "config": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0\" y=\"0\" width=\"32\" height=\"32\" viewBox=\"0, 0, 32, 32\">\n  <g id=\"Layer_1\">\n    <path d=\"M16.48,18.5 L16.48,11.5 M22.51,16.5 L22.51,18.5 M10.48,7.5 L10.48,12.5 M10.48,14.5 L10.48,18.5 M22.51,7.5 L22.51,14.5 M16.48,7.5 L16.48,9.5 M20.51,16.5 L24.51,16.5 L24.51,14.5 L20.51,14.5 z M14.48,11.5 L18.48,11.5 L18.48,9.5 L14.48,9.5 z M8.48,14.5 L12.48,14.5 L12.48,12.5 L8.48,12.5 z M22.52,21.5 C21.69,21.5 21.02,22.17 21.02,23 C21.02,23.82 21.69,24.5 22.52,24.5 C23.35,24.5 24.02,23.82 24.02,23 C24.02,22.17 23.35,21.5 22.52,21.5 z M16.48,21.5 C15.65,21.5 14.98,22.17 14.98,23 C14.98,23.82 15.65,24.5 16.48,24.5 C17.31,24.5 17.98,23.82 17.98,23 C17.98,22.17 17.31,21.5 16.48,21.5 z M10.48,21.5 C9.65,21.5 8.98,22.17 8.98,23 C8.98,23.82 9.65,24.5 10.48,24.5 C11.31,24.5 11.98,23.82 11.98,23 C11.98,22.17 11.31,21.5 10.48,21.5 z\" fill-opacity=\"0\" \n    stroke=\" #FFFFFF\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  </g>\n</svg>",
        "share": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0\" y=\"0\" width=\"32\" height=\"32\" viewBox=\"0, 0, 32, 32\">\n  <g id=\"btn-share-svg\">\n    <path d=\"M25.5,15 C26.60,15 27.5,15.89 27.5,17 C27.5,18.10 26.60,19 25.5,19 C24.39,19 23.5,18.10 23.5,17 C23.5,15.89 24.39,15 25.5,15 z M25.5,22.5 C24.39,22.5 23.5,23.39 23.5,24.5 C23.5,25.60 24.39,26.5 25.5,26.5 C26.60,26.5 27.5,25.60 27.5,24.5 C27.5,23.39 26.60,22.5 25.5,22.5 z M17.5,19 C16.39,19 15.5,19.89 15.5,21 C15.5,22.10 16.39,23 17.5,23 C18.60,23 19.5,22.10 19.5,21 C19.5,19.89 18.60,19 17.5,19 z M23.71,17.89 L19.28,20.10 M23.5,23.5 L19.37,21.70 M12.5,16.5 L10.5,14.5 L12.5,12.5 M15.5,16.5 L17.5,14.5 L15.5,12.5 M20.5,14.5 L20.5,10.5 L17.5,7.5 L7.5,7.5 L7.5,22.5 L13.5,22.5 M20.5,10.5 L17.5,10.5 L17.5,7.5\" fill-opacity=\"0\" \n\t\t\t\t\tstroke=\" #FFFFFF\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  </g>\n</svg>"
      },
      "Confirm": {
        "id": "cw.Photon.Confirm",
        "params": {
          "delay": 5
        },
        "data": {
          "text": "",
          "css": "xgray",
          "yes": "Yes",
          "no": "No",
          "cancel": "Cancel",
          "cmd": "",
          "yescss": "green"
        },
        "init": "function ($o,form) {\n\t\tvar d=form.data;\n\t\t$o.formgen([\n\t\t\t'<div class=\"'+d.css+'\">'+d.text+'</div>',\n\t\t\t{\n\t\t\t\tlabel:\"70px\", \n\t\t\t\trow:form.params.width+\"px\", \n\t\t\t\trowCss:\"my-row mt15 pt15 fs90 mb-5 xgray btd\"\n\t\t\t},\n\t\t\t[\n\t\t\t\t'', \n\t\t\t\t'spn#btn-yes.button.'+d.yescss+'.mr5.hide',\t{txt:(d.yes+'')}, \n\t\t\t\t'spn#btn-no.button.mr5.hide',\t\t\t\t\t{txt:(d.no+'')}, \n\t\t\t\t'spn#btn-cancel.button.fr.hide',\t\t\t{txt:(d.cancel+'')}\n\t\t\t]\n\t\t]);\n\t}",
        "ui": {
          "#btn-yes": {
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v!=null) {\n\t\t\t\t\td.cmd=\"yes\";\n\t\t\t\t\t$o.trigger(\"commit\");\n\t\t\t\t}\n\t\t\t}",
            "events": "click.my",
            "css": {
              "self:hide": "function (d) { return !d.yes}"
            }
          },
          "#btn-no": {
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v!=null) {\n\t\t\t\t\td.cmd=\"no\";\n\t\t\t\t\t$o.trigger(\"commit\");\n\t\t\t\t}\n\t\t\t}",
            "events": "click.my",
            "css": {
              "self:hide": "function (d) { return !d.no}"
            }
          },
          "#btn-cancel": {
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v!=null) {\n\t\t\t\t\td.cmd=\"cancel\";\n\t\t\t\t\t$o.trigger(\"cancel\");\n\t\t\t\t}\n\t\t\t}",
            "events": "click.my",
            "css": {
              "self:hide": "function (d) { return !d.cancel}"
            }
          }
        }
      },
      "Tab": {
        "id": "cw.Photon.Tab",
        "lang": {},
        "data": {
          "id": "",
          "name": "",
          "type": "",
          "hash0": "",
          "hash1": "",
          "active": false,
          "path": [],
          "error": false,
          "run": false
        },
        "init": "function ($o) {\n\t\tvar that = this;\n\t\t$o.html(that.HTML.assign(that.lang));\n\t}",
        "ui": {
          "#l-tabname": {
            "bind": "function (d,v,$o) {\n\t\t\t\tvar that = this;\n\t\t\t\tthat.my.find('a#l-tabname').attr('href','#'+(d.path||[]).join('/'));\n\t\t\t\tthat.my.root().toggleClass('active',!!d.active);\n\t\t\t\treturn d.name.escapeHTML();\n\t\t\t}",
            "css": {
              "smaller": "function (d) {return d.name.length > 20}"
            },
            "events": "click.my"
          },
          "#l-tabstate": {
            "css": {
              "hide": "function (d) {return !d.error && d.hash0==d.hash1}",
              "red": "function (d) {return !!d.error;}"
            },
            "watch": "#l-tabname"
          },
          "#btn-tabclose": {
            "bind": "function (d,v) {\n\t\t\t\tif(v!=null) this.my.trigger('#btn-tabclose', 'tabclose', d.id);\n\t\t\t}",
            "events": "click.my"
          },
          "#tab-proxy": {
            "bind": "function () {}",
            "listen": {
              "pho_appbusy": "function (d,v) {\n\t\t\t\t\tif (!Object.isObject(v) || v.id != d.id) return;\n\t\t\t\t\t\n\t\t\t\t\tthis.my.root().toggleClass('tab-busy',!!v.busy);\n\t\t\t\t}",
              "pho_pathchange": "function (d,v) {\n\t\t\t\t\tif (!Object.isObject(v)) return;\n\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\tnewpath = v.path.slice(0);\n\t\t\t\t\tif (v.id != d.id) {\n\t\t\t\t\t\t// other tab changed path, check is this tab a dup\n\t\t\t\t\t\tif (newpath.join('\\ufffd') != d.path.join('\\ufffd')) return;\n\t\t\t\t\t\t// decide should we close\n\t\t\t\t\t\tif (d.hash0 == d.hash1) that.Pho('Close')({tabid:d.id, enforce:true});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// it is all about this tab\n\t\t\t\t\t\td.path = newpath;\n\t\t\t\t\t\td.name = v.title || d.name;\n\t\t\t\t\t\tif(that.Pho('_compiled')) location.replace('#'+newpath.join('/'));\n\t\t\t\t\t\tthat.my.check('#l-tabname');\t\n\t\t\t\t\t}\n\t\t\t\t}"
            }
          }
        },
        "HTML": "<a href=\"\" id=\"l-tabname\"></a><div id=\"l-tabstate\" class=\"l-tabmark\">•</div><div id=\"btn-tabclose\" class=\"l-tabmark\" title=\"{BTN_CLOSETAB}\">✕</div><div id=\"tab-proxy\" class=\"hide\"></div>"
      },
      "Login": {
        "id": "cw.Photon.Login",
        "lang": {},
        "data": {
          "name": "",
          "password": ""
        },
        "init": "function ($o) {\n\t\tvar that = this;\n\t\t$o.html(that.HTML.assign(that.lang))\n\t}",
        "ui": {
          "#uname": "name",
          "#upwd": "password",
          "#btn-send": {
            "bind": "function (d,v) {\n\t\t\t\tif(v==null) return;\n\t\t\t\tthis.doLogin();\n\t\t\t\tthis.my.cancel();\n\t\t\t}",
            "css": {
              ":disabled": "function (d,v) { return !d.name || !d.password; }"
            },
            "watch": [
              "#uname",
              "#upwd"
            ]
          },
          "#btn-cancel": "function (d,v) {\n\t\t\tif(v==null) return;\n\t\t\tthis.my.cancel();\n\t\t}"
        },
        "HTML": "<div class=\"fs130 lh160 bolder\">{TXT_LOGIN}</div><input class=\"w100p fs120 mb10\" id=\"uname\" type=\"text\" placeholder=\"{PLC_UNAME}\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><input class=\"w100p fs120 mb10\" id=\"upwd\" type=\"password\" placeholder=\"{PLC_PWD}\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><div class=\"mt10 pt10 btd\"><button id=\"btn-send\" class=\"green mr2\">{BTN_LOGIN}</button><button id=\"btn-cancel\">{BTN_CANCEL}</button></div>",
        "doLogin": "function () {\n\t\tvar that = this,\n\t\t\t\tcompiled = that.Pho('_compiled'),\n\t\t\t\tcreds = $.extend(true,{},that.data),\n\t\t\t\tl = that.lang;\n\t\tthat.Req({\n\t\t\turl:['_session'], method:'POST', dataType:'json',\n\t\t\theaders:{'Content-type':'application/json'},\n\t\t\tdata:JSON.stringify(creds)\n\t\t})\n\t\t.then(function(res){\n\t\t\t// reload db list and related\n\t\t\tvar me = {name:res.name || creds.name, roles:res.roles};\n\t\t\tif (compiled) $.extend(true, window.DDOC._me, me);\n\t\t\t$.my.radio('userCtx',me);\n\t\t\tthat.Pho('my').check('#btn-aside-auth');\n\t\t\tcw.lib.note(l.MSG_AUTH_OK.assign((creds.name||'').escapeHTML()), 'ok' );\n\t\t})\n\t\t.fail(function(code, err){\n\t\t\tif (compiled) $.extend(window.DDOC._me, {name:'',roles:[]});\n\t\t\t$.my.radio('userCtx',{name:null,roles:[]});\n\t\t\tthat.Pho('my').check('#btn-aside-auth');\n\t\t\tcw.lib.note(l.MSG_AUTH_FAIL.assign(\n\t\t\t\t(creds.name||'').escapeHTML(),\n\t\t\t\tcode,\n\t\t\t\terr.escapeHTML()\n\t\t\t), 'error' );\n\t\t});\n\t}"
      },
      "Logout": {
        "id": "cw.Photon.Logout",
        "lang": {},
        "data": {},
        "init": "function ($o) {\n\t\tvar that = this;\n\t\t$o.html(that.HTML.assign(that.lang))\n\t}",
        "HTML": "<div class=\"gray\"><div><span class=\"fi-torso\"></span> <a id=\"btn-profile\" href=\"\" class=\"pseudolink tdn\">{TXT_PROFILE}</a></div><div><span class=\"fi-power\"></span> <span id=\"btn-logout\" class=\"pseudolink tdn\">{TXT_LOGOUT}</span></div></div>",
        "ui": {
          "#btn-profile": {
            "delay": 30,
            "bind": "function (d,v,$o) {\n\t\t\t\t$o.attr('href','#_users/'+('org.couchdb.user:'+cw.me()));\n\t\t\t\tif (v!=null) this.my.cancel();\n\t\t\t}"
          },
          "#btn-logout": {
            "delay": 30,
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v==null) return;\n\t\t\t\tthis.doLogout();\n\t\t\t\tthis.my.cancel();\n\t\t\t}"
          }
        },
        "doLogout": "function () {\n\t\tvar that = this,\n\t\t\t\tl = that.lang,\n\t\t\t\tes = function(s){return (s+'').escapeHTML()};\n\t\tcw.lib.note(l.MSG_LOGOUT_START, '', 1000);\n\t\tthat.Req({\n\t\t\turl:['_session'], method:'POST', dataType:'json',\n\t\t\theaders:{'Content-type':'application/json'},\n\t\t\tdata:JSON.stringify({name:'0',password:'0'})\n\t\t})\n\t\t.then(function(res){\n\t\t\tcw.lib.note(l.MSG_LOGOUT_FAIL.assign(999,'Server returned invalid response'), 'error');\n\t\t})\n\t\t.fail(function(code, err, msg){\n\t\t\tif (code!=401 && code !=403) {\n\t\t\t\tcw.lib.note(l.MSG_LOGOUT_FAIL.assign(code,es(err)), 'error');\n\t\t\t\tthat.Pho('my').check('#btn-aside-auth');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcw.lib.note(l.MSG_LOGOUT_OK, 'ok');\n\t\t\t\tif (that.Pho('_compiled')) $.extend(window.DDOC._me, {name:'',roles:[]});\n\t\t\t\t$.my.radio('userCtx',{name:'',roles:[]});\n\t\t\t\tthat.Pho('my').check('#btn-aside-auth');\n\t\t\t}\n\t\t})\n\t}"
      },
      "Compact": {
        "id": "cw.Photon.Compact",
        "lang": {},
        "data": {
          "selection": [],
          "ops": [
            "docs"
          ],
          "ddocs": [],
          "dselection": []
        },
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\td.All = that.Pho('All');\n\t\td.all = Object.keys(d.All).sort();\n\t\t$o.html(that.HTML.assign(that.lang));\n\t}",
        "ui": {
          "#ctitle": {
            "bind": "function (d) {\n\t\t\t\treturn d.selection.length==1?this.lang.TXT_TITLE1:this.lang.TXT_TITLE;\n\t\t\t}",
            "watch": [
              "#dbs"
            ]
          },
          "#dbs": {
            "init": "function ($o) {\n\t\t\t\t$o.select2({\n\t\t\t\t\tdata:this.data.all.map(function(e){return {id:e,text:e} }),\n\t\t\t\t\tmultiple:true,\n\t\t\t\t\tplaceholder:this.lang.PLC_DBS,\n\t\t\t\t\tminimumResultsForSearch:12\n\t\t\t\t});\n\t\t\t}",
            "bind": "selection",
            "check": "function (d,v) {return !v.length?this.lang.ERR_DBS:''}",
            "css": {
              ":disabled": "function (d) {return d.ddocs.length>0}"
            }
          },
          "#dbops": {
            "init": "function ($o) {\n\t\t\t\t$o.tags({\n\t\t\t\t\ttags:this.lang.TAG_OP.to(this.data.ddocs.length?3:2)\n\t\t\t\t})\n\t\t\t}",
            "bind": "ops",
            "check": "function (d,v) {return !v.length?this.lang.ERR_OP:''}"
          },
          "#ddocs": {
            "init": "function ($o) {\n\t\t\t\t$o.select2({\n\t\t\t\t\tdata:this.data.ddocs.map(function(e){return {id: e,text:'_design/'+e} }),\n\t\t\t\t\tmultiple:true,\n\t\t\t\t\tplaceholder:this.lang.PLC_DDOCS,\n\t\t\t\t\tminimumResultsForSearch:12\n\t\t\t\t});\n\t\t\t}",
            "bind": "dselection",
            "check": "function (d,v) {return !v.length && d.ops.indexOf('ddocs')>-1?this.lang.ERR_DDOCS:''}",
            "css": {
              "hide": "function (d,v) {return d.ops.indexOf('ddocs')==-1 || d.selection.length!=1}"
            },
            "watch": [
              "#dbops",
              "#dbs"
            ]
          },
          "#btn-start": {
            "delay": 50,
            "bind": "function (d,v) {\n\t\t\t\tif(v==null) return;\n\t\t\t\ttry {\n\t\t\t\t\tthis.doCompact();\n\t\t\t\t}catch(e){\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t}\n\t\t\t\tthis.my.cancel();\n\t\t\t}",
            "css": {
              ":disabled": "function (d,v) {\n\t\t\t\t\treturn !d.selection.length || !d.ops.length || !this.my.valid();\n\t\t\t\t}"
            },
            "watch": [
              "#dbs",
              "#dbops",
              "#ddocs"
            ]
          },
          "#btn-cancel": "function (d,v) {\n\t\t\tif(v==null) return;\n\t\t\tthis.my.cancel();\n\t\t}"
        },
        "doCompact": "function () {\n\t\tvar that = this,\n\t\t\t\tres = $.extend(true, {}, that.data),\n\t\t\t\tcompiled = that.Pho('_compiled'),\n\t\t\t\tes = function(s){return (s+'').escapeHTML()},\n\t\t\t\tl = that.lang,\n\t\t\t\tctr = res.selection.length;\n\t\t\n\t\tif (!res.ops.length || !ctr || !Object.keys(res.All).intersect(res.selection).length) return;\n\n\t\tres.selection.forEach(function(db){\n\n\t\t\tvar pis = [];\n\t\t\t// compact docs\n\t\t\tif (res.ops.find('docs')) pis.push(\n\t\t\t\tthat.Req({\n\t\t\t\t\turl:[db,'_compact'], \n\t\t\t\t\tmethod:'POST', \n\t\t\t\t\theaders:{'Content-type':'application/json'}\n\t\t\t\t}).\n\t\t\t\tfail(function(code, err, msg){\n\t\t\t\t\tconsole.log('Error starting data compaction of '+db, code, err, msg);\n\t\t\t\t})\n\t\t\t);\n\t\t\t// purge old views\n\t\t\tif (res.ops.find('views')) pis.push(\n\t\t\t\tthat.Req({\n\t\t\t\t\turl:[db,'_view_cleanup'], \n\t\t\t\t\tmethod:'POST', \n\t\t\t\t\theaders:{'Content-type':'application/json'}\n\t\t\t\t}).\n\t\t\t\tfail(function(code, err, msg){\n\t\t\t\t\tconsole.log('Error starting purging old views of '+db, code, err, msg);\n\t\t\t\t})\n\t\t\t);\n\t\t\t\n\t\t\t// compact views\n\t\t\tif (res.ops.find('ddocs')) {\n\t\t\t\tres.dselection.compact(true)\n\t\t\t\t.forEach(function(ddoc){\n\t\t\t\t\tpis.push(\n\t\t\t\t\t\tthat.Req({\n\t\t\t\t\t\t\turl:[db,'_compact', ddoc], \n\t\t\t\t\t\t\tmethod:'POST', \n\t\t\t\t\t\t\theaders:{'Content-type':'application/json'}\n\t\t\t\t\t\t}).\n\t\t\t\t\t\tfail(function(code, err, msg){\n\t\t\t\t\t\t\tconsole.log('Error starting view compaction of '+db+'/_design/'+ddoc, code, err, msg);\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tQ.all(pis)\n\t\t\t.then(function(res){\n\t\t\t\tcw.lib.note(l.MSG_COMPACT_START.assign(db));\n\t\t\t\t_end();\n\t\t\t})\n\t\t\t.fail(function(code, err, msg){\n\t\t\t\tcw.lib.note(l.MSG_COMPACT_FAIL_SOME, 'error');\n\t\t\t\t_end();\n\t\t\t});\n\n\t\t}.lazy(that.Pho('Cfg').batchCompactDelay));\n\t\t\n\t\tfunction _end(){\n\t\t\tctr-=1;\n\t\t\tif (ctr>0) return;\n\t\t\t_relist.debounce(500)();\n\t\t\t_relist.debounce(2000)();\n\t\t\t_relist.debounce(6000)();\n\t\t}\n\t\t\n\t\tfunction _relist(){ $.my.radio('dblist',res.selection); }\n\t}",
        "HTML": "<div id=\"ctitle\" class=\"fs130 mb10 bolder\">{TXT_TITLE}</div><div class=\"mb10 fs105\"><input id=\"dbs\" class=\"w100p\"></div><div class=\"mb10\"><span id=\"dbops\"></span></div><div class=\"mb10 fs105 hide\"><input id=\"ddocs\" class=\"w100p\"></div><div class=\"mt10 pt10 btd\"><button id=\"btn-start\" class=\"green mr2\">{BTN_START}</button><button id=\"btn-cancel\">{BTN_CANCEL}</button></div>",
        "style": {
          " input": "display:inline-block;"
        }
      },
      "NewDB": {
        "id": "cw.Photon.NewDB",
        "lang": {},
        "inherit": [
          "Req"
        ],
        "data": {
          "dbs": [],
          "all": [],
          "allo": {},
          "users": [],
          "roles": [],
          "admins": {
            "names": [],
            "roles": []
          },
          "members": {
            "names": [],
            "roles": []
          }
        },
        "Users": [],
        "S2": "function (sel,tags,dict) {\n\t\tthis.my.find(sel).select2({\n\t\t\ttags:tags,\n\t\t\tplaceholder:this.lang[dict],\n\t\t\tminimumResultsForSearch:12,\n\t\t\ttokenSeparators:[' ',',']\n\t\t});\n\t}",
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\td.all = Object.keys(that.Pho('All')),\n\t\td.allo = cw.lib.a2o(d.all);\n\t\t$o.html($.my.formgen(that.HTML).assign(that.lang));\n\t\t\n\t\tQ.all([\n\t\t\tthat.Req({url:['_users','_all_docs']})\n\t\t\t.then(function(res){\n\t\t\t\td.users = (res.rows||[]).map(function(e){\n\t\t\t\t\treturn e.id.to(17)=='org.couchdb.user:'?e.id.from(17):null\n\t\t\t\t}).compact();\n\t\t\t}),\n\t\t\t$o\n\t\t])\n\t\t.then(function(){\n\t\t\tthat.S2('#uadm',that.data.users,'PLC_UADM');\n\t\t\tthat.S2('#umem',that.data.users,'PLC_UMEM');\n\t\t});\n\t}",
        "ui": {
          "#ctitle": {
            "bind": "function (d) {\n\t\t\t\treturn d.dbs.length==1?this.lang.TXT_TITLE1:this.lang.TXT_TITLE;\n\t\t\t}",
            "watch": [
              "#dbs"
            ]
          },
          "#dbs": {
            "init": "function ($o) {\n\t\t\t\t$o.select2({\n\t\t\t\t\ttags:[],\n\t\t\t\t\tplaceholder:this.lang.PLC_DBS,\n\t\t\t\t\tminimumResultsForSearch:12,\n\t\t\t\t\ttokenSeparators:[' ',',']\n\t\t\t\t});\n\t\t\t}",
            "bind": "dbs",
            "check": "function (d,v) {\n\t\t\t\tvar exist = [],\n\t\t\t\t\t\tnames=[],\n\t\t\t\t\t\tund = [];\n\t\t\t\tv.forEach(function(e){\n\t\t\t\t\tif (d.allo[e]) exist.push(e);\n\t\t\t\t\tif (!/^[a-z0-9_$()+-]+$/.test(e)) names.push(e);\n\t\t\t\t\tif (!/^[a-z]/.test(e)) und.push(e);\n\t\t\t\t});\n\t\t\t\tif (exist.length) return this.lang.ERR_DB_EXIST.assign(exist.join(', ').escapeHTML());\n\t\t\t\tif (names.length) return this.lang.ERR_DB_NAME;\n\t\t\t\tif (und.length) return this.lang.ERR_DB_UND;\n\t\t\t}"
          },
          "#uadm": {
            "init": "function ($o) { this.S2('#uadm',this.data.users,'PLC_UADM'); }",
            "bind": "admins.names"
          },
          "#gadm": {
            "init": "function ($o) { this.S2('#gadm',this.data.roles,'PLC_GADM'); }",
            "bind": "admins.roles"
          },
          "#umem": {
            "init": "function ($o) { this.S2('#umem',this.data.users,'PLC_UMEM'); }",
            "bind": "members.names"
          },
          "#gmem": {
            "init": "function ($o) { this.S2('#gmem',this.data.roles,'PLC_GMEM'); }",
            "bind": "members.roles"
          },
          "#btn-start": {
            "bind": "function (d,v) {\n\t\t\t\tif(v==null) return this.lang['BTN_START'+(!(d.members.names+d.members.roles)?'_PUBLIC':'')];\n\t\t\t\ttry {\n\t\t\t\t\tthis.doCreate();\n\t\t\t\t}catch(e){\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t}\n\t\t\t\tthis.my.cancel();\n\t\t\t}",
            "css": {
              ":disabled": "function (d,v) {\n\t\t\t\t\treturn !d.dbs.length || !this.my.valid();\n\t\t\t\t}",
              "self:orange": "function (d) {\n\t\t\t\t\treturn !(d.members.names+d.members.roles);\n\t\t\t\t}",
              "self:green": "function (d) {\n\t\t\t\t\treturn !!(d.members.names+d.members.roles);\n\t\t\t\t}"
            },
            "watch": [
              "#dbs",
              "#umem",
              "#gmem"
            ]
          },
          "#btn-cancel": "function (d,v) {\n\t\t\tif(v==null) return;\n\t\t\tthis.my.cancel();\n\t\t}"
        },
        "doCreate": "function () {\n\t\tvar that = this,\n\t\t\t\tres = $.extend(true, {}, that.data),\n\t\t\t\tcompiled = that.Pho('_compiled'),\n\t\t\t\tes = function(s){return (s+'').escapeHTML()},\n\t\t\t\tl = that.lang,\n\t\t\t\tctr = res.dbs.length;\n\t\t\n\t\tvar acl = Object.select(res,['admins','members']),\n\t\t\t\tpublic = !(acl.members.names+acl.members.roles),\n\t\t\t\tnoacl = !(acl.admins.names+acl.admins.roles+acl.members.names+acl.members.roles),\n\t\t\t\tdbs = res.dbs;\n\t\tif (!ctr) return;\n\n\t\tdbs.forEach(function(db, i){\n\t\t\t// Create DB\n\t\t\tthat.Req({\n\t\t\t\turl:[db], \n\t\t\t\tmethod:'PUT', \n\t\t\t\theaders:{'Content-type':'application/json'}\n\t\t\t})\n\t\t\t.then(function(){\n\t\t\t\t// set secObj\n\t\t\t\tif (!noacl) {\n\t\t\t\t\tthat.Req({\n\t\t\t\t\t\turl:[db,'_security'], \n\t\t\t\t\t\tmethod:'PUT', \n\t\t\t\t\t\theaders:{'Content-type':'application/json'},\n\t\t\t\t\t\tdata:JSON.stringify(acl)\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(){\n\t\t\t\t\t\tcw.lib.note(l.MSG_NEWDB_START.assign(db));\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(code, err, msg){\n\t\t\t\t\t\tcw.lib.note(l.MSG_NEWDB_NOACL.assign(db, code, es(err)), 'warning');\n\t\t\t\t\t})\n\t\t\t\t\t.always(function(){\n\t\t\t\t\t\tif (i==ctr-1) $.my.radio('dblist',dbs);;\n\t\t\t\t\t}); // -- end set secObj\n\t\t\t\t} \n\t\t\t\telse {\n\t\t\t\t\tcw.lib.note(l.MSG_NEWDB_START.assign(db));\n\t\t\t\t\tif (i==ctr-1) $.my.radio('dblist',dbs);;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.fail(function(code, err, msg){\n\t\t\t\tcw.lib.note(that.lang.MSG_NEWDB_FAIL.assign(db, code, es(err)), 'error');\n\t\t\t});\n\t\t\t\n\t\t}.lazy(that.Pho('Cfg').batchCreateDelay));\n\t}",
        "HTML": [
          "<div id=\"ctitle\" class=\"fs130 mb2 lh160 bolder\">{TXT_TITLE}</div>",
          {
            "row": "350px",
            "label": "60px",
            "rowCss": "my-row pt3 pb3",
            "labelCss": "my-label"
          },
          [
            "{LBL_DBS}",
            "inp#dbs.fs105",
            "msg"
          ],
          "<div class=\"fs120 mt10 mb2\">{TXT_ADM}</div>",
          [
            "{LBL_UADM}",
            "inp#uadm.fs105",
            "msg"
          ],
          [
            "{LBL_GADM}",
            "inp#gadm.fs105",
            "msg"
          ],
          "<div class=\"fs120 mt10 mb2\">{TXT_MEM}</div>",
          [
            "{LBL_UADM}",
            "inp#umem.fs105",
            "msg"
          ],
          [
            "{LBL_GADM}",
            "inp#gmem.fs105",
            "msg"
          ],
          "<div class=\"mt12 pt15 btd\">",
          "<button id=\"btn-start\" class=\"green mr2\">{BTN_START}</button>",
          "<button id=\"btn-cancel\">{BTN_CANCEL}</button>",
          "</div>"
        ],
        "style": {
          " input": "display:inline-block;"
        }
      },
      "DelDB": {
        "id": "cw.Photon.DelDB",
        "lang": {},
        "data": {
          "dbs": [],
          "all": [],
          "allo": {}
        },
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\td.all = d.dbs.slice(0),\n\t\td.allo = cw.lib.a2o(d.all);\n\t\t$o.html($.my.formgen(that.HTML).assign(that.lang));\n\t}",
        "ui": {
          "#ctitle": {
            "bind": "function (d) {\n\t\t\t\treturn d.dbs.length==1?this.lang.TXT_TITLE1:this.lang.TXT_TITLE;\n\t\t\t}",
            "watch": [
              "#dbs"
            ]
          },
          "#dbs": {
            "init": "function ($o) {\n\t\t\t\tvar dbs = this.data.all;\n\t\t\t\t$o.select2({\n\t\t\t\t\tdata:dbs.map(function(e){return {id:e,text:e} }),\n\t\t\t\t\tmultiple:true,\n\t\t\t\t\tplaceholder:this.lang.PLC_DBS,\n\t\t\t\t\tminimumResultsForSearch:12,\n\t\t\t\t\treadOnly:dbs.length == 1\n\t\t\t\t});\n\t\t\t}",
            "bind": "dbs",
            "check": "function (d,v) {return !v.length?this.lang.ERR_DBS:''}",
            "css": {
              ":disabled": "function (d) {return d.all.length==1}"
            }
          },
          "#delwarn": {
            "bind": "function (d,v) {\n\t\t\t\tvar that =this,\n\t\t\t\t\t\tc = { size:0, count:0, disk:0 },\n\t\t\t\t\t\tall = that.Pho('All');\n\t\t\t\td.dbs.forEach(function(k){\n\t\t\t\t\tvar db = all[k];\n\t\t\t\t\tif (!db) return;\n\t\t\t\t\tc.size += (+db.data_size || 0);\n\t\t\t\t\tc.disk += (+db.disk_size || 0);\n\t\t\t\t});\n\t\t\t\tc.count = d.dbs.length;\n\t\t\t\tif (!d.dbs.length) return '';\n\t\t\t\treturn that.lang.TXT_WARN(c);\n\t\t\t}",
            "watch": "#dbs"
          },
          "#btn-start": {
            "bind": "function (d,v) {\n\t\t\t\tif(v==null) return this.lang.BTN_START(d.dbs.length);\n\t\t\t\ttry {\n\t\t\t\t\tthis.doDeleteZ();\n\t\t\t\t}catch(e){\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t}\n\t\t\t\tthis.my.cancel();\n\t\t\t}",
            "css": {
              ":disabled": "function (d,v) {\n\t\t\t\t\treturn !d.dbs.length || !this.my.valid();\n\t\t\t\t}"
            },
            "watch": [
              "#dbs"
            ]
          },
          "#btn-cancel": "function (d,v) {\n\t\t\tif(v==null) return;\n\t\t\tthis.my.cancel();\n\t\t}"
        },
        "doDeleteZ": "function () {\n\t\tvar that = this,\n\t\t\t\tres = $.extend(true, {}, that.data),\n\t\t\t\tcompiled = that.Pho('_compiled'),\n\t\t\t\tes = function(s){return (s+'').escapeHTML()},\n\t\t\t\tl = that.lang,\n\t\t\t\tctr = res.dbs.length;\n\t\t\n\t\tvar dbs = res.dbs;\n\t\tif (!ctr) return;\n\n\t\tdbs.forEach(function(db, i){\n\t\t\tthat.Req({\n\t\t\t\turl:[db], \n\t\t\t\tmethod:'DELETE', \n\t\t\t\t//headers:{'Content-type':'application/json'}\n\t\t\t})\n\t\t\t.then(function(){\n\t\t\t\tcw.lib.note(l.MSG_OK.assign(db), 'ok');\n\t\t\t\t$.my.radio('dbdeleted',db);\n\t\t\t})\n\t\t\t.fail(function(code, err, msg){\n\t\t\t\tcw.lib.note(l.MSG_FAIL.assign(db, code, es(err)), 'error');\n\t\t\t})\n\t\t\t.always(function(){\n\t\t\t\tif (i==ctr-1) {\n\t\t\t\t\t$.my.radio('dblist',[]);\n\t\t\t\t}\n\t\t\t}); // -- end set secObj\n\t\t\t\n\t\t}.lazy(that.Pho('Cfg').batchCreateDelay));\n\t}",
        "HTML": [
          "<div id=\"ctitle\" class=\"fs130 mb2 lh160 bolder red\">{TXT_TITLE}</div>",
          "<div class=\"mb10 fs105\"><input id=\"dbs\" class=\"w100p\"></div>",
          "<div class=\"mb10\"><span id=\"delwarn\"></span></div>",
          "<div class=\"mt12 pt15 btd\">",
          "<button id=\"btn-start\" class=\"red mr2\">{BTN_START}</button>",
          "<button id=\"btn-cancel\">{BTN_CANCEL}</button>",
          "</div>"
        ]
      },
      "SecObj": {
        "id": "cw.Photon.SecObj",
        "lang": {},
        "inherit": [
          "Req"
        ],
        "data": {
          "dbs": [],
          "all": [],
          "allo": {},
          "users": [],
          "roles": [],
          "admins": {
            "names": [],
            "roles": []
          },
          "members": {
            "names": [],
            "roles": []
          }
        },
        "Users": [],
        "S2": "function (sel,tags,dict) {\n\t\tthis.my.find(sel).select2({\n\t\t\ttags:tags,\n\t\t\tplaceholder:this.lang[dict],\n\t\t\tminimumResultsForSearch:12\n\t\t});\n\t}",
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\td.all = Object.keys(that.Pho('All')).sort(),\n\t\td.allo = cw.lib.a2o(d.all);\n\t\t$o.html($.my.formgen(that.HTML).assign(that.lang));\n\t\t\n\t\tQ.all([\n\t\t\tthat.Req({url:['_users','_all_docs']})\n\t\t\t.then(function(res){\n\t\t\t\td.users = (res.rows||[]).map(function(e){\n\t\t\t\t\treturn e.id.to(17)=='org.couchdb.user:'?e.id.from(17):null\n\t\t\t\t}).compact();\n\t\t\t}),\n\t\t\t$o\n\t\t])\n\t\t.then(function(){\n\t\t\tthat.S2('#uadm',that.data.users,'PLC_UADM');\n\t\t\tthat.S2('#umem',that.data.users,'PLC_UMEM');\n\t\t});\n\t}",
        "ui": {
          "#dbs": {
            "init": "function ($o) {\n\t\t\t\t$o.select2({\n\t\t\t\t\ttags:this.data.all.map(function(e){\n\t\t\t\t\t\treturn {id:e,text:e}\n\t\t\t\t\t}),\n\t\t\t\t\tmultiple:true,\n\t\t\t\t\tplaceholder:this.lang.PLC_DBS,\n\t\t\t\t\tminimumResultsForSearch:12\n\t\t\t\t});\n\t\t\t}",
            "bind": "dbs",
            "check": "function (d,v) {return !v.length?this.lang.ERR_DBS:''}"
          },
          "#uadm": {
            "init": "function ($o) { this.S2('#uadm',this.data.users,'PLC_UADM'); }",
            "bind": "admins.names"
          },
          "#gadm": {
            "init": "function ($o) { this.S2('#gadm',this.data.roles,'PLC_GADM'); }",
            "bind": "admins.roles"
          },
          "#umem": {
            "init": "function ($o) { this.S2('#umem',this.data.users,'PLC_UMEM'); }",
            "bind": "members.names"
          },
          "#gmem": {
            "init": "function ($o) { this.S2('#gmem',this.data.roles,'PLC_GMEM'); }",
            "bind": "members.roles"
          },
          "#btn-start": {
            "bind": "function (d,v) {\n\t\t\t\tif(v==null) return this.lang.BTN_START;\n\t\t\t\ttry {\n\t\t\t\t\tthis.doSecUpdate();\n\t\t\t\t}catch(e){\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t}\n\t\t\t\tthis.my.cancel();\n\t\t\t}",
            "css": {
              ":disabled": "function (d,v) {\n\t\t\t\t\treturn !d.dbs.length || !this.my.valid();\n\t\t\t\t}"
            },
            "watch": [
              "#dbs",
              "#umem",
              "#gmem"
            ]
          },
          "#btn-cancel": "function (d,v) { if(v!=null) this.my.cancel(); }"
        },
        "doSecUpdate": "function () {\n\t\tvar that = this,\n\t\t\t\tres = $.extend(true, {}, that.data),\n\t\t\t\tcompiled = that.Pho('_compiled'),\n\t\t\t\tes = function(s){return (s+'').escapeHTML()},\n\t\t\t\tl = that.lang,\n\t\t\t\tctr = res.dbs.length;\n\t\t\n\t\tvar acl = Object.select(res,['admins','members']),\n\t\t\t\tpublic = !(acl.members.names+acl.members.roles),\n\t\t\t\tnoacl = !(acl.admins.names+acl.admins.roles+acl.members.names+acl.members.roles),\n\t\t\t\tdbs = res.dbs;\n\t\tif (!ctr) return;\n\n\t\tdbs.forEach(function(db, i){\n\t\t\tthat.Req({\n\t\t\t\turl:[db,'_security'], \n\t\t\t\tmethod:'PUT', \n\t\t\t\theaders:{'Content-type':'application/json'},\n\t\t\t\tdata:JSON.stringify(acl)\n\t\t\t})\n\t\t\t.then(function(){\n\t\t\t\tcw.lib.note(l.MSG_OK.assign(db), 'ok');\n\t\t\t})\n\t\t\t.fail(function(code, err, msg){\n\t\t\t\tcw.lib.note(l.MSG_FAIL.assign(db, code, es(err)), 'error');\n\t\t\t})\n\t\t\t.always(function(){\n\t\t\t\tif (i==ctr-1) $.my.radio('dblist',dbs);;\n\t\t\t}); // -- end set secObj\n\t\t\t\n\t\t}.lazy(that.Pho('Cfg').batchCreateDelay));\n\t}",
        "HTML": [
          "<div class=\"fs130 mb2 lh160 bolder\">{TXT_TITLE}</div>",
          {
            "row": "350px",
            "label": "60px",
            "rowCss": "my-row pt3 pb3",
            "labelCss": "my-label"
          },
          [
            "{LBL_DBS}",
            "inp#dbs.fs105",
            "msg"
          ],
          "<div class=\"fs120 mt10 mb2\">{TXT_ADM}</div>",
          [
            "{LBL_UADM}",
            "inp#uadm.fs105",
            "msg"
          ],
          [
            "{LBL_GADM}",
            "inp#gadm.fs105",
            "msg"
          ],
          "<div class=\"fs120 mt10 mb2\">{TXT_MEM}</div>",
          [
            "{LBL_UADM}",
            "inp#umem.fs105",
            "msg"
          ],
          [
            "{LBL_GADM}",
            "inp#gmem.fs105",
            "msg"
          ],
          "<div class=\"mt12 pt15 btd\">",
          "<button id=\"btn-start\" class=\"green mr2\">{BTN_START}</button>",
          "<button id=\"btn-cancel\">{BTN_CANCEL}</button>",
          "</div>"
        ],
        "style": {
          " input": "display:inline-block;"
        }
      },
      "NewSync": {
        "id": "cw.Photon.NewSync",
        "lang": {},
        "params": {
          "width": 350
        },
        "data": {
          "doc": "",
          "mode": "",
          "source": "",
          "target": "",
          "filter": "",
          "doc_ids": [],
          "query": {}
        },
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\t\n\t\t// align width and generate HTML\n\t\tthat.HTML[0].row = that.params.width+'px';\n\t\tthat.HTML[0].label = that.params.width>450?'115px':'95px';\n\t\t$o.html($.my.formgen(that.HTML).assign(that.lang));\n\t\t\n\t\t// autosize textareas\n\t\t$o.find('textarea').each(function(){\n\t\t\t$(this).on('input.my,keyup.my',function(){\n\t\t\t\t$(this).height(0).height((this.scrollHeight-10).clamp(19,100));\n\t\t\t});\n\t\t}).each(function(){$(this).trigger('input')});\n\t}",
        "die": "function ($o) {\n\t\t$o.find( \"#rsource\" ).autocomplete( 'destroy' );\n\t\t$o.find( \"#rtarget\" ).autocomplete( 'destroy' );\n\t}",
        "ui": {
          "#rmode": {
            "init": "function ($o) {$o.tags(this.lang.TAG_MODE)}",
            "bind": "mode"
          },
          "#xrdocid": {
            "css": {
              "hide": "function (d,v) {return d.mode!='doc'}"
            },
            "watch": "#rmode"
          },
          "#rdocid": {
            "bind": "doc",
            "check": "function (d,v) {\n\t\t\t\tif (d.mode != 'doc') return;\n\t\t\t\tif (!v) return this.lang.ERR_ID;\n\t\t\t\tif (v[0] == '_') return this.lang.ERR_ID_UND;\n\t\t\t}",
            "watch": "#rmode"
          },
          "#rsource": {
            "init": "function ($o) {\n\t\t\t\tvar that = this;\n\t\t\t\t$o.autocomplete({\n\t\t\t\t\tsource: this.DBs, \n\t\t\t\t\tselect: function(o, ui){that.my.check('#rtarget') }.debounce(10),\n\t\t\t\t\tappendTo: that.my.root()\n\t\t\t\t});\n\t\t\t}",
            "bind": "source",
            "check": "function (d,v) {\n\t\t\t\tif (!v) return;\n\t\t\t\tif (this.DBs.indexOf(v)==-1 && !/^http[s]?:\\/\\/.+$/.test(v)) return this.lang.ERR_FROM;\n\t\t\t}",
            "events": "blur.my"
          },
          "#rtarget": {
            "init": "function ($o) {\n\t\t\t\tvar that = this;\n\t\t\t\t$o.autocomplete({\n\t\t\t\t\tsource: this.DBs, \n\t\t\t\t\tselect: function(o, ui){that.my.check('#rtarget') }.debounce(10),\n\t\t\t\t\tappendTo: that.my.root()\n\t\t\t\t});\n\t\t\t}",
            "bind": "target",
            "check": "function (d,v) {\n\t\t\t\tif (!v) return;\n\t\t\t\tif (this.DBs.indexOf(v)==-1 && !/^http[s]?:\\/\\/.+$/.test(v)) return this.lang.ERR_TO;\n\t\t\t\tif (v && v==d.source) return this.lang.ERR_DUP;\n\t\t\t}",
            "watch": "#rsource"
          },
          "#rdocs": {
            "check": "function (d,v) {\n\t\t\t\tif (!v) return;\n\t\t\t\tvar j;\n\t\t\t\ttry{j=JSON.parse(v);}catch(e){}\n\t\t\t\tif (!Object.isArray(j) || !j.length || j.find(function(e){return typeof e!='string';}))\n\t\t\t\t\treturn this.lang.ERR_DOCS;\n\t\t\t}",
            "bind": "function (d,v) {\n\t\t\t\tif (v==null) return !d.doc_ids.length?'':cw.lib.json(d.doc_ids,'  ');\n\t\t\t\tvar j;\n\t\t\t\ttry{j=JSON.parse(v);}catch(e){}\n\t\t\t\tif (!Object.isArray(j) || !j.length || j.find(function(e){return typeof e!='string';})) return v;\n\t\t\t\td.doc_ids = j;\n\t\t\t\treturn v;\n\t\t\t}"
          },
          "#rfilter": {
            "bind": "filter",
            "check": "function (d,v) {\n\t\t\t\tif (!v) return;\n\t\t\t\tif (v[0] == '_') return this.lang.ERR_FN_DESIGN;\n\t\t\t\tif (!/^[^_].*\\/[^\\/]+$/.test(v)) return this.lang.ERR_FN;\n\t\t\t}"
          },
          "#xrquery": {
            "css": {
              "hide": "function (d,v) {return d.mode != 'doc' || !/^[^_].*\\/[^\\/]+$/.test(d.filter)}"
            },
            "watch": [
              "#dmode",
              "#rfilter",
              "#rdocid"
            ]
          },
          "#rquery": {
            "check": "function (d,v) {\n\t\t\t\tif (!v) return;\n\t\t\t\tvar j;\n\t\t\t\ttry{j=JSON.parse(v);}catch(e){}\n\t\t\t\tif (!Object.isObject(j) || !Object.size(j)) return this.lang.ERR_QRY;\n\t\t\t}",
            "bind": "function (d,v) {\n\t\t\t\tif (v==null) return !Object.size(d.query)?'':cw.lib.json(d.query,'  ');\n\t\t\t\tvar j;\n\t\t\t\ttry{j=JSON.parse(v);}catch(e){}\n\t\t\t\tif (!Object.isObject(j) || !Object.size(j)) return v;\n\t\t\t\td.query = j;\n\t\t\t\treturn v;\n\t\t\t}"
          },
          "#btn-start": {
            "delay": 60,
            "bind": "function (d,v) { \n\t\t\t\tif(v!=null) {\n\t\t\t\t\ttry {this.doSync();}catch(e){console.log(e);}\n\t\t\t\t\tthis.my.cancel();\n\t\t\t\t}\n\t\t\t\treturn d.mode=='doc'?this.lang.BTN_START_DOC:this.lang.BTN_START;\n\t\t\t}",
            "css": {
              ":disabled": "function (d,v) {\n\t\t\t\t\treturn !this.my.valid() || !d.source || !d.target;\n\t\t\t\t}"
            },
            "watch": [
              "#rsource",
              "#rtarget",
              "#rfilter",
              "#rdocs",
              "#rdocid",
              "#rquery"
            ]
          },
          "#btn-clear": {
            "delay": 60,
            "bind": "function (d,v) { \n\t\t\t\tif(v!=null) {\n\t\t\t\t\t$.extend(d,{doc:'', mode:'', source:'', target:'', filter:'', doc_ids:[], query:{} });\n\t\t\t\t\tthis.my.cancel();\n\t\t\t\t}; \n\t\t\t}"
          },
          "#btn-cancel": "function (d,v) { if(v!=null) this.my.cancel(); }"
        },
        "DBs": [],
        "HTML": [
          {
            "row": "350px",
            "label": "100px",
            "rowCss": "my-row pt3 pb3",
            "labelCss": "my-label dib vat mt8"
          },
          "<div class=\"fs130 lh160 bolder\">{TXT_TITLE}</div>",
          [
            "{LBL_MODE}",
            "div#rmode.dib.vat.fs105.lh180"
          ],
          "<div id=\"xrdocid\" class=\"hide\">",
          [
            "{LBL_ID}",
            "inp#rdocid.w100p.fs105.bolder",
            {
              "plc": "{PLC_ID}"
            },
            "msg"
          ],
          "</div>",
          [
            "{LBL_FROM}",
            "txt#rsource.w100p.fs100.lh130",
            {
              "plc": "{PLC_FROM}"
            },
            "msg"
          ],
          [
            "{LBL_TO}",
            "txt#rtarget.w100p.fs100.lh130",
            {
              "plc": "{PLC_TO}"
            },
            "msg"
          ],
          [
            "{LBL_DOCS}",
            "txt#rdocs.w100p.fs90.lh130",
            {
              "plc": "{PLC_DOCS}"
            },
            "msg"
          ],
          [
            "{LBL_FN}",
            "inp#rfilter.w100p",
            {
              "plc": "{PLC_FN}"
            },
            "msg"
          ],
          "<div id=\"xrquery\" class=\"hide\">",
          [
            "{LBL_QRY}",
            "txt#rquery.w100p.fs90.lh130",
            {
              "plc": "{PLC_QRY}"
            },
            "msg"
          ],
          "</div>",
          "<div class=\"mt12 pt15 btd\">",
          "<div class=\"fr\"><button id=\"btn-clear\">{BTN_CLEAR}</button></div>",
          "<button id=\"btn-start\" class=\"green mr2\">{BTN_START}</button>",
          "<button id=\"btn-cancel\">{BTN_CANCEL}</button>",
          "</div>"
        ],
        "style": {
          " textarea": "resize:none;word-wrap:break-word;",
          " .my-error-tip": "padding:0.1em 0 0.2em 0;",
          " .ui-widget": "font-size:100%"
        },
        "doSync": "function () {\n\tvar that = this,\n\t\t\td = $.extend(true, {}, that.data),\n\t\t\tcompiled = that.Pho('_compiled'),\n\t\t\tes = function(s){return (s+'').escapeHTML()},\n\t\t\tl = that.lang,\n\t\t\treq, doc;\n\t\n\tdoc = {\n\t\tsource:d.source,\n\t\ttarget:d.target,\n\t\tcontinuous:(d.mode+'')!=''\n\t};\n\tif (d.doc_ids.length) doc.doc_ids = Object.clone(d.doc_ids);\n\tif (d.filter) doc.filter = d.filter;\n\tif (Object.size(d.query)) doc.query = Object.clone(d.query, true);\n\t\n\t\n\tif (d.mode == 'doc') {\n\t\t// construct doc & url\n\t\treq = {\n\t\t\turl:['_replicator', d.doc],\n\t\t\tmethod:'PUT',\n\t\t\theaders:{Accept:'application/json', 'X-Couch-Full-Commit':'true'},\n\t\t\tdataType:'text',\n\t\t\tdata:JSON.stringify($.extend({_id:d.doc, owner:cw.me()}, doc))\n\t\t};\n\t}\n\telse {\n\t\treq = {\n\t\t\turl:['_replicate'],\n\t\t\tmethod:'POST',\n\t\t\theaders:{Accept:'application/json', 'Content-type':'application/json','X-Couch-Full-Commit':'true'},\n\t\t\tdataType:'text',\n\t\t\tdata:JSON.stringify(doc)\n\t\t}\n\t}\n\n\treturn that.Req(req)\n\t.then(function(res0){\n\t\tvar res = res0;\n\t\ttry {\n\t\t\tres = Object.isString(res0)?JSON.parse(res0):res0;\n\t\t}catch(e){}\n\t\tcw.lib.note(d.mode=='doc'?that.lang.MSG_OK_DOC.assign(es(d.doc)):that.lang.MSG_OK, 'ok');\n\t\t$.my.radio('dbupdate', {db:'_replicator', cmd:'write', docs:[d.doc]});\n\t})\n\t.fail(function(code, err, msg){\n\t\tcw.lib.note(that.lang.MSG_FAIL.assign(code, err), 'error');\n\t});\n}"
      },
      "$about": {
        "id": "cw.Photon.$about",
        "hash": "function () {return 'about';}",
        "title": "function () {  return 'About this node'; }",
        "lang": {},
        "JSON": false,
        "Blob": false,
        "Url": false,
        "data": {
          "photon": {},
          "service": {
            "couchdb": "No message",
            "version": "unable to retrieve data",
            "vendor": {
              "name": "unknown",
              "version": "",
              "variant": ""
            },
            "features": []
          },
          "ddoc": {}
        },
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\tpi = $.Deferred();\n\t\t\n\t\tthat.Url = that.Pho().DownloadURL;\n\t\t\n\t\tthat.Req({url:[], dataType:'json'})\n\t\t.then(function(res){\n\t\t\t$o.html($.my.formgen(that.HTML).assign(that.lang));\n\t\t\t$.extend(true, that.data.service, res);\n\t\t})\n\t\t.always(function(){\n\t\t\tpi.resolve();\n\t\t\tthat.readPhoton();\n\t\t});\n\t\t\n\t\treturn pi.promise();\n\t}",
        "readPhoton": "function () {\n\t\tvar that = this,\n\t\t\t\turl,\n\t\t\t\tddoc = window.DDOC;\n\t\tif (!that.Pho('_compiled') || ! ddoc) return '';\n\t\t\n\t\tif (!that.Url) {\n\t\t\tthat.Req({\n\t\t\t\turl:[ddoc._db, ddoc._id, {attachments:true}],\n\t\t\t})\n\t\t\t.then(function(res0){\n\t\t\t\tthat.data.ddoc = res0;\n\t\t\t\tvar res = $.extend(\n\t\t\t\t\ttrue,\n\t\t\t\t\t{_id:'',name:'',version:that.Pho('Version')+'.'+that.Pho('build')},\n\t\t\t\t\tObject.reject(res0, '_rev')\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\tthat.JSON = res;\n\t\t\t\tvar blob = cw.lib.base642blob(\n\t\t\t\t\tcw.lib.base64(JSON.stringify(res, null, '  ')),\n\t\t\t\t\tfunction (blob){\n\t\t\t\t\t\tthat.Blob = blob;\n\t\t\t\t\t\tthat.Url = URL.createObjectURL(blob);\n\t\t\t\t\t\tthat.Pho().DownloadURL = that.Url;\n\t\t\t\t\t\tthat.my.check('#adl');\n\t\t\t\t\t},\n\t\t\t\t\t'application/json'\n\t\t\t\t);\n\t\t\t})\n\t\t\t.fail(function(){\n\t\t\t\tthat.Url='';\n\t\t\t\tthat.my.check('#adl');\n\t\t\t});\n\t\t}\n\t}",
        "ui": {
          "#apho": "function () {\n\t\t\tvar that = this;\n\t\t\treturn that.Pho('Version').replace(/[^0-9\\.]/g,'');\n\t\t}",
          "#aphobuild": "function () {\n\t\t\tvar that = this,\n\t\t\t\t\tbuild = that.Pho('build'),\n\t\t\t\t\tdt = Date.create(that.Pho('stamp') || Date.now()).format('{yyyy}-{MM}-{dd}');\n\t\t\tif (!build) return '';\n\t\t\treturn '<span class=\"gray\">Build '+build+', '+dt+'</span>';\n\t\t}",
          "#aphoadd": "function () {\n\t\t\tvar that = this,\n\t\t\t\t\tapps = (window.DDOC || {apps:{ed:{id:'cw.Sys.JSON'}}}).apps,\n\t\t\t\t\th = [];\n\t\t\tObject.keys(apps).forEach(function(k){\n\t\t\t\tvar app = apps[k];\n\t\t\t\tif (!app.id || app.id == 'cw.Photon') return;\n\t\t\t\th.push([\n\t\t\t\t\t(app.name || app.id)+'\\u00a0',\n\t\t\t\t\tapp.Version || app.version || null,\n\t\t\t\t\tapp.build?'.'+app.build:null\n\t\t\t\t].compact().join(''));\n\t\t\t})\n\t\t\treturn h.join('')\n\t\t}",
          "#apholibs": "function () {\n\t\t\tvar that = this,\n\t\t\t\t\tlibs = that.Pho('LibsUsed');\n\t\t\t\n\t\t\treturn Object.keys(libs).map(function(k){\n\t\t\t\tif (!libs[k]) return '<span class=\"tdn nw ml4\">'+k+'</span>';\n\t\t\t\treturn '<a href=\"{1}\" target=\"_blank\" class=\"tdn nw ml4\">{2}</a>'.assign(libs[k], k);\n\t\t\t}).join(', ');\n\t\t}",
          "#aver": "service.version",
          "#avendor": "function (d) {\n\t\t\tvar s = d.service.vendor;\n\t\t\treturn (s.name+' '+s.version +(s.variant?' ('+s.variant+')':'')).escapeHTML();\n\t\t}",
          "#anode": "function (d) {\n\t\t\tvar base = this.Pho('Base');\n\t\t\treturn '<a href=\"{1}\" target=\"_blank\" class=\"tdn\">{2} {3}</a>'.assign(\n\t\t\t\tbase, \n\t\t\t\t'<span class=\"fs90 '+(/^https:/.test(base)? 'fi-lock blue2':'fi-unlock red2')+'\"></span>',\n\t\t\t\tbase.replace(/^http[s]?:\\/\\/|\\//g,'').escapeHTML()\n\t\t\t);\n\t\t}",
          "#awelcome": "function (d) {return d.service.couchdb.escapeHTML()}",
          "#afeatures": "function (d) {\n\t\t\tvar f = d.service.features;\n\t\t\tif (!Object.isArray(f) || !f.length) return '—';\n\t\t\treturn d.service.features.join (', ').escapeHTML()\n\t\t}",
          "#aupd": {
            "bind": "function (d,v) {\n\t\t\t\tif (v==null) return;\n\t\t\t\tvar that = this,\n\t\t\t\t\t\trepo = that.Pho('Cfg').rootRepo;\n\t\t\t\t$.ajax({url:repo+'version.json',dataType:'json'})\n\t\t\t\t.then(function(res){\n\t\t\t\t\tfunction _n(s) {\n\t\t\t\t\t\tvar a = s.split('.'); return a[0]*1e12 + a[1]*1e6 + (isNaN(a[2])?999999:+a[2]);\n\t\t\t\t\t}\n\t\t\t\t\tvar v0 = that.Pho('Version')+'.'+that.Pho('build'),\n\t\t\t\t\t\t\tcurr = _n(v0),\n\t\t\t\t\t\t\tv1 = res.version || '0.0.0',\n\t\t\t\t\t\t\tremote = _n(v1);\n\t\t\t\t\t\n\t\t\t\t\tif (curr >= remote) return cw.lib.note(that.lang.MSG_UPD_NONEED);\n\t\t\t\t\t\n\t\t\t\t\treturn $.ajax({url:repo+'photon.json', dataType:'json'})\n\t\t\t\t\t.then(function(res){\n\t\t\t\t\t\t$.my.modal({\n\t\t\t\t\t\t\tmanifest:that.Pho('Confirm'),\n\t\t\t\t\t\t\tdata:{\n\t\t\t\t\t\t\t\ttext:that.lang.TXT_UPD.assign(v0, v1),\n\t\t\t\t\t\t\t\tyes:that.lang.BTN_UPDATE,\n\t\t\t\t\t\t\t\tno:that.lang.BTN_CANCEL,\n\t\t\t\t\t\t\t\tcancel:''\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\twidth:300,\n\t\t\t\t\t\t\tcss:'p20 xgray lh170 pb25'\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(function(dlg){\n\t\t\t\t\t\t\tif (dlg.cmd != 'yes' ||  !window.DDOC) return;\n\t\t\t\t\t\t\tres._rev = that.data.ddoc._rev || window.DDOC._rev;\n\t\t\t\t\t\t\tthat.Req({\n\t\t\t\t\t\t\t\turl:[DDOC._db, res._id],\n\t\t\t\t\t\t\t\tmethod:'PUT',\n\t\t\t\t\t\t\t\tdata:JSON.stringify(res),\n\t\t\t\t\t\t\t\theaders:{ \n\t\t\t\t\t\t\t\t\t'Content-type':'application/json', \n\t\t\t\t\t\t\t\t\tAccept:'application/json' \n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdataType:'text'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(function(){\n\t\t\t\t\t\t\t\tcw.lib.note(that.lang.MSG_UPDATE_OK, '', 6000);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.fail(function(code, err, msg){\n\t\t\t\t\t\t\t\tcw.lib.note(that.lang.ERR_UPDATE.assign(code, err), 'error');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(){\n\t\t\t\t\tcw.lib.note(that.lang.ERR_UPDATE_CHECK, 'error');\n\t\t\t\t});\n\t\t\t}",
            "events": "click.my",
            "css": {
              "hide": "function () {return !this.Pho('_compiled');}"
            }
          },
          "#adl": "function (d,v,$o) {\n\t\t\tvar that = this,\n\t\t\t\t\turl = that.Url,\n\t\t\t\t\tddoc = window.DDOC;\n\t\t\tif (!that.Pho('_compiled') || !ddoc || url==='') return '';\n\t\t\tif (url===false) return '<span class=\"gray\">'+that.lang.L_DLPREP+'</span>';\n\t\t\t$o.attr('href', url);\n\t\t\t$o.attr('download','photon-'+that.Pho('Version').replace(/[^0-9\\.]/g,'')+'.'+that.Pho('build')+'.json');\n\t\t\treturn that.lang.L_DL;\n\t\t}"
        },
        "HTML": [
          "<div class=\"w500 xgray\" style=\"margin:80px auto 30px auto;\">",
          {
            "row": "500px",
            "label": "130px",
            "rowCss": "my-row pb2",
            "labelCss": "my-label fs90"
          },
          "<div id=\"atitle\" class=\"fs150 lh160\">CouchDB <span id=\"aver\"></span></div>",
          [
            "{L_URL}",
            "spn#anode"
          ],
          [
            "{L_VENDOR}",
            "spn#avendor"
          ],
          [
            "{L_COUCH}",
            "spn#awelcome"
          ],
          [
            "{L_FEAT}",
            "spn#afeatures"
          ],
          "<div id=\"atitle\" class=\"mt20\">",
          "<span class=\"dib fs150 lh160 w130\">Photon <span id=\"apho\"></span></span><span id=\"aphobuild\"></span>",
          "</div>",
          [
            "{L_PHOADD}",
            "spn#aphoadd"
          ],
          [
            "{L_PHOLIBS}",
            "spn#apholibs.dib.vat.ml-4"
          ],
          {
            "rowCss": "my-row mt15"
          },
          [
            " ",
            "<a href=\"\" id=\"adl\" class=\"tdn pt5\" download=\"photon.json\"></a>"
          ],
          [
            " ",
            "<span id=\"aupd\" class=\"pseudolink tdn\">{L_CHECK_UPDATES}</span>"
          ],
          [
            " ",
            "<span class=\"gray fs90\">(c) 2017 ermouth</span>"
          ],
          "</div>"
        ]
      },
      "$error": {
        "id": "cw.Photon.$error",
        "lang": {},
        "data": {
          "error": "",
          "path": []
        },
        "hash": "function () {\n\t\treturn 'error';\n\t}",
        "title": "function () { return 'Error at #'+this.data.path.join('/'); }",
        "init": [
          "<div id=\"e-msg\" class=\"red p100 tac\"></div>"
        ],
        "ui": {
          "#e-msg": "function (d,v) {\n\t\t\t\n\t\t\tvar m;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tm = !Object.isString(d.error)?JSON.stringify(d.error):d.error+'';\n\t\t\t} catch(e){}\n\t\t\tif (!m) m = (d.error+'') || 'Undefined error';\n\t\t\t\n\t\t\treturn this.lang.TXT_ERR.assign(\n\t\t\t\t'#'+d.path.join('/').escapeHTML(),\n\t\t\t\tm\n\t\t\t);\n\t\t}"
        }
      },
      "$doc": {
        "lang": {},
        "data": {
          "isNew": false,
          "path": [],
          "rev": "",
          "revlast": "",
          "revstart": "",
          "search": "",
          "doc": {
            "_id": ""
          },
          "conflicts": [],
          "revs": []
        },
        "hash": "function () { return cw.lib.crc2(this.data.doc); }",
        "title": "function () { \n\t\tvar that = this,\n\t\t\t\td = that.data,\n\t\t\t\tp = d.path;\n\t\treturn [\n\t\t\tp[0],\n\t\t\t'\\u2009/\\u2009',\n\t\t\td.doc._id.to(2)=='_d'?'_d'+d.doc._id.from(7):d.doc._id,\n\t\t\td.rev?'\\u2009@\\u2009'+d.rev:''\n\t\t].join(''); \n\t}",
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\t\n\t\tif (d.path.length > (d.path[1]=='_design'?3:2)) {\n\t\t\td.rev = d.path.last().replace(/^\\D+/,'');\n\t\t}\n\t\td.revstart = d.rev;\n\t\t\n\t\treturn that.GetDoc()\n\t\t.then(function(){\n\t\t\t$o.html(that.HTML.assign(that.lang));\n\t\t});\n\t}",
        "ui": {
          "#app-title": {
            "bind": "function (d) {\n\t\t\n\t\t\tvar db = '<a class=\"tdn\" href=\"#{1}\" title=\"{3}\">{2}</a>'.assign(\n\t\t\t\td.path[0], \n\t\t\t\td.path[0].truncate(12,'middle','…').escapeHTML(),\n\t\t\t\td.path[0].escapeHTML()\n\t\t\t);\n\n\t\t\tvar s = '<span class=\"fs150 lh130 xgray mt-1 o80\"><span class=\"\">{2}</span>\\u2009/\\u2009<span class=\"bolder\">{1}</span></span>';\n\t\t\treturn s.assign(\n\t\t\t\t(d.doc._id || (d.path[1]+(d.path[1]=='_design'?'/'+d.path[2]:''))).escapeHTML(),\n\t\t\t\tdb\n\t\t\t);\n\t\t}",
            "watch": "#app-rev"
          },
          "#app-rev": {
            "init": "function ($o) { this.RevsList(); }",
            "bind": "rev"
          },
          "#app-search": {
            "delay": 150,
            "bind": "search",
            "css": {
              "my-search": "new RegExp(/^.{3,}$/)"
            }
          },
          "#jseditor": {
            "delay": 100,
            "check": false,
            "list": "<div></div>",
            "merge": false,
            "init": "function ($o) {\n\t\t\t$o.niceScroll({\n\t\t\t\tbouncescroll: true,\n\t\t\t\t//preservenativescrolling:false,\n\t\t\t\tcursorcolor:'#234',\n\t\t\t\tcursoropacitymin:0.07,\n\t\t\t\tcursoropacitymax:0.4,\n\t\t\t});\n\t\t}",
            "id": "function (e) {return e.doc._id}",
            "hash": "function (e) {return cw.lib.sdbm(e.doc)}",
            "manifest": "function (elt) {\n\t\t\treturn $.extend( true, {}, this.Pho('Ed').jsontree, this.ExtEd );\t\n\t\t}",
            "bind": "this.Doc"
          },
          "#btn-reload": {
            "bind": "function (d,v) {\n\t\t\tif (v==null) return;\n\t\t\tthis.GetDoc(true);\n\t\t}"
          },
          "#btn-doc-save": {
            "bind": "function (d,v) {\n\t\t\tvar that = this;\n\t\t\tif (v==null) return;\n\t\t\t\n\t\t\t// mark busy\n\t\t\tthat.my.root().addClass('app-busy');\n\t\t\t$.my.radio('pho_appbusy',{id:d.tabid, busy:true});\n\t\t\t// save attempt\n\t\t\t\n\t\t\tthat.SaveAll()\n\t\t\t.always(function(){\n\t\t\t\t$.my.radio('pho_appbusy',{id:d.tabid, busy:false});\n\t\t\t\tthat.my.root().removeClass('app-busy');\n\t\t\t});\n\t\t}"
          },
          "#btn-doc-del": {
            "delay": 20,
            "bind": "function (d,v) {\n\t\t\tvar that = this;\n\t\t\tif (v==null) return;\n\t\t\t\n\t\t\t// mark busy\n\t\t\tthat.my.root().addClass('app-busy');\n\t\t\t$.my.radio('pho_appbusy',{id:d.tabid, busy:true});\n\t\t\t// save attempt\n\t\t\t\n\t\t\tthat.DelDoc()\n\t\t\t.always(function(){\n\t\t\t\t$.my.radio('pho_appbusy',{id:d.tabid, busy:false});\n\t\t\t\tthat.my.root().removeClass('app-busy');\n\t\t\t});\n\t\t}",
            "css": {
              ":disabled": "function (d,v) {\n\t\t\t\tvar co = d.conflicts,\n\t\t\t\t\t\tislast = d.revs[0] && d.revs[0] == d.doc._rev;\n\t\t\t\tif (co.length) {\n\t\t\t\t\t// cant del old revs\n\t\t\t\t\treturn  !islast && co.indexOf(d.doc._rev||'') == -1;\n\t\t\t\t}\n\t\t\t\treturn !d.doc._rev || !islast;\n\t\t\t}"
            },
            "watch": [
              "#app-rev"
            ]
          },
          "#state-proxy": {
            "delay": 50,
            "bind": "function (d,v) {\n\t\t\tif (v!=null) return;\n\t\t\tvar that = this;\n\t\t\t\n\t\t\tif (d.rev) {\n\t\t\t\tif (d.path.last() != d.doc._id) d.path[d.path.length-1] = '_'+d.rev;\n\t\t\t\telse d.path.push('_'+d.rev);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (d.path.last() != d.doc._id) d.path.length = (d.path.length-1).clamp(2,6);\n\t\t\t}\n\t\t\t\n\t\t\tif (d.rev != d.revlast) {\n\t\t\t\t$.my.radio('pho_pathchange', {id:d.tabid, path:d.path, title:that.title()});\n\t\t\t\td.revlast2 = d.revlast;\n\t\t\t\td.revlast = d.rev;\n\t\t\t\tthat.GetDoc(true)\n\t\t\t\t.then(function(){\n\t\t\t\t\td.revlast2 = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}",
            "watch": "#app-rev",
            "listen": {
              "dbdeleted": "function (d,v) {\n\t\t\t\tif (v!=d.path[0]) return;\n\t\t\t\tvar that = this;\n\t\t\t\t(function(){\t\n\t\t\t\t\tthat.my.root().trigger('tabclose',{tabid:d.tabid, enforce:true});\n\t\t\t\t}).debounce(Number.random(10,50))();\n\t\t\t}"
            }
          }
        },
        "die": "function ($o) {\n\t\t// Unmount niceScroll\n\t\tvar f = $o.find('#jseditor').getNiceScroll;\n\t\tif (typeof f == 'function') f().remove();\n\t}",
        "HTML": "<div id=\"a-head\" class=\"app-head nw pt18 pl20 pr20 lh160\"><div class=\"fr w12p fs95\" style=\"max-width:155px;\"><div class=\"fi-magnifying-glass blue o50 fs95\" style=\"position: absolute; z-index: +1; left: 8px;top: 0.2em;\"></div><input type=\"text\" id=\"app-search\" class=\"ui-search w100p ml0 mr0 mt0 pr10\" placeholder=\"{PLC_SEARCH}\" style=\"background-image:none;padding-right:19px!important;\"><span class=\"fi-x fs80 dib vat pt2 blue ui-search-clear\" style=\"margin-left:-19px!important;\"onclick=\"$(this).siblings('input:eq(0)').val('').blur()\"></span></div><button id=\"btn-reload\" class=\"w40 mr8\" title=\"{PLC_RELOAD}\"><span class=\"fi-loop\"></span></button><div id=\"app-title\" class=\"dib vat ell mr20 nw\"></div><div class=\"dib vat w200 mr10\"><input id=\"app-rev\" type=\"text\" class=\"w100p fs110 vat\"></div><div class=\"nw dib vat\"><button id=\"btn-doc-save\" class=\"green mr2\">{BTN_SAVE}</button><button id=\"btn-doc-saveas\" class=\"mr10\" disabled>{BTN_SAVEAS}</button><button id=\"btn-doc-del\" class=\"red\">{BTN_DEL}</button></div></div><div class=\"panelheight feather\"><div id=\"jseditor\" class=\"panelheight pl20 pr20 pt10 pb16\"></div></div><div id=\"state-proxy\" class=\"hide\"></div>",
        "style": {
          " #jseditor>.my-form>section>#editor>#doc>.iact.buttons": "padding-right:3px;",
          " #app-title": "max-width:calc(88% - 570px);"
        },
        "ExtEd": {
          "ui": {
            "#doc": {
              "manifest": "function (e) {\n\t\t\t\tif (!this.HTML.ItemRoot) return this.$multi;\n\t\t\t\tvar that = this,\n\t\t\t\t\t\tMAtt = that.$files.Add;\n\t\t\t\treturn $.extend(true, {}, that.$multi, {\n\t\t\t\t\tHTML:that.HTML.ItemRoot,\n\t\t\t\t\tui:{\n\t\t\t\t\t\t'#btn-attach':{\n\t\t\t\t\t\t\tbind:function(d,v,$o){\n\t\t\t\t\t\t\t\tif (v==null) return;\n\t\t\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\t\t\tif ($o.data('modal')) {\n\t\t\t\t\t\t\t\t\t$o.modal(true);\n\t\t\t\t\t\t\t\t\t_close();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t$o.parent().addClass('hover');\n\t\t\t\t\t\t\t\t\tthat.my.modal('#btn-attach',{\n\t\t\t\t\t\t\t\t\t\tmanifest:MAtt,\n\t\t\t\t\t\t\t\t\t\tdata:{},\n\t\t\t\t\t\t\t\t\t\twidth:500,\n\t\t\t\t\t\t\t\t\t\talign:'top:103%, right:0px;',\n\t\t\t\t\t\t\t\t\t\tnose:'top'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then(function(res){\n\t\t\t\t\t\t\t\t\t\tif (!d.value._attachments) d.value._attachments = {};\n\t\t\t\t\t\t\t\t\t\tres.files.forEach(function(file){\n\t\t\t\t\t\t\t\t\t\t\td.value._attachments[file.name] = Object.select(file, ['content_type','data']);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t//d.state=2;\n\t\t\t\t\t\t\t\t\t\tif (!that.Root().data.viewstate) that.Root().data.viewstate = {};\n\t\t\t\t\t\t\t\t\t\tthat.Root().data.viewstate['Root❀_attachments']=2;\n\t\t\t\t\t\t\t\t\t\tthat.List = that.MakeList(d);\n\t\t\t\t\t\t\t\t\t\t//that.my.recalc('.idesc:eq(0)');\n\t\t\t\t\t\t\t\t\t\tthat.my.redraw();\n\t\t\t\t\t\t\t\t\t}.debounce(20))\n\t\t\t\t\t\t\t\t\t.always(function(){\n\t\t\t\t\t\t\t\t\t\t_close();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// - - - - -\n\t\t\t\t\t\t\t\tfunction _close(){\n\t\t\t\t\t\t\t\t\t$o.parent().removeClass('hover');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}"
            }
          }
        },
        "SaveAll": "function _save_$doc(onlySave,silent) {\n\t\n\t// Std fn to be called from tab manager and on save btn click.\n\t// -- onlySave == true  means we must not load doc after save (when tab is closed ie),\n\t// -- silent == true    means we do not popup success or fail\n\t\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tdoc = Object.clone(cw.lib.dry(d.doc), true),\n\t\t\tpi = $.Deferred(),\n\t\t\tl = that.lang;\n\n\t// try to save\n\tvar method = 'POST',\n\t\t\turl = [d.path[0]],\n\t\t\theaders  = {\n\t\t\t\t// Ensures immediate commit\n\t\t\t\t'X-Couch-Full-Commit':'true'\n\t\t\t};\n\tif (typeof doc._id == 'string') {\n\t\t// method should be put\n\t\tmethod = 'PUT';\n\t\turl.push(doc._id);\n\t}\n\telse delete doc._id;\n\t\n\tif (undefined == doc._id) delete doc._rev;\n\t\n\t// trying to save 1st time\n\t\n\t_saveDoc(doc)\n\t.fail(function(code, err, msg){\n\t\tif (code != 409) {\n\t\t\t// if not a conflict, reject with error\n\t\t\tif (!silent) cw.lib.note(l.ERR_SAVE.assign(code+': '+es(err)), 400); \n\t\t\tpi.reject(code, err, msg);\n\t\t} \n\t\telse {\n\t\t\t\n\t\t\t//load doc\n\t\t\tthat.Req({method:'GET',url:[d.path[0], doc._id]})\n\t\t\t.then(function(xdoc){\n\t\t\t\t\n\t\t\t\t// show conflict modal\n\t\t\t\t$.my.modal({\n\t\t\t\t\tmanifest:that.Pho('Confirm'),\n\t\t\t\t\tdata:{\n\t\t\t\t\t\ttext: l.MSG_CONFLICT.assign(_trunc(doc._id, 40), _trunc(doc._rev, 25), _trunc(xdoc._rev, 25)),\n\t\t\t\t\t\tyes:\tl.BTN_CONFLICT_YES,\n\t\t\t\t\t\tno: \tl.BTN_CONFLICT_NO,\n\t\t\t\t\t\tcancel:''\n\t\t\t\t\t},\n\t\t\t\t\tcss:'xgray lh170 p20 pb25',\n\t\t\t\t\tesc:false,\n\t\t\t\t\tenter:false\n\t\t\t\t})\n\t\t\t\t.then(function(result){\n\t\t\t\t\tif (result.cmd == 'yes') {\n\t\t\t\t\t\td.doc._rev = xdoc._rev;\n\t\t\t\t\t\tthat.SaveAll(onlySave, silent)\n\t\t\t\t\t\t.then(function(res){\n\t\t\t\t\t\t\t_reloadDoc(true);\n\t\t\t\t\t\t\t//pi.resolve(res);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function(code, err, msg){\n\t\t\t\t\t\t\tpi.reject(code, err, msg);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse _saveCancelled();\n\t\t\t\t})\n\t\t\t\t.fail(_saveCancelled);\n\t\t\t\t\n\t\t\t})\n\t\t\t.fail(function(code, err, msg){\n\t\t\t\t// have conflict, but failed loading doc\n\t\t\t\t// reject\n\t\t\t\tconsole.log(code,err,msg);\n\t\t\t\tif (!silent) cw.lib.note(l.MSG_CONFLICT_LOADFAIL);\n\t\t\t\tpi.reject(999, 'Cancelled by user', l.MSG_CONFLICT_LOADFAIL);\n\t\t\t})\n\t\t\t\n\t\t}\n\t});\n\n\treturn pi.promise();\n\t\n\t// - - - - - - - - - - - - \n\t\n\tfunction _saveDoc(doc){\n\t\treturn that.Req({\n\t\t\turl:url, \n\t\t\tmethod:method, \n\t\t\theaders:headers, \n\t\t\tdata:JSON.stringify(doc), \n\t\t\tdataType:method=='PUT'?'text':'json'\n\t\t})\n\t\t.then(function(res0){\n\t\t\tvar res = res0;\n\t\t\ttry {\n\t\t\t\tres = Object.isString(res0)?JSON.parse(res0):res0;\n\t\t\t}catch(e){}\n\t\t\t// we succeeded\n\t\t\tif (onlySave) {\n\t\t\t\t_notifyDocSaved();\n\t\t\t\treturn pi.resolve ($.extend(doc,{_id:res.id, _rev:res.rev}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// reload doc if not skipped\n\t\t\t\t_reloadDoc(true);\n\t\t\t}\n\t\t})\n\t}\n\t\n\t// - - - - - - - - - - - - \n\t\n\tfunction _saveCancelled(){\n\t\tif (!silent) cw.lib.note(l.MSG_CONFLICT_CANCELLED);\n\t\tpi.reject(999, 'Cancelled by user', l.MSG_CONFLICT_CANCELLED);\n\t}\n\n\t// - - - - - - - - - - - - \n\t\n\tfunction es(s) {return (s+'').escapeHTML();}\n\tfunction _trunc(s, chars) {return es((s+'').truncate(chars || 15,'right','…'));}\n\t\n\t// - - - - - - - - - - - - \n\n\tfunction _notifyDocSaved(){\n\t\t$.my.radio('dbupdate', {db:d.path[0], cmd:'write', docs:[d.doc._id]});\n\t\tif (!silent) {\n\t\t\tcw.lib.note(\n\t\t\t\tl.MSG_SAVE.assign( _trunc(d.doc._id), _trunc(d.doc._rev||'')) ,\n\t\t\t\t'ok'\n\t\t\t);\n\t\t}\n\t}\n\t\n\t// - - - - - - - - - - - - \n\t\n\tfunction _reloadDoc(reset){\n\t\tif (reset) {\n\t\t\t// reset to latest rev\n\t\t\td.path[1] = d.doc._id;\n\t\t\td.path.length = 2;\n\t\t\td.rev = '';\n\t\t\tif (d.isNew) {\n\t\t\t\td.isNew = false;\n\t\t\t\t$.my.radio('pho_pathchange', {id:d.tabid, path:d.path, title:that.title()});\n\t\t\t}\n\t\t}\n\t\t// reload revs list and doc\n\t\tthat.GetDoc(true)\n\t\t.then(function(){\n\t\t\t_notifyDocSaved();\n\t\t\tthat.RevsList();\n\t\t\tpi.resolve(d.doc);\n\t\t})\n\t\t.fail(function(code, err, msg){\n\t\t\t// fail to read doc back\n\t\t\tif (!silent) cw.lib.note(l.ERR_SAVELOAD.assign(code+': '+es(err)), 'error');\n\t\t\treturn pi.reject(code, l.ERR_SAVELOAD.assign(err), msg);\n\t\t});\n\t}\n}",
        "GetDoc": "function (redraw) {\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tparams = {conflicts:true,local_seq:true,revs_info:true},\n\t\t\turl, rev,\n\t\t\tpi;\n\n\t// if new, just generate _id\n\t\n\tif (d.isNew){\n\t\tvar pi = $.Deferred();\n\t\tthat.Req(['_uuids',{count:5}])\n\t\t.then(function(res){\n\t\t\td.doc._id = (res.uuids||['']).sample();\n\t\t})\n\t\t.always(function(){\n\t\t\tif (!d.doc._id) d.doc._id = cw.lib.hash8(Date.now()+d.path[0]+Number.random(1,1e15));\n\t\t\tthat.Doc = [{dbname:d.path[0], revision:'', baseurl:that.Pho('Base'), doc:that.data.doc}];\n\t\t\tpi.resolve();\n\t\t});\n\t\treturn pi.promise();\n\t}\n\t\n\t// if not new, start reading real doc\n\t\n\tif (d.path.length > (d.path[1]=='_design'?3:2)) {\n\t\trev = d.path.last().replace(/^\\D+/,'');\n\t\turl = d.path.to(-1);\n\t}\n\telse url = d.path;\n\n\t// we have rev, need two requests\n\tif (rev) {\n\t\t// read reqested rev\n\t\treturn that.Req(url.concat([$.extend(!0,{},params,{rev:rev})]))\n\t\t.then(function(res){\n\t\t\td.doc = _resort(res);\n\t\t\t// read actual doc revto have all sys props in place\n\t\t\treturn that.Req(url.concat([params]))\n\t\t\t.then(function(res){\n\t\t\t\td.doc = $.extend(d.doc, Object.select(res, ['_conflicts','_revs_info','_local_seq']));\n\t\t\t\t_cleanRevs(d.doc);\n\t\t\t\tthat.Doc = [{dbname:d.path[0], revision:d.rev, baseurl:that.Pho('Base'), doc:that.data.doc}];\n\t\t\t\tthat.my.trigger('#state-proxy','resettabhash.my');\n\t\t\t\tif (redraw) that.my.redraw();\n\t\t\t});\n\t\t});\n\n\t} \n\t\n\t// no rev, return single request\n\telse {\n\t\t\n\t\treturn that.Req(url.concat([params]))\n\t\t.then(function(res){\n\t\t\td.doc = _resort(res);\n\t\t\t_cleanRevs(d.doc);\n\t\t\tthat.Doc = [{dbname:d.path[0], revision:d.rev, baseurl:that.Pho('Base'), doc:that.data.doc}];\n\t\t\tthat.my.trigger('#state-proxy','resettabhash.my');\n\t\t\tif (redraw) that.my.redraw();\n\t\t});\n\t}\n\t\n\t// - - - - - - - - - - -\n\t\n\tfunction _resort(res) {\n\t\t// moves id, rev and files to top of the tree\n\t\treturn $.extend(res._attachments?{_id:'',_rev:'',_attachments:{}}:{_id:'',_rev:''},res);\n\t}\n\t\n\tfunction _cleanRevs(doc) {\n\t\tif (Object.isArray(doc._revs_info)) {\n\t\t\tdoc._revs_info = doc._revs_info.filter(function(r){return r.status=='available'});\n\t\t}\n\t\td.conflicts = doc._conflicts || [];\n\t\td.revs = (doc._revs_info||[]).map(function(r){return r.rev});\n\t}\n\n}",
        "DelDoc": "function _del_doc() {\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tdoc = Object.clone(cw.lib.dry(d.doc), true),\n\t\t\tislast = d.revs[0] && d.revs[0] == d.doc._rev,\n\t\t\tisconflict = d.conflicts.indexOf(d.doc._rev||'') != -1,\n\t\t\tl = that.lang,\n\t\t\tes = function(s){return (s+'').escapeHTML()},\n\t\t\t_trunc = function (s, chars) {return es((s+'').truncate(chars || 15,'right','…'));};\n\n\tvar pi = $.Deferred(),\n\t\t\turl = [d.path[0], doc._id, {rev:doc._rev}];\n\n\tvar trow = '<div class=\"mb10\">{1}</div>';\n\t\n\t$.my.modal({\n\t\twidth:350,\n\t\tmanifest:$.extend(\n\t\t\ttrue, {}, that.Pho('Confirm'),\n\t\t\t{\n\t\t\t\tui:{'input[name=\"retain\"]':'retain'},\n\t\t\t\tstyle:{' label':'margin:0;line-height:inherit;color:inherit;'}\n\t\t\t}\n\t\t),\n\t\tdata:{\n\t\t\tretain:'no',\n\t\t\ttext:[\n\t\t\t\t!isconflict?'<div class=\"fs130 red mb5\">'+l.TXT_DEL_TITLE+'</div>':'',\n\t\t\t\tisconflict?'<div class=\"fs130 orange mb5\">'+l.TXT_DEL_TITLE_CONFLICT+'</div>':'',\n\t\t\t\ttrow.assign(l.TXT_DEL_WARN.assign(_trunc(doc._id, 25), _trunc(d.path[0], 25))),\n\t\t\t\ttrow.assign([\n\t\t\t\t\t'<label class=\"xgray\"><input type=\"radio\" name=\"retain\" value=\"no\" class=\"mr6\"> '+l.LBL_DEL_ALL+'</label>',\n\t\t\t\t\t'<label class=\"xgray\"><input type=\"radio\" name=\"retain\" value=\"retain\" class=\"mr6\"> '+l.LBL_DEL_RETAIN+'</label>'\n\t\t\t\t].join('')),\n\t\t\t\td.conflicts.length && islast?trow.assign(l.TXT_DEL_NODEL):'',\n\t\t\t\tisconflict?trow.assign(l.TXT_DEL_CONFLICT):''\n\t\t\t].compact(true).join(''),\n\t\t\tyescss:isconflict?'orange':'red',\n\t\t\tyes:l.BTN_DEL_START,\n\t\t\tno:l.BTN_CANCEL,\n\t\t\tcancel:''\n\t\t},\n\t\tcss:'lh160 xgray p20 pb25'\n\t})\n\t.then(function(res){\n\t\tif (res.cmd!='yes') return pi.reject(999, 'Cancelled', 'Cancelled');\n\t\t_delReq(res.retain=='retain');\n\t})\n\t.fail(function(){\n\t\tpi.reject(999, 'Cancelled', 'Cancelled');\n\t})\n\n\n\treturn pi.promise();\n\t\n\t// - - - - - - - - - - - - \n\t\n\tfunction _delReq(retain){\n\t\t\n\t\tvar req = !retain?{\n\t\t\turl:url,\n\t\t\tmethod:'DELETE',\n\t\t\theaders:{'X-Couch-Full-Commit':'true'}\n\t\t}:{\n\t\t\turl:[d.path[0],'_bulk_docs'],\n\t\t\tmethod:'POST',\n\t\t\theaders:{'Content-type':'application/json', 'X-Couch-Full-Commit':'true'},\n\t\t\tdata: JSON.stringify({docs:[Object.merge({_deleted:true}, doc)]})\n\t\t};\n\t\t\n\t\treturn that.Req(req)\n\t\t.then(function(res){\n\t\t\t\n\t\t\tcw.lib.note(l.MSG_DEL_OK.assign( _trunc(doc._id), _trunc(d.path[0])) , 'ok');\n\t\t\t\n\t\t\t// notify tabs\n\t\t\ttry {\n\t\t\t\t$.my.radio('dbupdate', {db:d.path[0], cmd:'delete', docs:[doc._id]});\n\t\t\t}catch(e){\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t\t\n\t\t\t// decide should we close tab or reload doc\n\t\t\tif (d.conflicts.length) _reloadDoc(true);\n\t\t\telse {\n\t\t\t\t(function(){\n\t\t\t\t\tthat.my.root().trigger('tabclose', {tabid:d.tabid, enforce:true});\n\t\t\t\t}).debounce(100)();\n\t\t\t\tpi.resolve(res);\n\t\t\t}\n\t\t})\n\t\t.fail(function(code, err, msg){\n\t\t\t// fail to read doc back\n\t\t\tcw.lib.note(l.MSG_DEL_FAIL.assign(_trunc(doc._id), code, es(err)), 'error');\n\t\t\t// however, notify tabs\n\t\t\t$.my.radio('dbupdate', d.path[0]);\n\t\t\t\n\t\t\treturn pi.reject(code, err, msg);\n\t\t});\n\t\t\n\t}\n\t\n\t// - - - - - - - - - - - - \n\t\n\tfunction _reloadDoc(reset){\n\t\t// reset to latest rev\n\t\td.path[1] = doc._id;\n\t\td.path.length = 2;\n\t\tvar wasrev = d.rev;\n\t\td.rev = '';\n\t\t\n\t\tif (wasrev) $.my.radio('pho_pathchange', {id:d.tabid, path:d.path, title:that.title()});\n\t\t\n\t\t// reload revs list and doc\n\t\tthat.GetDoc(true)\n\t\t.then(function(){\n\t\t\tcw.lib.note(l.MSG_DEL_RELOAD, '', 4000);\n\t\t\tthat.RevsList();\n\t\t\tpi.resolve(d.doc);\n\t\t})\n\t\t.fail(function(code, err, msg){\n\t\t\t// fail to read doc back\n\t\t\tcw.lib.note(l.MSG_DEL_RELOAD_FAIL.assign(_trunc(d.doc._id), code, es(err)), 'error');\n\t\t\tpi.reject(code, err, msg);\n\t\t\t// enforce tab close\n\t\t\tthat.my.trigger('#btn-del-doc', 'tabclose', {tabid:d.tabid, enforce:true});\n\t\t});\n\t}\n\n}",
        "RevsList": "function () {\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tvals = [{id:'',text:that.lang.TXT_REV}];\n\n\td.conflicts.forEach(function(r){ vals.push({id:r, text:'x'+r}) });\n\td.revs.forEach(function(r){ vals.push({id:r, text:r}) });\n\n\tthat.my.find('#app-rev').select2({\n\t\tdata:vals,\n\t\tformatResult: _formatOpt,\n\t\tformatSelection: _formatOpt\n\t});\n\n\tfunction _formatOpt (e) {\n\t\tvar t = e.text.replace('-','–').truncate(17,'middle','<span class=\"orange\">…</span>');\n\t\tif (t[0] == 'x') t = '<span class=\"red1 bolder\">†</span>\\u2009'+t.from(1);\n\t\treturn '<nobr>'+t+'</nobr>';\n\t}\n}"
      },
      "$config": {
        "id": "cw.Photon.$config",
        "lang": {},
        "data": {
          "path": [],
          "doc": {},
          "cmp": {
            "added": [],
            "updated": [],
            "deleted": [],
            "invalid": {}
          },
          "stamp": 0
        },
        "Doc": [],
        "Old": {},
        "hash": "function () {\n\t\treturn cw.lib.crc2((this.Doc[0]||{}).doc||{});\n\t}",
        "title": "function () { return '_config'; }",
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\t\n\t\treturn that.Get()\n\t\t.then(function(res){\n\t\t\t$o.html(that.HTML.assign(that.lang));\n\t\t});\n\t}",
        "ui": {
          "#app-title": "function (d) {\n\t\treturn location.host;\n\t}",
          "#cfg-warn": {
            "delay": 100,
            "init": "function ($o) {\n\t\t\t$o.niceScroll({\n\t\t\t\tbouncescroll: true,\n\t\t\t\t//preservenativescrolling:false,\n\t\t\t\tcursorcolor:'#234',\n\t\t\t\tcursoropacitymin:0.07,\n\t\t\t\tcursoropacitymax:0.4,\n\t\t\t});\n\t\t}",
            "bind": "function (d,v) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this,\n\t\t\t\t\tc = that.Cmp(),\n\t\t\t\t\th = '',\n\t\t\t\t\tl = that.lang,\n\t\t\t\t\ttu = c.updated.length,\n\t\t\t\t\tta = c.added.length,\n\t\t\t\t\ttd = c.deleted.length,\n\t\t\t\t\tti = Object.size(c.invalid),\n\t\t\t\t\tts = '<div><div class=\"fs110 bolder mt8 \">{1}</div>{2}</div>';\n\t\t\t\n\t\t\th = [\n\t\t\t\tti?ts.assign(l.LBL_IERR.assign(ti), Object.keys(c.invalid).map(function(k){\n\t\t\t\t\treturn '<div class=\"lh130 mb5\"><span class=\"red1\">{1}:</span> {2}</div>'.assign(k, c.invalid[k]);\n\t\t\t\t}).join('')):null,\n\t\t\t\ttu?ts.assign(l.LBL_IUPD.assign(tu), c.updated.join('<br>')):null,\n\t\t\t\tta?ts.assign(l.LBL_IADD.assign(ta), c.added.join('<br>')):null,\n\t\t\t\ttd?ts.assign(l.LBL_IDEL.assign(td), c.deleted.join('<br>')):null\n\t\t\t].compact().join('').replace(/\\u2003/g,'<span class=\"o60\"> /&nbsp;</span>');\n\t\t\t\n\t\t\td.cmp = c;\n\t\t\t\n\t\t\tif (!h.length) return '<div class=\"mt8\">'+l.TXT_ITITLE_EMPTY+'</div>';\n\t\t\treturn h;\n\t\t}"
          },
          "#cfg-proxy": {
            "bind": "function () {\n\t\t\tthis.my.check('#cfg-warn');\n\t\t}",
            "watch": [
              "#jseditor"
            ]
          },
          "#jseditor": {
            "delay": 100,
            "check": false,
            "list": "<div></div>",
            "merge": false,
            "init": "function ($o) {\n\t\t\t$o.niceScroll({\n\t\t\t\tbouncescroll: true,\n\t\t\t\t//preservenativescrolling:false,\n\t\t\t\tcursorcolor:'#234',\n\t\t\t\tcursoropacitymin:0.07,\n\t\t\t\tcursoropacitymax:0.4,\n\t\t\t});\n\t\t}",
            "id": "function (e) {return this.data.stamp}",
            "hash": "function (e) {return cw.lib.crc2(e.doc)}",
            "manifest": "function (elt) {\n\t\t\treturn this.Pho('Ed').jsontree\n\t\t}",
            "bind": "this.Doc"
          },
          "#btn-cfg-save": {
            "delay": 20,
            "bind": "function (d,v) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this;\n\t\t\tthat.Save();\n\t\t}",
            "css": {
              ":disabled": "function (d,v) {return d.cmp.updated+d.cmp.added+d.cmp.deleted=='';}"
            },
            "watch": [
              "#cfg-warn"
            ]
          },
          "#btn-reload": {
            "bind": "function (d,v) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this;\n\t\t\tthat.Get(true);\n\t\t}"
          }
        },
        "die": "function ($o) {\n\t\t// Unmount niceScroll\n\t\tvar f = $o.find('#jseditor').getNiceScroll;\n\t\tif (typeof f == 'function') f().remove();\n\t}",
        "style": {
          " #jseditor>div": "font-size:14.5px!important;",
          " #jseditor .inav": "margin:1px 0!important;",
          " .iact .button": "padding: 0.05em 0 0.1em 0!important;",
          " #jseditor>.my-form>section>#editor>#doc>.iact.buttons": "padding-right:3px;"
        },
        "Get": "function (redraw) {\n\tvar that = this,\n\t\t\td = that.data;\n\t\n\treturn that.Req(d.path)\n\t.then(function(res){\n\t\tObject.keys(res).sort().forEach(function(i){\n\t\t\td.doc[i] = !Object.isObject(res[i])?res[i]:Object.keys(res[i]).sort().reduce(function(a,b){a[b]=res[i][b]; return a;},{});\n\t\t});\n\t\tthat.Doc = [{labelWidth:200,doc:that.data.doc}];\n\t\tthat.Old = Object.clone(d.doc, true);\n\t\td.cmp = {added:[],updated:[],deleted:[],invalid:{}};\n\t})\n\t.then(function(){\n\t\td.stamp = Date.now();\n\t\tif (redraw) that.my.recalc('#jseditor');\n\t\tthat.my.trigger('#cfg-proxy','resettabhash.my');\n\t})\n\t.fail(function(code,err,msg){\n\t\tcw.lib.note(that.lang.ERR_RELOAD.assign(code, err.truncate(45,'right','…').escapeHTML()), 'error');\n\t});\n}",
        "Cmp": "function _compare() {\n\t// compares this.Old and data.doc,\n\t// returns {updated, added, deleted, invalid}\n\t\n\tvar res = {\n\t\tupdated:[],\n\t\tadded:[],\n\t\tdeleted:[],\n\t\tinvalid:{},\n\t\toldcfg:{},\n\t\tnewcfg:{}\n\t};\n\t\n\tvar that = this,\n\t\t\tl = that.lang,\n\t\t\tle = l.ERR_VAL,\n\t\t\told = Object.clone(that.Old, true),\n\t\t\tcfg = Object.clone(that.data.doc, true),\n\t\t\tv0 = res.oldcfg = _keys(old, false),\n\t\t\tv1 = res.newcfg = _keys(cfg, true),\n\t\t\tinv = Object.keys(res.invalid),\n\t\t\tk0 = Object.keys(v0).subtract(inv),\n\t\t\tk1 = Object.keys(v1).subtract(inv);\n\t\n\t// deleted\n\tres.deleted = k0.subtract(k1);\n\tres.added = k1.subtract(k0);\n\tres.updated = k1.subtract(res.added).filter(function(k){\n\t\treturn JSON.stringify(v0[k]) != JSON.stringify(v1[k]);\n\t});\n\t\n\treturn res;\n\t\n\t// - - - - - - - - - - -\n\t\n\tfunction _keys(obj, check) {\n\t\tvar a = {},\n\t\t\t\tre = /^[a-z0-9_\\-!\\.]+$/i,\n\t\t\t\trehkey0 = /^httpd_.+_handlers$/,\n\t\t\t\trehkey1 = /^[a-z0-9_\\-!\\.\\/]+$/i;\n\t\t\n\t\tObject.keys(obj).forEach(function(lvl0){\n\t\t\tvar sobj = obj[lvl0];\n\t\t\tif (!Object.isObject(sobj)) return;\n\t\t\t\n\t\t\tObject.keys(sobj).forEach(function(lvl1){\n\t\t\t\tvar k = lvl0+'\\u2003'+lvl1;\n\t\t\t\tif (check) {\n\t\t\t\t\tif (rehkey0.test(lvl0) && !rehkey1.test(lvl1)) {\n\t\t\t\t\t\t//invalid key\n\t\t\t\t\t\tres.invalid[k] = le.CHARS;\n\t\t\t\t\t}\n\t\t\t\t\tif (!rehkey0.test(lvl0) && !re.test(lvl1)) {\n\t\t\t\t\t\t//invalid key\n\t\t\t\t\t\tres.invalid[k] = le.CHARS;\n\t\t\t\t\t}\n\t\t\t\t\telse if (!Object.isString(sobj[lvl1])) {\n\t\t\t\t\t\t//invalid val\n\t\t\t\t\t\tres.invalid[k] = le.VALSTRING;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[k] = sobj[lvl1];\n\t\t\t});\n\t\t});\n\t\treturn a;\n\t}\n\t\n}",
        "Save": "function _save_config() {\n\tvar that = this,\n\t\t\tcfg = that.Cmp(),\n\t\t\tnc = cfg.newcfg,\n\t\t\tcompiled = that.Pho('_compiled'),\n\t\t\tes = function(s){return (s+'').escapeHTML()},\n\t\t\tl = that.lang,\n\t\t\tsteps = [],\n\t\t\terrs = {};\n\t\n\tcfg.deleted.forEach(function(k){\n\t\tsteps.push({key:k, value:null })\n\t});\n\tcfg.added.concat(cfg.updated).forEach(function(k){\n\t\tsteps.push({key:k, value:nc[k] })\n\t});\n\n\tvar ctr = steps.length;\n\tsteps.forEach(function(obj, i){\n\t\t\t\t\n\t\tthat.Req({\n\t\t\turl:['_config'].concat(obj.key.split('\\u2003')), \n\t\t\tmethod:obj.value !== null?'PUT':'DELETE', \n\t\t\theaders:obj.value !== null?{'Content-type':'application/json'}:{},\n\t\t\tdata:obj.value !== null?JSON.stringify(obj.value):undefined\n\t\t})\n\t\t.then(function(){\n\t\t\tcw.log('Photon updated config key', obj.key.split('\\u2003'));\n\t\t})\n\t\t.fail(function(code, err, msg){\n\t\t\terrs[obj.key] = {code:code, error:err, reason:msg};\n\t\t})\n\t\t.always(function(){\n\t\t\tctr -= 1;\n\t\t\tif (!ctr) _end();\n\t\t});\n\n\t}.lazy(that.Pho('Cfg').batchUpdateCfg || 100));\n\t\n\tfunction _end(){\n\t\tif (Object.size(errs)) {\n\t\t\tcw.lib.note(l.MSG_SAVE_FAIL, 'error');\n\t\t\tconsole.log ('Errors during config update:');\n\t\t\tconsole.log(errs);\n\t\t}\n\t\telse {\n\t\t\tcw.lib.note(l.MSG_SAVE_OK, 'ok');\n\t\t\tthat.Get(true);\n\t\t}\n\t}\n}",
        "HTML": "<div class=\"w75p  dib vat\" id=\"cfg-panel-left\"><div id=\"a-head\" class=\"app-head nw pt18 pl20 pr20 lh160\"><div class=\"fr w20p fs95\"><div class=\"fi-magnifying-glass blue o50 fs95\" style=\"position: absolute; z-index: +1; left: 8px;top: 0.2em;\"></div><input type=\"text\" id=\"app-search\" class=\"ui-search w100p ml0 mr0 mt0 pr10\" placeholder=\"{PLC_SEARCH}\" style=\"background-image:none;padding-right:19px!important;\"><span class=\"fi-x fs80 dib vat pt2 blue ui-search-clear\" style=\"margin-left:-19px!important;\"onclick=\"$(this).siblings('input:eq(0)').val('').blur()\"></span></div><div id=\"app-title\" class=\"dib vat fs160 lh120 ell mr20\" style=\"max-width:40%\"></div><div class=\"nw mr10 dib vat tac w40p\" ><button id=\"btn-reload\" class=\"w40 mr2\" title=\"{PLC_RELOAD}\"><span class=\"fi-loop\"></span></button><button id=\"btn-cfg-save\" class=\"green mr2\" disabled>{BTN_SAVE}</button></div></div><div class=\"panelheight feather\"><div id=\"jseditor\" class=\"panelheight pl20 pr20 pt10 pb16\"></div></div></div><div class=\"w25p dib vat\"><div id=\"a-head\" class=\"app-head nw pt18 ml15 mr20\"><div class=\"dib vat fs150 lh120 xfray o70\">{TXT_ITITLE}</div></div><div class=\"ml15 panelheight feather fs95 lh150\"><div id=\"cfg-warn\" class=\"panelheight pr20 pb16\"></div></div><div id=\"cfg-proxy\" class=\"hide\"></div></div>"
      },
      "$view": {
        "lang": {},
        "hash": "function () {return 'view';}",
        "title": "function () { \n\t\tvar that = this,\n\t\t\t\td = that.data,\n\t\t\t\tp = d.path;\n\t\tvar view = !d.view?'':d.view=='_'?'_design/*':d.view.split('\\ufffd')[1];\n\t\treturn p[0]+(view?'\\u2009÷\\u2009'+view:'');\n\t}",
        "Steps": [
          10,
          20,
          50,
          100,
          200,
          500
        ],
        "Modals": {},
        "data": {
          "path": [],
          "search": "",
          "view": "",
          "start": "",
          "limit": "+100",
          "reverse": false,
          "reduce": "",
          "state": "",
          "selection": [],
          "total_rows": 0,
          "offset": 0,
          "seq": "",
          "xkey": "0"
        },
        "Result": [],
        "Rows": [],
        "List": [],
        "Views": [
          {
            "id": "",
            "text": "_all_docs"
          }
        ],
        "Vi": {},
        "Pending": {},
        "RT": "function (key) {\n\t\treturn null==key?this:Object.isArray(key)?cw.lib.getref(this,key):this[key];\n\t}",
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\t\n\t\t// init row renderer closures and debounce\n\t\tthat.TMap = that.TMap();\n\t\tthat.TDocs = that.TDocs();\n\t\t\n\t\t// startkey shortcut click handler\n\t\t$o.on('click.my','.view-tofilter', function(evt){\n\t\t\tvar key = $(evt.currentTarget).data('filter');\n\t\t\td.start = Object.isString(key)?key.replace(/^\"|\"$/g,''):JSON.stringify(key);\n\t\t\t\n\t\t\tcw.lib.note(that.lang.MSG_STARTKEY_CHANGED.assign(d.start));\n\n\t\t\tthat.my.recalc('#view-startkey');\n\t\t\tthat.my.check('#view-startkey');\n\t\t}.debounce(40));\n\t\t\n\t\t// init selection\n\t\t$o.on('click.my','input[name=\"docs-selection\"]', function(){\n\t\t\tvar v = [],\n\t\t\t\t\t$f = $o.find('input[name=\"docs-selection\"]');\n\t\t\t$f.each(function () {\n\t\t\t\tvar $x = $(this);\n\t\t\t\tif ($x.is(\":checked\")) v.push($x.val());\n\t\t\t});\n\t\t\td.selection = v;\n\t\t\tthat.my.check('#view-hasselection')\n\t\t});\n\t\t\n\t\treturn that.GetViews()\n\t\t.then(function(){\n\t\t\tvar ddoc = d.path[2],\n\t\t\t\t\tvname = d.path[3];\n\t\t\tif (ddoc && vname) {\n\t\t\t\tvar vkey = '_design/'+ddoc+'\\ufffd'+vname;\n\t\t\t\td.view = that.Vi[vkey]?vkey:'';\n\t\t\t}\n\t\t})\n\t\t.then(that.GetView)\n\t\t.then(function(){\n\t\t\t$o.html(that.HTML.assign(that.lang));\n\t\t});\n\t}",
        "ui": {
          "#view-name": {
            "init": "function ($o) {\n\t\t\t$o.select2({\n\t\t\t\tdata:this.Views,\n\t\t\t\tminimumResultsForSearch:12\n\t\t\t})\n\t\t}",
            "bind": "function (d,v) {\n\t\t\tif (v==null) return d.view;\n\t\t\tif (d.view != v) {\n\t\t\t\td.start = '';\n\t\t\t\tthis.Rows = [];\n\t\t\t}\n\t\t\td.view = v;\n\t\t\treturn d.view;\n\t\t}"
          },
          "#view-limit": {
            "init": "function ($o) {\n\t\t\tvar that = this,\n\t\t\t\t\td = that.data,\n\t\t\t\t\tlim = (Math.abs(+d.limit) || 100).clamp(1,10000);\n\t\t\t$o.select2({\n\t\t\t\tdata:this.Steps.concat([lim]).unique().sortBy().map(function(e){\n\t\t\t\t\treturn {id:'+'+e, text:e+''}\n\t\t\t\t}),\n\t\t\t\tminimumResultsForSearch:1e4\n\t\t\t})\n\t\t}",
            "bind": "function (d,v) {\n\t\t\tif (v==null) return d.limit;\n\t\t\td.limit = v;\n\t\t\treturn d.limit;\n\t\t}"
          },
          "#view-startkey": {
            "delay": 50,
            "bind": "start",
            "watch": [
              "#btn-clear-startkey",
              "#btn-view-plus",
              "#btn-view-minus",
              "#view-name"
            ],
            "css": {
              "my-search": "new RegExp(/^.{1,}$/)"
            }
          },
          "#app-search": {
            "delay": 150,
            "bind": "search",
            "css": {
              "my-search": "new RegExp(/^.{3,}$/)"
            }
          },
          "#btn-reload": {
            "bind": "function (d,v) {\n\t\t\tif (v==null) return;\n\t\t\tthis.GetView(true);\n\t\t\tthis.GetViews(true);\n\t\t}"
          },
          "#btn-view-compact": {
            "bind": "function (d,v,$o) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this;\n\t\t\tif ($o.data('modal')) that.my.modal('#btn-view-compact', true);\n\t\t\telse {\n\t\t\t\tif (that.Modals.head) that.Modals.head.modal(true);\n\t\t\t\tthat.Modals.head = $o;\n\t\t\t\tthat.my.modal('#btn-view-compact',{\n\t\t\t\t\tmanifest:that.Pho('Compact'),\n\t\t\t\t\twidth:370,\n\t\t\t\t\tdata:$.extend(\n\t\t\t\t\t\t{ selection:[d.path[0]] }, \n\t\t\t\t\t\tObject.size(that.Vi)?{ddocs:Object.keys(that.Vi).map(function(e){\n\t\t\t\t\t\t\treturn e.split('\\ufffd')[0].split('/')[1]\n\t\t\t\t\t\t}).unique().sort()}:{}\n\t\t\t\t\t),\n\t\t\t\t\talign:'top:102%;',\n\t\t\t\t\tnose:'top',\n\t\t\t\t\tcss:'xgray',\n\t\t\t\t\tscreen:false,\n\t\t\t\t\tesc:true,\n\t\t\t\t\tbound:20\n\t\t\t\t})\n\t\t\t\t.always(function(){\n\t\t\t\t\tthat.Modals.head = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}"
          },
          "#btn-view-acl": {
            "bind": "function (d,v,$o) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this;\n\t\t\tif ($o.data('modal')) that.my.modal('#btn-view-acl', true);\n\t\t\telse {\n\t\t\t\t// Read current sec obj\n\t\t\t\tthat.Req([d.path[0],'_security'])\n\t\t\t\t.then(function(res){\n\t\t\t\t\tif (that.Modals.head) that.Modals.head.modal(true);\n\t\t\t\t\tthat.Modals.head = $o;\n\t\t\t\t\tthat.my.modal('#btn-view-acl',{\n\t\t\t\t\t\tmanifest:that.Pho('SecObj'),\n\t\t\t\t\t\twidth:350,\n\t\t\t\t\t\tdata:$.extend(true,{}, { dbs:[d.path[0]], admins:res.admins, members:res.members }),\n\t\t\t\t\t\talign:'top:102%;',\n\t\t\t\t\t\tnose:'top',\n\t\t\t\t\t\tcss:'xgray',\n\t\t\t\t\t\tscreen:false,\n\t\t\t\t\t\tesc:true,\n\t\t\t\t\t\tbound:20\n\t\t\t\t\t})\n\t\t\t\t\t.always(function(){\n\t\t\t\t\t\tthat.Modals.head = null;\n\t\t\t\t\t});\n\n\t\t\t\t})\n\t\t\t\t.fail(function(code, err, msg){\n\t\t\t\t\tcw.lib.note(that.lang.ERR_GETACL, 'error');\n\t\t\t\t});\n\n\t\t\t}\n\t\t}"
          },
          "#btn-view-newdoc": {
            "delay": 60,
            "bind": "function (d,v,$o) {\n\t\t\t$o.attr('href','#'+encodeURIComponent(d.path[0])+'/_new');\n\t\t}"
          },
          "#btn-view-minus": {
            "delay": 1,
            "bind": "function (d,v) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this,\n\t\t\t\t\tnewstart = d.start,\n\t\t\t\t\ttr = +d.total_rows,\n\t\t\t\t\tlim = +d.limit,\n\t\t\t\t\tisReduce = that.Vi[d.view] && that.Vi[d.view].reduce && d.reduce+'';\n\t\t\tif (!d.start) {\n\t\t\t\tif (tr > lim || isReduce) newstart = '_'+(tr - lim).clamp(0, 1e12);\n\t\t\t}\n\t\t\telse if (/^_\\d+$/.test(d.start)) {\n\t\t\t\tnewstart = '_'+((+d.start.substr(1)||0)-lim).clamp(0, isReduce?1e12:tr);\n\t\t\t}\n\t\t\tif (newstart=='_0') newstart = '';\n\t\t\td.start = newstart;\n\t\t}",
            "css": {
              ":disabled": "function (d,v) {\n\t\t\t\tvar that = this;\n\t\t\t\treturn (d.start && !/^_\\d+$/.test(d.start)) || (!d.start && that.Rows.length <= +d.limit);\n\t\t\t}"
            },
            "watch": [
              "#view-startkey",
              "#view-limit",
              "#state-proxy"
            ]
          },
          "#btn-view-plus": {
            "bind": "function (d,v) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this,\n\t\t\t\t\tnewstart = d.start,\n\t\t\t\t\ttr = +d.total_rows,\n\t\t\t\t\tlim = +d.limit,\n\t\t\t\t\tisReduce = that.Vi[d.view] && that.Vi[d.view].reduce && d.reduce+'';\n\t\t\tif (!d.start) {\n\t\t\t\tif (tr > lim || isReduce) newstart = '_'+lim;\n\t\t\t}\n\t\t\telse if (/^_\\d+$/.test(d.start)) {\n\t\t\t\tvar start = (+d.start.substr(1)||0) + lim;\n\t\t\t\tnewstart = '_'+(start >= tr && !isReduce? 0:start);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// we have a key\n\t\t\t\tif (that.Rows.length <= lim) newstart = '';\n\t\t\t\telse newstart = JSON.stringify(that.Rows[lim].key).replace(/^\"|\"$/g,'');\n\t\t\t}\n\t\t\tif (newstart=='_0') newstart = '';\n\t\t\td.start = newstart;\n\t\t}",
            "css": {
              ":disabled": "function (d,v) {\n\t\t\t\tvar that = this;\n\t\t\t\treturn !d.start && that.Rows.length <= +d.limit;\n\t\t\t}"
            },
            "watch": [
              "#view-limit",
              "#state-proxy"
            ]
          },
          "#state-proxy": {
            "delay": 20,
            "bind": "function (d,v) {\n\t\t\tif (v!=null) return;\n\t\t\tvar that = this,\n\t\t\t\t\tp = d.path.slice(0);\n\t\t\t\n\t\t\td.path = that.s2p();\n\t\t\t\n\t\t\tif ( d.state != cw.lib.sdbm([d.view, d.start, d.limit, d.reverse, d.reduce+'']) ) {\n\t\t\t\t$.my.radio('pho_pathchange', {id:d.tabid, path:d.path, title:that.title()});\n\t\t\t\td.state = cw.lib.sdbm([d.view, d.start, d.limit, d.reverse]);\n\t\t\t\tthat.GetView(true);\n\t\t\t}\n\t\t}",
            "watch": [
              "#view-startkey",
              "#view-name",
              "#view-limit",
              "#btn-view-dir",
              "#view-reduce"
            ],
            "listen": {
              "dbupdate": "function (d,v) {\n\t\t\t\tvar db;\n\t\t\t\tif (Object.isObject(v)) db = v.db;\n\t\t\t\telse db = v+'';\n\t\t\t\tif (db!=d.path[0]) return;\n\t\t\t\tthis.GetView(true);\n\t\t\t}",
              "dbdeleted": "function (d,v) {\n\t\t\t\tif (v!=d.path[0]) return;\n\t\t\t\tvar that = this;\n\t\t\t\t(function(){\t\n\t\t\t\t\tthat.my.root().trigger('tabclose', {tabid:d.tabid, enforce:true});\n\t\t\t\t}).debounce(Number.random(10,50))();\n\t\t\t}"
            }
          },
          "#view-results": {
            "init": "function ($o) {\n\t\t\tvar that = this,\n\t\t\t\t\ttdocs = that.TDocs,\n\t\t\t\t\ttmap = that.TMap,\n\t\t\t\t\td = that.data;\n\t\t\t// init list manager\n\t\t\t$o.list({\n\t\t\t\tdata:that.Rows.to(+d.limit),\n\t\t\t\tdelay:0,\n\t\t\t\tchunk:50,\n\t\t\t\tsortBy:null,\n\t\t\t\tid: function(e){return e._idx},\n\t\t\t\thash:function(e) {\n\t\t\t\t\tvar h = cw.lib.sdbm([  d.view, d.seq, that.Rows.length, e._checked ]);\n\t\t\t\t\treturn h;\n\t\t\t\t},\n\t\t\t\ttemplate: function(e, i){ \n\t\t\t\t\tvar h = d.view==''?tdocs(e, i):tmap(e, i); \n\t\t\t\t\treturn h;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// init nicescroll\n\t\t\t$o.niceScroll({\n\t\t\t\tcursorcolor:'#234',\n\t\t\t\tcursoropacitymin:0.07,\n\t\t\t\tcursoropacitymax:0.4,\n\t\t\t});\n\t\t\t\n\t\t\t// Init CodeMirror (readonly mode)\n\t\t\t// on click at trimmed JSON\n\t\t\t$o.on('click.my','.col-vals', function(evt){\n\t\t\t\tvar $a = $(evt.currentTarget),\n\t\t\t\t\t\tkey = $a.parent().data('key'),\n\t\t\t\t\t\tskey = Object.isString(key)?key:JSON.stringify(key),\n\t\t\t\t\t\thold  = '',\n\t\t\t\t\t\ts, row,\n\t\t\t\t\t\t$e, ed;\n\t\t\t\tif (!$a.is('.col-json')) {\n\t\t\t\t\trow = (that.Rows || []).find(function(e){\n\t\t\t\t\t\treturn e._idx == skey;\n\t\t\t\t\t});\n\t\t\t\t\tif (!row) return false;\n\n\t\t\t\t\ts = JSON.stringify(Object.reject(row,/^_/), null, '  ');\n\n\t\t\t\t\t$a.addClass('col-json');\n\n\t\t\t\t\tif (!$a.find('>.col-ed-close').length) {\n\t\t\t\t\t\t$e = $('<div class=\"col-ed\"></div>').appendTo($a);\n\t\t\t\t\t\t$a.append('<div class=\"col-ed-close fs130 lh130\" title=\"'+that.RT('lang').TIP_CLOSEJSON+'\">✕</div>');\n\n\t\t\t\t\t\ted = CodeMirror($e[0], {\n\t\t\t\t\t\t\tmode: \t\t\t\t\t'text/javascript',\n\t\t\t\t\t\t\tviewportMargin:\t5,\n\t\t\t\t\t\t\tlineNumbers:\t\tfalse,\n\t\t\t\t\t\t\tlineWrapping:\t\ttrue,\n\t\t\t\t\t\t\tindentWithTabs:\t!0,\n\t\t\t\t\t\t\tindentUnit:\t\t\t2,\n\t\t\t\t\t\t\ttabSize:\t\t\t\t2,\n\t\t\t\t\t\t\ttheme: \t\t\t\t\t'default',\n\t\t\t\t\t\t\treadOnly:true\n\t\t\t\t\t\t});\n\t\t\t\t\t\ted.getDoc().setValue(s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Close CM on X click\n\t\t\t$o.on('click.my','.col-ed-close', function(evt){\n\t\t\t\t$(evt.currentTarget).parent().removeClass('col-json');\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}",
            "delay": 10,
            "bind": "function (d,v,$o) {\n\t\t\tif (v!=null) return;\n\t\t\tvar that = this;\n\t\t\tif (!d.view) {\n\t\t\t\tvar osel = cw.lib.a2o(d.selection);\n\t\t\t\tthat.Rows.forEach(function(row){row._checked = osel[row.key]?'checked':''});\n\t\t\t}\n\t\t\t$o.list('data', that.Rows.slice(0).to(+d.limit));\n\t\t}",
            "watch": [
              "#state-proxy",
              "#view-hasselection",
              "#btn-select"
            ]
          },
          "#view-cols": {
            "delay": 30,
            "bind": "function (d,v) {\n\t\t\treturn this.lang.TXT_MAPVIEW(Math.min(this.Rows.length, +d.limit), d.total_rows==-1?'unknown':d.total_rows)\n\t\t}",
            "watch": [
              "#view-results",
              "#state-proxy"
            ]
          },
          "#view-links": {
            "bind": "function (d,v) {\n\t\t\tvar that = this,\n\t\t\t\t\tt = '<a class=\"tdn\" href=\"#{1}\">{2}</a>',\n\t\t\t\t\tp = d.path,\n\t\t\t\t\tview = d.view.split('\\ufffd');\n\t\t\t\n\t\t\tif (!d.view) return [p[0].escapeHTML(),'/','<span class=\"xgray\">_all_docs</span>'].join('\\u2009');\n\t\t\treturn [\n\t\t\t\tt.assign( p[0], p[0].escapeHTML() ),\n\t\t\t\t'/',\n\t\t\t\tt.assign( p[0]+'/'+view[0], view[0].escapeHTML() )\n\t\t\t].join('\\u2009')\n\t\t}",
            "watch": [
              "#view-results",
              "#state-proxy"
            ]
          },
          "#btn-view-dir": {
            "bind": "function (d,v) {\n\t\t\tif (v!=null) {\n\t\t\t\td.reverse = !d.reverse;\n\t\t\t}\n\t\t\treturn !d.reverse?'▲':'▼';\n\t\t}",
            "events": "click.my"
          },
          "#view-hasselection": {
            "delay": 10,
            "css": {
              "hide": "function (d) {\n\t\t\t\treturn !!d.view || !d.selection.intersect(this.Rows.to(+d.limit).map(function(row){return row.key;})).length;\n\t\t\t}"
            },
            "watch": [
              "#view-name",
              "#btn-select"
            ]
          },
          "#view-reduce": {
            "delay": 10,
            "init": "function ($o) {\n\t\t\t$o.tags({\n\t\t\t\ttags:[[\n\t\t\t\t\t{'Group none':'0'},\n\t\t\t\t\t{'\\u2009L1\\u2009':'1'},\n\t\t\t\t\t{'\\u2009L2\\u2009':'2'},\n\t\t\t\t\t{'\\u2009L3\\u2009':'3'},\n\t\t\t\t\t{'\\u2009L4\\u2009':'4'},\n\t\t\t\t\t{'\\u2009L5\\u2009':'5'},\n\t\t\t\t\t{'\\u2009L6\\u2009':'6'},\n\t\t\t\t\t{'Exact':'99'}\n\t\t\t\t]],\n\t\t\t\tempty:{'Map only':''},\n\t\t\t\tgroupshim:'',\n\t\t\t\ttagshim:''\n\t\t\t})\n\t\t}",
            "bind": "reduce",
            "css": {
              "self:hide": "function (d,v) {\n\t\t\t\treturn !this.Vi[d.view] || !this.Vi[d.view].reduce;\n\t\t\t}"
            },
            "watch": "#view-name"
          },
          "#btn-select": {
            "delay": 50,
            "bind": "function (d,v) {\n\t\t\tif (!!d.view ) return '';\n\t\t\tvar that = this,\n\t\t\t\t\tall = that.Rows.to(+d.limit),\n\t\t\t\t\tlist = all.map(function(e){return e.id}),\n\t\t\t\t\tsel = d.selection.intersect(list),\n\t\t\t\t\tsl = sel.length,\n\t\t\t\t\tl = that.lang,\n\t\t\t\t\tt;\n\t\t\t\n\t\t\tif (v!=null) {\n\t\t\t\t// unselect\n\t\t\t\tif (sl) d.selection = d.selection.subtract(list).unique();\n\t\t\t\t// select\n\t\t\t\telse d.selection = d.selection.concat(list).unique();\n\t\t\t\t\n\t\t\t\tsel = d.selection.intersect(list);\n\t\t\t\tsl = sel.length;\n\t\t\t}\n\n\t\t\tif (sl) t = l.TXT_UNSELECT.assign(sel.length == all.length?l.TXT_SELECT_ALL:sl);\n\t\t\telse t = l.TXT_SELECT.assign(list.length == all.length?l.TXT_SELECT_ALL:l.TXT_SELECT_FILTERED);\n\t\t\t\n\t\t\treturn t;\n\t\t}",
            "events": "click.my",
            "css": {
              "hide": "function (d,v) {return !!d.view || !this.Rows.length}"
            },
            "watch": [
              "#view-hasselection",
              "#state-proxy"
            ]
          },
          "#btn-view-deldocs": {
            "delay": 20,
            "bind": "function (d,v) {\n\t\t\tvar that = this;\n\t\t\tif (v==null) return;\n\t\t\t\n\t\t\t// mark busy\n\t\t\tthat.my.root().addClass('app-busy');\n\t\t\t$.my.radio('pho_appbusy',{id:d.tabid, busy:true});\n\t\t\t// save attempt\n\t\t\t\n\t\t\tthat.DelDocs()\n\t\t\t.always(function(){\n\t\t\t\t$.my.radio('pho_appbusy',{id:d.tabid, busy:false});\n\t\t\t\tthat.my.root().removeClass('app-busy');\n\t\t\t});\n\t\t}"
          }
        },
        "HTML": "<div id=\"a-head\" class=\"app-head nw pt18 pl20 pr20 lh160\"><div class=\"fr w12p fs95\"><div class=\"fi-magnifying-glass xgray o50 fs95\" style=\"position: absolute; z-index: +1; left: 8px;top: 0.2em;\"></div><input type=\"text\" id=\"app-search\" class=\"ui-search w100p ml0 mr0 mt0 pr10\" placeholder=\"{PLC_SEARCH}\" style=\"background-image:none;padding-right:19px!important;\"><span class=\"fi-x fs80 dib vat pt2 blue ui-search-clear\" style=\"margin-left:-19px!important;\"onclick=\"$(this).siblings('input:eq(0)').val('').blur()\"></span></div><div class=\"nw dib vat\" style=\"width:calc(35% + 230px);\"><button id=\"btn-reload\" class=\"w40 mr2\" title=\"{TIP_RELOAD}\"><span class=\"fi-loop\"></span></button><div class=\"dib vat mr2 bolder\" style=\"width:calc((100% - 204px) / 2 + 16px);\"><input id=\"view-name\" type=\"text\" class=\" w100p fs110 vat\"></div><div class=\"fs95 dib vat\" style=\"width:calc((100% - 204px) / 2);\"><div class=\"fi-filter xgray o50 fs95\" style=\"position: absolute; z-index: +1; left: 6px;top: 0.2em;\"></div><input id=\"view-startkey\" type=\"text\" class=\"vat ui-search w100p\" placeholder=\"{PLC_STARTKEY}\" style=\"background-image:none;padding-right:17px!important;padding-left:19px!important;border-radius:2px!important;\"><span class=\"fi-x fs80 dib vat pt2 blue w15 pl2 ui-search-clear\" style=\"margin-left:-15px!important;\"onclick=\"$(this).siblings('input:eq(0)').val('').blur()\"></span></div><span class=\"buttons ml2\"><button id=\"btn-view-minus\" class=\"w2em mr2 pl0 pr0\" title=\"{TIP_SHIFT_MINUS}\"><span class=\"fi-arrow-left o80\"></span></button><button id=\"btn-view-plus\" class=\"w2em mr2 pl0 pr0\" title=\"{TIP_SHIFT_PLUS}\"><span class=\"fi-arrow-right o80\"></span></button></span><div class=\"dib vat w65\"><input id=\"view-limit\" type=\"text\" class=\" w100p fs110 vat\"></div></div><div class=\"nw pl10 dib vat\" style=\"width:calc(53% - 250px);\"><a href=\"\" id=\"btn-view-newdoc\" class=\"button fs100 tdn dib green vat mr2\"><span class=\"lh140\">{BTN_NEWDOC}</span></a><span id=\"view-hasselection\" class=\"hide\"><button id=\"btn-view-copydocs\" class=\"mr2\" disabled>{BTN_COPYDOCS}</button><button id=\"btn-view-deldocs\" class=\"mr2 red\">{BTN_DELDOCS}</button></span><span id=\"view-noselection\"><button id=\"btn-view-acl\" class=\"mr2\">{BTN_ACL}</button><button id=\"btn-view-compact\" class=\"mr10\">{BTN_COMPACT}</button></span></div></div><div id=\"view-panel\" class=\"panelheight-32 br2 mt16 ml20 mr20 bas\"><div class=\"h30 bg-gray7 bbs lh160 pt1 nw oh ell\"><div class=\"w35p dib vat nw oh ell\"><span id=\"btn-view-dir\" class=\"dib pl8 pr6 mr2 vat cp o50 fs80 pt2 pseudolink tdn h30\"></span><div id=\"view-cols\" class=\"dib vat nw xgray\"></div><div id=\"btn-select\" class=\"pseudolink tdn dib vat ml15\"></div></div><div class=\"w65p dib gray fs90\"><span id=\"view-links\" class=\"gray fr pr8 w35p ell tar\"></span><span id=\"view-reduce\" class=\"dib vat pl7 hide\"></span></div></div><section id=\"view-results\" class=\"panelheight-64 gray-1 lh170\" style=\"outline:none;\"></section></div><div id=\"state-proxy\" class=\"hide\"></div>",
        "die": "function ($o) {\n\t\t// Unmount niceScroll\n\t\tvar $v = $o.find('#view-results'),\n\t\t\t\tf = $v.getNiceScroll;\n\t\tif (typeof f == 'function') f().remove();\n\t\t$v.list('remove');\n\t}",
        "style": {
          " #view-noselection": "display:none;",
          " #view-hasselection.hide+#view-noselection": "display:inline-block;",
          " #view-results": {
            "": "line-height:1.4em;",
            " .view-row": "min-height:1.9em;",
            " .view-row:nth-child(2n+0)": "background-color:rgba(227, 233, 236, 0.25);",
            " .view-hoverbtn": "display:inline-block;width:20px;line-height:1.2em;opacity:0;transition:opacity 0.5s;text-align:center;cursor:pointer;",
            " .view-row:hover .view-hoverbtn": "opacity:0.5;",
            " .view-row>div": "display:inline-block;vertical-align:top;word-wrap: break-word;",
            " input:checked+div": "font-weight:bolder",
            " .col-ids": "width:35%;padding:3px 20px 3px 8px;",
            " .col-vals": {
              "": "width:65%; padding-left:10px;",
              " .col-trim": "cursor:pointer",
              " .col-ed": "display:none;",
              " .col-ed-close": "display:none;",
              ".col-json": {
                "": "padding:0 0 0 6px!important;word-wrap:normal;",
                " .CodeMirror": "background:none;font-size:12px!important;line-height:15px!important;",
                ">div.col-trim": "display:none;",
                ">div.col-ed": "display:block;",
                ">div.col-ed-close": {
                  "": "display:block;cursor:pointer;text-align:right;position:absolute;top:0;right:5px;width:95%;height:21px;z-index:+2;transition:color 0.5s; color:rgba(41,109,166,0.75);",
                  ":hover": "color:#12a5dc;"
                }
              }
            },
            " .w40p-30": "width:calc(40% - 30px);"
          },
          " .bbs": "border-bottom-color:rgba(211,217,222,0.7)",
          " .bas": "border-color:rgba(211,217,222,0.7)",
          " .brs": "border-right:1px solid rgba(211,217,222,0.7)"
        },
        "TMap": "function () {\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tj2h = that.Pho('j2h');\n\t\n\tvar t = [\n\t\t'<div class=\"view-row\" data-key=\"{_idxsafe}\">',\n\t\t\t'<div class=\"col-ids\">',\n\t\t\t\t'{idsafe}',\n\t\t\t\t//'<a href=\"#{href}\" class=\"tdn\">{id}</a>',\n\t\t\t\t'<div class=\"view-tofilter pseudolink view-hoverbtn ml5\" data-filter=\"{idsafe}\"><span class=\"fi-filter\"></span></div>',\n\t\t\t\t'<div class=\"view-hoverbtn {nodoc}\">',\n\t\t\t\t\t'<a href=\"#{href}\" class=\"tdn\"><span class=\"fi-page-filled\"></span></a>',\n\t\t\t\t'</div>',\n\t\t\t'</div>',\n\t\t\t'<div class=\"col-vals {css}\"><div class=\"col-trim\">{html}</div></div>',\n\t\t'</div>'\n\t].join('');\n\n\t// Renderer function\n\t\n\treturn function _tmap (row, i) {\n\t\tvar limit = that.Rows.length,\n\t\t\t\tmapper = limit<120?_mapFull: limit<250?_mapMedium: _mapSimple,\n\t\t\t\tchars = limit<40?2000: limit<60?500: limit<120?300: 200,\n\t\t\t\tlvl = limit<40?5: limit<60?4: limit<120?3: limit<250?3: 2;\n\n\t\tvar v = row.value, s;\n\t\tvar a = j2h(v, chars, ['_id','id','name'], lvl);\n\t\tif (a.length==1 && a[0][0]=='short') {\n\t\t\tif (a[0][1][0] == '{') a[0][1] ='Object '+a[0][1];\n\t\t\telse if (a[0][1][0] == '[') a[0][1]='Array '+a[0][1];\n\t\t}\n\t\ts = a.map(mapper).join('');\n\t\treturn t.assign({\n\t\t\t_idx:row._idx,\n\t\t\t_idxsafe:row._idxsafe,\n\t\t\tid:row.key,\n\t\t\tidsafe:JSON.stringify(row.key).escapeHTML(),\n\t\t\thref:row.id?(encodeURIComponent(d.path[0]) +'/'+encodeURIComponent(row.id)).escapeHTML():'',\n\t\t\tnodoc:row.id?'':'hide',\n\t\t\tkey:row.key,\n\t\t\t//doc:'',\n\t\t\thtml:s,\n\t\t\tcss:s.length>250?'fs95 lh140 pt3 pb3':'lh140 pt2 pb2'\n\t\t});\n\t}\n\n\n\t// - - - - - - \n\n\tfunction _mapFull(row){\n\t\tif (!row[0]) return row[1];\n\t\treturn '<span class=\"jval-'+row[0]+'\">'+row[1]+'</span>';\n\t}\n\n\t// - - - - - - \n\n\tfunction _mapMedium(row){\n\t\tif (row[0]!='bracket' && row[0]!='key') return row[1];\n\t\treturn '<span class=\"jval-'+row[0]+'\">'+row[1]+'</span>';\n\t}\n\n\t// - - - - - - \n\n\tfunction _mapSimple(row){ return row[1];}\n}",
        "TDocs": "function () {\n\tvar that = this,\n\t\t\td = that.data;\n\t\n\tvar t = [\n\t\t'<div class=\"w100p view-row pt3\">',\n\t\t\t'<input class=\"w23 dib tac ml4 mr1 pt2\" type=\"checkbox\" name=\"docs-selection\" {checked} value=\"{idsafe}\">',\n\t\t\t'<div class=\"w40p-30 pr20\">',\n\t\t\t\t'<a href=\"#{href}\" class=\"tdn\">{idsafe}</a>',\n\t\t\t\t'<div class=\"view-tofilter view-hoverbtn ml5\" data-filter=\"{idsafe}\"><span class=\"fi-filter o50 blue\"></span></div>',\n\t\t\t'</div>',\n\t\t\t'<div class=\"w60p pr10\">{rev}</div>',\n\t\t'</div>'\n\t].join('');\n\n\t// Renderer function\n\t\n\treturn function _tdocs (row, i) {\n\t\treturn t.assign({\n\t\t\tid:row.key,\n\t\t\tidsafe:row.key.escapeHTML(),\n\t\t\tchecked:row._checked,\n\t\t\thref:d.path[0] +'/'+row.key,\n\t\t\trev:(row.value.rev||'').escapeHTML()\n\t\t});\n\t}\n}",
        "GetView": "function _getView(redraw) {\n\t\n\t// gets viewdata according to current state,\n\t\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tdb = d.path[0],\n\t\t\tparams = {limit:100, update_seq:true},\n\t\t\tviewname = that.Vi[d.view]?that.Vi[d.view].path:[db, '_all_docs'],\n\t\t\tpi = $.Deferred(),\n\t\t\tbusy = true;\n\t\n\tvar recalc = '#state-proxy',\n\t\t\trmethod = 'check'\n\t\n\tvar url = viewname;\n\t\n\tif (d.reverse) params.descending = true;\n\tparams.limit = Math.abs(+d.limit) + 1;\n\t\n\tif (d.start) {\n\t\tif (/^_\\d+$/.test(d.start)) params.skip = +d.start.substr(1) || 0;\n\t\telse {\n\t\t\tvar x;\n\t\t\ttry {\n\t\t\t\tx = JSON.parse(d.start);\n\t\t\t}catch(e){}\n\t\t\tparams.startkey = undefined!=x?x:d.start;\n\t\t}\n\t}\n\t\n\tif (that.Vi[d.view] && that.Vi[d.view].reduce) {\n\t\tvar lvl = d.reduce+'';\n\t\tif (!lvl) params.reduce=false;\n\t\telse if (lvl == 0) params.group = false;\n\t\telse if (lvl == 99) params.group = true;\n\t\telse {\n\t\t\tparams.group = true;\n\t\t\tparams.group_level = +lvl;\n\t\t}\n\t}\n\t\n\t\t\n\tvar requrl = url.concat([params]);\n\t\n\tif (that.Pending[JSON.stringify(requrl)]) return that.Pending[JSON.stringify(requrl)];\n\t\n\t// mark busy\n\t(function(){\n\t\tif (busy) {\n\t\t\tthat.my.root().toggleClass('app-busy', busy);\n\t\t\t$.my.radio('pho_appbusy',{id:d.tabid, busy:busy});\n\t\t}\n\t}).debounce(10)();\n\t\n\t// get data\n\t\n\treturn that.Pending[JSON.stringify(requrl)] = that.Req(requrl)\n\t.then(function(res){\n\t\t\n\t\tthat.Pending[JSON.stringify(requrl)] = null;\n\n\t\tres.stamp = Date.now()+'';\n\t\tres.url = url+'';\n\t\tthat.Result[0] = res;\n\t\td.total_rows = res.total_rows || -1;\n\t\td.offset = res.offset || -1;\n\t\td.seq = (res.update_seq || Date.now())+'';\n\t\tres.rows.forEach(function(row,i){\n\t\t\trow._idx = JSON.stringify([row.key, row.id, i]); \n\t\t\trow._idxsafe = row._idx.escapeHTML();\n\t\t})\n\t\tthat.Rows = (res.rows || []).slice(0);\n\t\t\n\t\tpi.resolve(res);\n\t\tif (redraw) that.my[rmethod](recalc);\n\t}.debounce(10))\n\t.fail(function(code, err, msg){\n\t\t\n\t\tthat.Pending[JSON.stringify(requrl)] = null;\n\t\t\n\t\tcw.log('Photon failed to read view', db+'/'+viewname, code, err, msg);\n\t\tthat.Result[0] = {\n\t\t\turl:JSON.stringify(requrl),\n\t\t\tcode:code,\n\t\t\tstamp:Date.now()+'',\n\t\t\tok:false,\n\t\t\terror:err,\n\t\t\tmsg:msg\n\t\t};\n\t\tpi.resolve(that.Result[0]);\n\t\tif (redraw) that.my[rmethod](recalc);\n\t}.debounce(10))\n\t.always(function(){\n\t\t// mark busy\n\t\tbusy = !1;\n\t\tthat.my.root().toggleClass('app-busy', busy);\n\t\t$.my.radio('pho_appbusy',{id:d.tabid, busy:busy});\n\t}.debounce(15));\n}",
        "GetViews": "function _getViewsList(redraw) {\n\n\t// Gets list of all ddocs\n\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tdb = d.path[0],\n\t\t\turl = [db,'_all_docs',{startkey:'_design', endkey:'_design0',include_docs:true}],\n\t\t\tviewlist = [{id:'', text:'_all_docs'}],\n\t\t\tvi = {},\n\t\t\tpi = $.Deferred();\n\t\n\tthat.Req(url).then(function(res){\n\t\tvar rows = res.rows||[];\n\t\tif (!rows.length) return;\n\t\t// else viewlist.push({id:'_', text:'_design/*'}); \n\t\t\n\t\tvar reerl0 = /^\\[\\r\\n\\s\\t]*fun[\\r\\n\\s\\t]*\\([\\r\\n\\s\\t]*\\{/,\n\t\t\t\treerl1 = /\\.[\\r\\n\\s\\t]*$/;\n\t\t\n\t\trows.forEach(function(row){\n\t\t\tvar ddoc = row.doc,\n\t\t\t\t\tviews = ddoc.views || {},\n\t\t\t\t\tv = Object.keys(views),\n\t\t\t\t\tg = {text:row.id, children:[]};\n\t\t\tif (!v.length) return;\n\t\t\tv.forEach(function(key){\n\t\t\t\tvar r = views[key];\n\t\t\t\t\n\t\t\t\t// Detect map\n\t\t\t\tif (!Object.isObject(r) || !Object.isString(r.map)) return;\n\t\t\t\t\n\t\t\t\tvar vid = row.id+'\\ufffd'+key,\n\t\t\t\t\t\ts0 = {id:vid, text:'\\u00a0\\u00a0'+key},\n\t\t\t\t\t\tv0 = {path:[db,'_design',row.id.split('/')[1],'_view',key], reduce:false, type:''};\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (Object.isFunction(cw.lib.unjson([r.map])[0])) v0.type = 'js';\n\t\t\t\telse if(reerl0.test(r.map) && reerl1.test(r.map)) {\n\t\t\t\t\ts0.text+= '(e)';\n\t\t\t\t\tv0.type = 'erlang';\n\t\t\t\t}\n\t\t\t\telse return;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// Detect reduce\n\t\t\t\tvar red = r.reduce,\n\t\t\t\t\t\tfold = '';\n\t\t\t\tif (Object.isString(red)) {\n\t\t\t\t\tif (red[0] == '_') red = red.from(1);\n\t\t\t\t\tif (red == 'sum') fold = 'Σ';\n\t\t\t\t\telse if (red = 'count') fold = '#';\n\t\t\t\t\telse if (red = 'min') fold = '⊻';\n\t\t\t\t\telse if (red = 'max') fold = '⊼';\n\t\t\t\t\telse if (red = 'stats') fold = '=';\n\t\t\t\t\telse if (red = 'sumsqr') fold = 'Σ²';\n\t\t\t\t\telse if (Object.isFunction(cw.lib.unjson([red])[0])) fold = 'f';\n\t\t\t\t\telse if (reerl0.test(red) && reerl1.test(red)) fold = 'e';\n\t\t\t\t\t\n\t\t\t\t\tif (fold) {\n\t\t\t\t\t\ts0.text+='\\u2009•\\u2009'+fold;\n\t\t\t\t\t\tv0.reduce = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tg.children.push(s0);\n\t\t\t\tvi[vid] = v0;\n\t\t\t});\n\t\t\t\n\t\t\t// put in list if any\n\t\t\tif (g.children.length) {\n\t\t\t\tg.children = g.children.sortBy('text');\n\t\t\t\tviewlist.push(g);\n\t\t\t}\n\t\t});\n\t\tviewlist = viewlist.sortBy('text');\n\t})\n\t.fail(function(code, err, msg){\n\t\tcw.log('Photon failed to read ddocs for the bucket', db, code, err, msg);\n\t\tcw.lib.note(that.lang.ERR_GETVIEWS.assign(db), 'error');\n\t})\n\t.always(function(){\n\t\tthat.Views = viewlist;\n\t\tthat.Vi = vi;\n\t\tif (redraw) $('#view-name').select2({data:viewlist,minimumResultsForSearch:12});\n\t\tpi.resolve(viewlist);\n\t});\n\t\n\t\n\treturn pi.promise();\n\n}",
        "DelDocs": "function _del_doc() {\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tsel = d.selection.slice(0),\n\t\t\tsl = sel.length,\n\t\t\tl = that.lang,\n\t\t\tes = function(s){return (s+'').escapeHTML()},\n\t\t\t_trunc = function (s, chars) {return es((s+'').truncate(chars || 15,'right','…'));};\n\n\tvar pi = $.Deferred(),\n\t\t\ttrow = '<div class=\"mb10\">{1}</div>';\n\t\n\t$.my.modal({\n\t\twidth:300,\n\t\tmanifest:that.Pho('Confirm'),\n\t\tdata:{\n\t\t\ttext:[\n\t\t\t\t'<div class=\"fs130 red mb5\">'+l.TXT_DEL_TITLE+'</div>',\n\t\t\t\ttrow.assign(l.TXT_DEL_WARN(sl, _trunc(d.path[0], 25)))\n\t\t\t].join(''),\n\t\t\tyescss:'red',\n\t\t\tyes:l.BTN_DEL_START,\n\t\t\tno:l.BTN_CANCEL,\n\t\t\tcancel:''\n\t\t},\n\t\tcss:'lh160 xgray p20 pb25',\n\t\tesc:true,\n\t\tenter:false\n\t})\n\t.then(function(res){\n\t\tif (res.cmd!='yes') return pi.reject(999, 'Cancelled', 'Cancelled');\n\t\t_delDocs();\n\t})\n\t.fail(function(){\n\t\tpi.reject(999, 'Cancelled', 'Cancelled');\n\t})\n\n\n\treturn pi.promise();\n\n\t\n\t// - - - - - - - - - - - - \n\t\n\tfunction _delDocs(){\n\t\t\n\t\tvar osel = cw.lib.a2o(sel),\n\t\t\t\tkeys = [],\n\t\t\t\tdocs = that.Rows.to(+d.limit).filter(function(d){\n\t\t\t\t\treturn osel[d.key]\n\t\t\t\t}).map(function(row){\n\t\t\t\t\tkeys.push(row.key);\n\t\t\t\t\treturn {_id:row.key, _rev:row.value.rev, _deleted:true};\n\t\t\t\t});\n\t\t\n\t\tvar req = {\n\t\t\turl:[d.path[0],'_bulk_docs'],\n\t\t\tmethod:'POST',\n\t\t\theaders:{'Content-type':'application/json', 'X-Couch-Full-Commit':'true'},\n\t\t\tdata: JSON.stringify({docs:docs})\n\t\t};\n\t\t\n\t\treturn that.Req(req)\n\t\t.then(function(res){\n\t\t\t\n\t\t\t// parse response\n\t\t\tvar num = res.length,\n\t\t\t\t\tdelnum = res.count(function(row){ return !row.error });\n\t\t\t\n\t\t\tcw.lib.note(l.MSG_DEL_OK( num, delnum, _trunc(d.path[0])), num == delnum?'ok':'error', 5000);\n\t\t\tif (num>delnum) console.log(res);\n\t\t\t\n\t\t\t// notify tabs\n\t\t\t$.my.radio('dbupdate', {db:d.path[0], cmd:'delete', docs:keys});\n\t\t\t\n\t\t\t// reload view\n\t\t\t//that.GetView(true);\n\t\t\tpi.resolve(res);\n\t\t})\n\t\t.fail(function(code, err, msg){\n\t\t\t// fail to read doc back\n\t\t\tcw.lib.note(l.MSG_DEL_FAIL.assign(code, es(err)), 'error');\n\t\t\treturn pi.reject(code, err, msg);\n\t\t});\n\t\t\n\t}\n}",
        "s2p": "function _state2path() {\n\t// converts curr state to path array\n\t\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tdb = d.path[0],\n\t\t\tp = [db];\n\t\n\tif (!d.start && !d.view) return [d.path[0]];\n\t\n\tvar view = that.Vi[d.view];\n\tif (view) {\n\t\tp.push('_view', view.path[2], view.path[4]);\n\t}\n\telse {\n\t\tp.push('_all_docs');\n\t}\n\n\tif (!d.start) return p;\n\tp.push(d.start, (d.reverse?'-':'')+(+d.limit));\n\treturn p;\n\t\n}"
      },
      "$dbs": {
        "lang": {},
        "hash": "function () {return 'list';}",
        "title": "function () {  return 'DB list and status'; }",
        "data": {
          "reverse": false,
          "search": "",
          "selection": [],
          "task": {
            "search": "",
            "filter": [
              ""
            ],
            "list": []
          }
        },
        "All": {},
        "List": [],
        "Batch": {},
        "Tasks": [],
        "RT": "function (key) {\n\t\treturn null==key?this:Object.isArray(key)?cw.lib.getref(this,key):this[key];\n\t}",
        "Modals": {},
        "TaskLoop": false,
        "LastSync": {},
        "init": "function ($o) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\tthat.Relist = that.Relist.throttle(100);\n\t\t$o.html(that.HTML.assign(that.lang));\n\t\t\n\t\t// init selection\n\t\t$o.on('click.my','input[name=\"db-selection\"]', function(){\n\t\t\tvar v = [],\n\t\t\t\t\t$f = $o.find('input[name=\"db-selection\"]');\n\t\t\t$f.each(function () {\n\t\t\t\tvar $x = $(this);\n\t\t\t\tif ($x.is(\":checked\")) v.push($x.val());\n\t\t\t});\n\t\t\td.selection = v;\n\t\t\tthat.my.check('#view-hasselection');\n\t\t});\n\t\t\n\t\treturn that.GetList(true)\n\t\t.then(function(){\n\t\t\n\t\t\tthat.GetTasks(true);\n\t\t\t\n\t\t\t// start reading tasks\n\t\t\tthat.TaskLoop = that.GetTasks.fill(true).every(that.Pho('Cfg').loopActiveTasks*1e3);\n\t\t\t\n\t\t});\n\t}",
        "Relist": "function () {\tthis.my.check('#db-proxy'); }",
        "GetList": "function (redraw,subset) {\n\t\tvar that = this,\n\t\t\t\td = that.data;\n\t\treturn that.Pho('GetList')()\n\t\t.then(function(){\n\t\t\tthat.All = that.Pho('All');\n\t\t\tif (redraw) that.Relist();\n\t\t\tthat.BatchInfo(subset || Object.keys(that.All), that.Pho('Cfg').batchDbInfoDelay);\n\t\t});\n\t}",
        "BatchInfo": "function _batch_info(list,delay) {\n\t\tvar that = this,\n\t\t\t\tresult = [];\n\t\tlist./*randomize().*/forEach(function(s, i){\n\t\t\tvar dbname = s;\n\t\t\tif (that.Batch[dbname]) return result[i] = that.Batch[dbname];\n\n\t\t\tresult[i] = Q.delay(1+delay*i)\n\t\t\t.then(function(){\n\t\t\t\tvar req = that.Req({url:[dbname]})\n\t\t\t\t.then(function(res){\n\t\t\t\t\tif (!that.All[dbname]) return;\n\t\t\t\t\t$.extend(that.All[dbname], res, {stamp:Date.now()});\n\t\t\t\t\tthat.Relist();\n\t\t\t\t})\n\t\t\t\t.always(function(){\n\t\t\t\t\tdelete that.Batch[dbname];\n\t\t\t\t});\n\t\t\t\tif (i==list.length-1) req.always(function(){that.Relist();}.debounce(200));\n\t\t\t\treturn req;\n\t\t\t});\n\t\t});\n\t\treturn result;\n\t}",
        "ui": {
          "#db-search": {
            "delay": 150,
            "bind": "search",
            "css": {
              "my-search": "new RegExp(/^.{2,}$/)"
            }
          },
          "#btn-reload": {
            "bind": "function (d,v) {\n\t\t\tif (v==null) return;\n\t\t\tif (!d.selection.length) {\n\t\t\t\tthis.GetList(true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.BatchInfo(d.selection, this.Pho('Cfg').batchDbInfoDelay);\n\t\t\t}\n\t\t}"
          },
          "#btn-view-dir": {
            "bind": "function (d,v) {\n\t\t\tif (v!=null) d.reverse = !d.reverse;\n\t\t\treturn !d.reverse?'▲':'▼';\n\t\t}",
            "events": "click.my"
          },
          "#btn-select": {
            "delay": 10,
            "bind": "function (d,v) {\n\t\t\tvar that = this,\n\t\t\t\t\tall = Object.keys(that.All),\n\t\t\t\t\tlist = that.List.map(function(e){return e.name}),\n\t\t\t\t\tsel = d.selection.intersect(list),\n\t\t\t\t\tsl = sel.length,\n\t\t\t\t\tl = that.lang,\n\t\t\t\t\tt;\n\t\t\t\n\t\t\tif (sl) t = l.TXT_UNSELECT.assign(sel.length == all.length?l.TXT_SELECT_ALL:sl);\n\t\t\telse t = l.TXT_SELECT.assign(list.length == all.length?l.TXT_SELECT_ALL:l.TXT_SELECT_FILTERED);\n\t\t\t\n\t\t\tif (v!=null) {\n\t\t\t\t// unselect\n\t\t\t\tif (sl) d.selection = d.selection.subtract(list).unique();\n\t\t\t\t// select\n\t\t\t\telse d.selection = d.selection.concat(list).unique();\n\t\t\t}\n\t\t\treturn t;\n\t\t}",
            "events": "click.my",
            "css": {
              "hide": "function (d,v) {return !this.List.length}"
            },
            "watch": [
              "#view-hasselection",
              "#db-proxy"
            ]
          },
          "#view-cols": {
            "bind": "function (d,v) {\n\t\t\treturn this.lang.TXT_MAPVIEW(this.List.length, Object.size(this.All))\n\t\t}",
            "watch": [
              "#db-proxy"
            ]
          },
          "#view-links": {
            "bind": "function (d,v) {\n\t\t\tvar that = this,\n\t\t\t\t\tbase = that.Pho('Base'),\n\t\t\t\t\tt = '<a target=\"_blank\" class=\"tdn\" href=\"{1}\">{2}</a>';\n\t\t\treturn [\n\t\t\t\tt.assign(base, base.replace(/^http[s]?:\\/\\/|\\//g,'').escapeHTML() )\n\t\t\t].join('\\u2009')\n\t\t}"
          },
          "#db-list": {
            "delay": 50,
            "init": "function ($o) {\n\t\t\tvar that = this,\n\t\t\t\t\tt = that.Row,\n\t\t\t\t\td = that.data;\n\t\t\t$o.list({\n\t\t\t\tdata:that.List,\n\t\t\t\tdelay:0,\n\t\t\t\tchunk:100,\n\t\t\t\tsortBy:null,\n\t\t\t\tid: function(e){return e.name},\n\t\t\t\thash:function(e) {\n\t\t\t\t\t\n\t\t\t\t\tvar h = cw.lib.sdbm([\n\t\t\t\t\t\te.name, \n\t\t\t\t\t\te.stamp, \n\t\t\t\t\t\te.update_seq,\n\t\t\t\t\t\te.checked+'x',\n\t\t\t\t\t\te.sizesafe, \n\t\t\t\t\t\te.security.stamp,\n\t\t\t\t\t\te.tasks.stamp, \n\t\t\t\t\t\te.syncs.stamp\n\t\t\t\t\t]);\n\n\t\t\t\t\treturn h;\n\t\t\t\t},\n\t\t\t\ttemplate: function(e){ \n\t\t\t\t\tvar h = t.assign(e); \n\t\t\t\t\treturn h;\n\t\t\t\t}\n\t\t\t});\n\t\t\t$o.niceScroll({\n\t\t\t\tcursorcolor:'#234',\n\t\t\t\tcursoropacitymin:0.07,\n\t\t\t\tcursoropacitymax:0.4,\n\t\t\t});\n\t\t}",
            "bind": "function (d,v,$o) {\n\t\t\tif (v!=null) return;\n\t\t\t$o.list('data', this.List)\n\t\t}",
            "watch": [
              "#db-proxy",
              "#view-hasselection"
            ]
          },
          "#db-proxy": {
            "delay": 50,
            "bind": "function (d,v) {\n\t\t\t//if (v==null) return;\n\t\t\tvar that = this,\n\t\t\t\t\tt = that.Row,\n\t\t\t\t\tall = that.All,\n\t\t\t\t\tsel = cw.lib.a2o(d.selection);\n\t\t\t\n\t\t\tthat.List = Object.values(all).sortBy('name', d.reverse);\n\t\t\t\n\t\t\tif (d.search.length>1) {\n\t\t\t\tvar re = new RegExp(\n\t\t\t\t\td.search.toLowerCase()\n\t\t\t\t\t.split(' ')\n\t\t\t\t\t.compact(true)\n\t\t\t\t\t.map(function(t){return t.escapeRegExp()})\n\t\t\t\t\t.join('|')\n\t\t\t\t);\n\t\t\t\tthat.List = that.List.filter(function(e){\n\t\t\t\t\treturn re.test(e.name.toLowerCase())\n\t\t\t\t});\n\t\t\t}\n\t\t\tthat.List.forEach(function(r){\n\t\t\t\tvar das, dis;\n\t\t\t\tif ((dis = r.disk_size) && (das = r.data_size)) {\n\t\t\t\t\tr.sizesafe = '<span class=\"{1}\">{2}</span>'.assign(\n\t\t\t\t\t\t(das/dis<0.1?'red o70':das/dis<0.5?'orange o90':'xgray'),\n\t\t\t\t\t\tdis.bytes(1).replace(/B$/,'b')\n\t\t\t\t\t);\n\t\t\t\t\tr.sizetip = that.lang.TIP_DBSIZE.assign(\n\t\t\t\t\t\tdas.bytes(1).replace(/B$/,'b'),\n\t\t\t\t\t\tdis.bytes(1).replace(/B$/,'b')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tr.update_seq_safe = (r.update_seq+'').split('-')[0];\n\t\t\t\tr.checked = sel[r.name]?'checked':'';\n\t\t\t});\n\t\t\t//return Date.now()+'';\n\t\t}",
            "listen": {
              "userCtx": "function (d,v) {\n\t\t\t\tif (v) {\n\t\t\t\t\tif (v.name) this.GetList(true);\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.All = {};\n\t\t\t\t\t\tthis.GetList(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}",
              "dblist": "function (d,v) {\n\t\t\t\tif (!Object.isArray(v)) return;\n\t\t\t\tthis.GetList(true, v);\n\t\t\t}"
            },
            "watch": [
              "#btn-view-dir",
              "#db-search",
              "#btn-select"
            ]
          },
          "#view-hasselection": {
            "css": {},
            "watch": [
              "#db-search",
              "#btn-select"
            ]
          },
          "#btn-newdb": {
            "bind": "function (d,v,$o) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this;\n\t\t\tif ($o.data('modal')) that.my.modal('#btn-newdb', true);\n\t\t\telse {\n\t\t\t\tif (that.Modals.head) that.Modals.head.modal(true);\n\t\t\t\tthat.Modals.head = $o;\n\t\t\t\tthat.my.modal('#btn-newdb',{\n\t\t\t\t\tmanifest:that.Pho('NewDB'),\n\t\t\t\t\twidth:350,\n\t\t\t\t\tdata:{},\n\t\t\t\t\talign:'top:102%;left:0;',\n\t\t\t\t\tnose:'top',\n\t\t\t\t\tcss:'xgray',\n\t\t\t\t\tscreen:false,\n\t\t\t\t\tesc:true,\n\t\t\t\t})\n\t\t\t\t.always(function(){\n\t\t\t\t\tthat.Modals.head = null;\n\t\t\t\t});\t\t\t\t\n\t\t\t}\n\t\t}",
            "css": {
              ":disabled": "function (d) {\n\t\t\t\treturn !cw.me();\n\t\t\t}"
            },
            "listen": {
              "userCtx": "function (d,v) {this.my.check('#btn-newdb');}"
            }
          },
          "#btn-compact": {
            "bind": "function (d,v,$o) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this;\n\t\t\tif ($o.data('modal')) that.my.modal('#btn-compact', true);\n\t\t\telse {\n\t\t\t\tif (that.Modals.head) that.Modals.head.modal(true);\n\t\t\t\tthat.Modals.head = $o;\n\t\t\t\tthat.my.modal('#btn-compact',{\n\t\t\t\t\tmanifest:that.Pho('Compact'),\n\t\t\t\t\twidth:350,\n\t\t\t\t\tdata:{ selection:d.selection.slice(0) },\n\t\t\t\t\talign:'top:102%;left:0;',\n\t\t\t\t\tnose:'top',\n\t\t\t\t\tcss:'xgray',\n\t\t\t\t\tscreen:false,\n\t\t\t\t\tesc:true,\n\t\t\t\t})\n\t\t\t\t.always(function(){\n\t\t\t\t\tthat.Modals.head = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}",
            "css": {
              ":disabled": "function (d) {\n\t\t\t\treturn !cw.me() || !d.selection.length || !this.List.map(function(e){return e.name}).intersect(d.selection).length;\n\t\t\t}"
            },
            "watch": [
              "#view-hasselection"
            ],
            "listen": {
              "userCtx": "function (d,v) {this.my.check('#btn-compact');}"
            }
          },
          "#btn-deldb": {
            "bind": "function (d,v,$o) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this;\n\t\t\tif ($o.data('modal')) that.my.modal('#btn-deldb', true);\n\t\t\telse {\n\t\t\t\tif (that.Modals.head) that.Modals.head.modal(true);\n\t\t\t\tthat.Modals.head = $o;\n\t\t\t\t$.my.modal({\n\t\t\t\t\tmanifest:that.Pho('DelDB'),\n\t\t\t\t\twidth:350,\n\t\t\t\t\tdata:{ dbs:d.selection.slice(0) },\n\t\t\t\t\tcss:'xgray p20',\n\t\t\t\t\tesc:true,\n\t\t\t\t\tenter:false\n\t\t\t\t})\n\t\t\t\t.always(function(){\n\t\t\t\t\tthat.Modals.head = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}",
            "css": {
              ":disabled": "function (d) {\n\t\t\t\treturn !cw.me() || !d.selection.length || !this.List.map(function(e){return e.name}).intersect(d.selection).length;\n\t\t\t}"
            },
            "watch": [
              "#view-hasselection"
            ],
            "listen": {
              "userCtx": "function (d,v) {this.my.check('#btn-deldb');}"
            }
          },
          "#task-filter": {
            "init": "function ($o) {\n\t\t\t$o.tags($.extend(true, {}, this.lang.TAGS_TASK_TYPE, {tagshim:'\\u2009', groupshim:'\\u2009'}));\n\t\t}",
            "bind": "task.filter"
          },
          "#task-cols": {
            "bind": "function (d,v) {\n\t\t\treturn this.lang.TXT_TASKVIEW(d.task.list.length, this.Tasks.length)\n\t\t}",
            "watch": [
              "#task-filter",
              "#task-list"
            ]
          },
          "#task-search": {
            "delay": 150,
            "bind": "task.search",
            "css": {
              "my-search": "new RegExp(/^.{2,}$/)"
            }
          },
          "#task-list": {
            "delay": 50,
            "init": "function ($o) {\n\t\t\tvar that = this,\n\t\t\t\t\tt = that.TTask,\n\t\t\t\t\td = that.data;\n\t\t\t$o.list({\n\t\t\t\tdata:that.Tasks,\n\t\t\t\tdelay:0,\n\t\t\t\tchunk:100,\n\t\t\t\tsortBy:null,\n\t\t\t\tid: function(e){return e.pid || e._id;},\n\t\t\t\thash:function(e) {\n\t\t\t\t\treturn cw.lib.sdbm([\n\t\t\t\t\t\te.pid, \n\t\t\t\t\t\t//e.updated_on, \n\t\t\t\t\t\te.type,\n\t\t\t\t\t\te._progress,\n\t\t\t\t\t\te._started, \n\t\t\t\t\t\te._desc\n\t\t\t\t\t]);\n\t\t\t\t},\n\t\t\t\ttemplate: function(e){  return t(e); }\n\t\t\t});\n\t\t\t$o.niceScroll({\n\t\t\t\tcursorcolor:'#234',\n\t\t\t\tcursoropacitymin:0.07,\n\t\t\t\tcursoropacitymax:0.4,\n\t\t\t});\n\t\t}",
            "bind": "function (d,v,$o) {\n\t\t\tif (v!=null) return;\n\t\t\tif (!d.task.search.from(1) && d.task.filter == '') d.task.list = this.Tasks;\n\t\t\telse {\n\t\t\t\tvar f = this.Tasks.slice(0),\n\t\t\t\t\t\tfl= d.task.filter.exclude('active');\n\t\t\t\tif (d.task.filter.indexOf('active')>-1) f = f.filter(function(e){return e.pid!='Error';});\n\t\t\t\tvar a = !(fl+'')?f:f.filter(function(row){\n\t\t\t\t\treturn (row.type+'').indexOf(fl+'') != -1;\n\t\t\t\t});\n\n\t\t\t\tif (d.task.search.length>1) {\n\t\t\t\t\tvar re = new RegExp(\n\t\t\t\t\t\td.task.search.toLowerCase()\n\t\t\t\t\t\t.split(' ').compact(true)\n\t\t\t\t\t\t.map(function(t){return t.escapeRegExp()})\n\t\t\t\t\t\t.join('|')\n\t\t\t\t\t);\n\t\t\t\t\ta = a.filter(function(e){ return re.test(e._index) });\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\td.task.list = a;\n\t\t\t}\n\t\t\tthis.my.find('#task-list').list('data', d.task.list);\n\t\t}",
            "watch": [
              "#task-filter",
              "#task-search"
            ]
          },
          "#btn-newsync": {
            "bind": "function (d,v) {\n\t\t\tif (v==null) return;\n\t\t\tvar that = this;\n\t\t\tif (that.my.find('#btn-newsync').data('modal')) {\n\t\t\t\tthat.my.find('#btn-newsync').modal(true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\tthat.my.find('#btn-newsync').modal({\n\t\t\t\troot:that.my.find('#rpanel'),\n\t\t\t\tmanifest:$.extend(\n\t\t\t\t\ttrue, {}, \n\t\t\t\t\tthat.Pho('NewSync'), \n\t\t\t\t\t{\n\t\t\t\t\t\tDBs:Object.keys(that.All).sortBy(function(e){return e[0]=='_'?'zzz'+e:e;}),\n\t\t\t\t\t\tparams:{width:(that.my.find('#rpanel').width()-32).clamp(340,740)}\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\tdata:that.LastSync,\n\t\t\t\tnose:'top',\n\t\t\t\talign:'top:103%',\n\t\t\t\tcss:'xgray',\n\t\t\t\tbound:0\n\t\t\t});\n\t\t\t}catch(e){console.log(e)}\n\t\t}",
            "css": {
              ":disabled": "function (d,v) {return !cw.me();}"
            },
            "listen": {
              "userCtx": "function (d,v) {this.my.check('#btn-newsync');}"
            }
          }
        },
        "die": "function ($o) {\n\t\t// Unmount niceScroll\n\t\tvar f = $o.find('#db-list').getNiceScroll;\n\t\tif (typeof f == 'function') f().remove();\n\t\tvar f = $o.find('#task-list').getNiceScroll;\n\t\tif (typeof f == 'function') f().remove();\n\t\t\n\t\t// stop tasks loop\n\t\tif (this.TaskLoop) this.TaskLoop.cancel();\n\t\t\n\t}",
        "Row": "<div class=\"view-row\"><input class=\"w23 dib tac ml3 mr2 cp\" type=\"checkbox\" name=\"db-selection\" {checked} value=\"{namesafe}\"><div class=\"w100p-338 pr20 mh19em\"><a href=\"#{href}\" class=\"tdn\">{namesafe}</a></div><div class=\"w310 view-aux fs95 pt1\"><div class=\"w80 tar  pr6\">{doc_count}</div><div class=\"w70 fs90 vat tal pt5 lh130 pl6 gray\">{doc_del_count}</div><div class=\"w80 tar  pr6\" title=\"{update_seq}\">{update_seq_safe}</div><div class=\"w80 tar pr6\" title=\"{sizetip}\">{sizesafe}</div></div></div>",
        "style": {
          " .view-row": "width:100%;min-height:1.9em;",
          " .view-row:nth-child(2n+0)": "background-color:rgba(227, 233, 236, 0.25);",
          " #db-list": {
            "": "outline:none;",
            " .view-row>div": "display:inline-block;vertical-align:top;word-wrap: break-word;",
            " .view-aux>div": "display:inline-block;vertical-align:top;min-height:1.9em;",
            " .mh19em": "min-height:1.9em;",
            " input:checked+div": "font-weight:bolder",
            " .col-ids": "width:30%;padding:0 20px 0 8px;",
            " .col-vals": "width:70%; padding-left:10px;",
            " .view-tofilter": "display:inline-block; margin-left:5px;width:20px;line-height:1.2em;opacity:0;transition:opacity 0.5s;",
            " .view-row:hover .view-tofilter": "opacity:0.5;cursor:pointer;"
          },
          " #task-panel": {
            "": "outline:none;"
          },
          " #db-panel": {
            ":before": "content:\" \";position:absolute;top:0px;z-index:-1;height:100%;right:230px;width:80px;border-left:1px solid #e1e5e8;border-right:1px dotted #e1e5e8;",
            ":after": "content:\" \";position:absolute;top:0px;z-index:-1;height:100%;right:80px;width:80px;border-left:1px solid #e1e5e8;border-right:1px solid #e1e5e8;"
          },
          " .bbs": "border-bottom-color:rgba(211,217,222,0.7);",
          " .bas": "border-color:rgba(211,217,222,0.7);",
          " .brs": "border-right:1px solid rgba(211,217,222,0.7);",
          " .brsl": "border-right:1px solid rgba(211,217,222,0.3);",
          " .w100p-338": "width:calc(100% - 338px);",
          " .w100p-310": "width:calc(100% - 311px);"
        },
        "HTML": "<div class=\"w60p  dib vat\"><div id=\"a-head\" class=\"app-head nw pt18 pl20 pr20 lh160\"><div class=\"fr w25p fs95\" style=\"max-width:200px\"><div class=\"fi-magnifying-glass blue o50 fs95\" style=\"position: absolute; z-index: +1; left: 8px;top: 0.2em;\"></div><input type=\"text\" id=\"db-search\" class=\"ui-search w100p ml0 mr0 mt0 pr10\" placeholder=\"{PLC_SEARCH}\" style=\"background-image:none;padding-right:19px!important;\"><span class=\"fi-x fs80 dib vat pt2 blue ui-search-clear\" style=\"margin-left:-19px!important;\"onclick=\"$(this).siblings('input:eq(0)').val('').blur()\"></span></div><div class=\"nw dib vat w75p pr10\"><button id=\"btn-reload\" class=\"w40 mr2\" title=\"{TIP_RELOAD}\"><span class=\"fi-loop\"></span></button><button id=\"btn-newdb\" class=\"green mr2\">{BTN_NEWDB}</button><span id=\"view-hasselection\"><button id=\"btn-compact\" class=\"mr2\" disabled>{BTN_COMPACT}</button><button id=\"btn-deldb\" class=\"mr2 red\" disabled>{BTN_DELDB}</button></span></div></div><div id=\"db-panel\" class=\"panelheight-32 br2 mt16 ml20 mr20 bas\"><div class=\"h30 bg-gray7 bbs lh160 pt1 nw oh ell\"><div class=\"w100p-310 dib vat nw oh ell\"><span id=\"btn-view-dir\" class=\"dib pl8 pr6 mr2 vat cp o50 fs80 pt2 pseudolink tdn h30\"></span><span id=\"view-links\" class=\"gray hide\"></span><div id=\"view-cols\" class=\"dib vat pr8 nw xgray\"></div><div id=\"btn-select\" class=\"pseudolink tdn dib vat\"></div></div><div class=\"w310 dib gray fs90\"><div class=\"w80 dib tar pr6\">{H_DOCS}</div><div class=\"w70 dib pl7\">{H_DELDOCS}</div><div class=\"w80 dib tar pr7\">{H_SEQ}</div><div class=\"w80 dib tar pr7\">{H_SIZE}</div></div></div><section id=\"db-list\" class=\"panelheight-64 xgray lh170\"></section></div><div id=\"db-proxy\" class=\"hide\"></div></div><div id=\"rpanel\" class=\"w40p dib vat pr20\"><div id=\"a-head\" class=\"app-head nw pt18 mb16 tac\"><div class=\"fr w30p fs95 tal\" style=\"max-width:200px\"><div class=\"fi-magnifying-glass blue o50 fs95\" style=\"position: absolute; z-index: +1; left: 8px;top: 0.2em;\"></div><input type=\"text\" id=\"task-search\" class=\"ui-search w100p ml0 mr0 mt0 pr10\" placeholder=\"{PLC_SEARCH}\" style=\"background-image:none;padding-right:19px!important;\"><span class=\"fi-x fs80 dib vat pt2 blue ui-search-clear\" style=\"margin-left:-19px!important;\"onclick=\"$(this).siblings('input:eq(0)').val('').blur()\"></span></div><div class=\"fl tal fs160 lh120 ell xgray o70\">{TXT_TASK_TITLE}</div><div class=\"w40p dib tac\"><button id=\"btn-newsync\" class=\"mr2\">{BTN_TASK_NEWSYNC}</button></div></div><div id=\"task-panel\" class=\"panelheight-32 br2 mt16 bas\"><div><div class=\"h30 bg-gray7 bbs lh170\"><div class=\"fr pr4 tar\"><span id=\"task-filter\" class=\"dib fs90 vam pl4\"></span></div><div id=\"task-cols\" class=\"dib vat pl8 nw xgray pt1\"></div></div><section id=\"task-list\" class=\"panelheight-64 xgray lh170\"></section></div></div><div id=\"status-proxy\" class=\"hide\"></div></div>",
        "GetTasks": "function (redraw) {\n\tvar that = this,\n\t\t\td = that.data,\n\t\t\tall = that.All,\n\t\t\tl = that.lang,\n\t\t\tes = function(s){return (s+'').escapeHTML()},\n\t\t\t_trunc = function (s, chars) {return es((s+'').truncate(chars || 20,'middle','…'));},\n\t\t\tspt = '<span title=\"{2}\">{1}</span>',\n\t\t\tnw = '<nobr>{1}</nobr>',\n\t\t\tpi = $.Deferred();\n\t\n\tif (!that.my.indom() || that.my.root().hasClass('hide')) return pi.resolve().promise();\n\t\n\tthat.Req({url:['_active_tasks']})\n\t.then(function(res0){\n\t\tthat.Tasks.length = 0;\n\t\t\n\t\tvar res = res0.concat(that.TaskMock||[]);\n\t\t\n\t\t// preprocess tasks \n\t\tres.forEach(_processTask);\n\t\t\n\t\t// sort, make old appear at bottom,\n\t\t// and push to this.Tasks\n\t\tres.sortBy('started_on', true).forEach(function(row){that.Tasks.push(row)});\n\t\t\n\t})\n\t.then(function(){\n\t\tif (!that.Pho('Cfg').tasksReadReplicator || d.task.filter.indexOf('compaction')>-1) return _endUp();\n\t\t\n\t\t// read _replicator DB\n\t\tthat.Req({\n\t\t\turl:['_replicator','_all_docs',{include_docs:true}],\n\t\t\tdataType:'json'\n\t\t})\n\t\t.then(function(res){\n\t\t\t//console.log(res.rows);\n\t\t\tres.rows.forEach(function(row){\n\t\t\t\tif (row.doc._replication_state == 'error') that.Tasks.push(_mimicTaskErr(row.doc));\n\t\t\t});\n\t\t\t_endUp();\n\t\t})\n\t\t.always(function(){\n\t\t\t_endUp();\n\t\t})\n\t})\n\t.fail(function(code, err, msg){\n\t\t// Swallow fail\n\t\tpi.resolve(that.Tasks);\n\t});\n\t\n\treturn pi.promise();\n\t\n\t// - - - - - - -\n\t\n\tfunction _mimicTaskErr(x) {\n\t\t\n\t\tvar dt = Date.create(x._replication_state_time).valueOf()/1000|0;\n\t\t\n\t\tvar t = {\n\t\t\tpid: 'Error',\n\t\t\tcontinuous: x.continuous,\n\t\t\tdoc_id: x._id,\n\t\t\tprogress: 0,\n\t\t\tsource: x.source,\n\t\t\ttarget: x.target,\n\t\t\tstarted_on: dt,\n\t\t\tupdated_on:dt,\n\t\t\ttype: \"replication\"\n\t\t}\n\t\t\n\t\treturn _processTask(t);\n\t\n\t}\n\t\n\t// - - - - - - - \n\t\n\tfunction _processTask(row){\n\n\t\t// clean task type\n\t\tvar ts = row.type.replace(/_/g,' ')\n\t\t.replace(/database/gi,'DB')\n\t\t.replace(/compaction/gi,'compact')\n\t\t.replace(/replication/gi,'');\n\t\tts = ts.compact();\n\t\tts = ts?ts+':':'';\n\t\trow._type = es(ts.to(1).toUpperCase()+(ts||'').from(1));\n\t\t\n\t\tvar arrow = ' ➝\\u00a0',\n\t\t\t\tterr = '<span class=\"red1 fs95\">{1}</span>';\n\n\t\t// full text index\n\t\trow._index = JSON.stringify(row).toLowerCase().replace(/[\",\\{\\}\\[\\]]/g,' ').compact();\n\n\t\t// clean pid\n\t\tif (row.pid != 'Error') {\n\t\t\trow._pid = '‹<span class=\"fs95\">'+row.pid.replace(/[<>]/g,'')+'</span>›';\n\t\t\trow._pidsafe = es(row.pid);\n\t\t}\n\t\telse {\n\t\t\trow._pid = terr.assign('<span class=\"fi-alert fs95\"></span> Error');\n\t\t\trow._pidsafe = 'Error';\n\t\t\tarrow = terr.assign(arrow);\n\t\t}\n\n\t\t// task start time\n\t\tvar stamp = row.started_on;\n\t\tif (stamp) {\n\t\t\tvar dt = Date.create(+stamp*1000);\n\t\t\tif (!dt.isThisYear()) row._start = dt.format('{d} {Mon} {yyyy}');\n\t\t\telse if (!dt.isToday()) row._start = dt.format('{d} {Mon}, {H}:{mm}');\n\t\t\telse row._start = dt.format('{H}:{mm}:{ss}');\n\t\t}\n\t\telse row._start = '???';\n\n\t\t// progress %\n\t\tif (row.pid != 'Error') row._progress = Object.isNumber(row.progress)?(row.progress.clamp(0,100)|0)+'%':'???';\n\t\telse row._progress = '';\n\n\t\t// description\n\t\tif (row.source && row.target) {\n\t\t\trow._desc = nw.assign(_trim(row.source, 30)) + arrow + nw.assign(_trim(row.target, 30));\n\t\t\tif (row.doc_id) row._desc = '<a class=\"tdn\" href=\"#_replicator/'+es(row.doc_id)+'\">'+row._desc+'</a>';\n\t\t}\n\t\telse if (/compaction/.test(row.type)) {\n\t\t\trow._desc = nw.assign(_trim(row.database));\n\t\t}\n\t\telse row._desc = row._pid;\n\n\t\treturn row;\n\t}\n\t\n\t// - - - - - - - \n\t\n\tfunction _endUp() {\n\t\t// sort, make old appear at bottom,\n\t\t// and push to this.Tasks\n\t\tvar a = that.Tasks.slice(0);\n\t\tthat.Tasks.length = 0;\n\t\ta.sortBy('started_on', true)\n\t\t.forEach(function(row){that.Tasks.push(row)});\n\t\tif (redraw) that.my.recalc('#task-list');\n\t\tpi.resolve(that.Tasks);\n\t}\n\t\n\t\n\t// - - - - - - - \n\t\n\tfunction _trim(path, chars){\n\t\t\n\t\tif (!Object.isString(path) || !/^http[s]?:\\//.test(path)) return spt.assign(_trunc(path+'', chars), es(path+''));\n\t\t\n\t\tvar u = new URL(path),\n\t\t\t\tp = [],\n\t\t\t\ttico = '<span class=\"ml3 fs95 o40 dib vat mt1 mb-1 fi-{1}\"></span>',\n\t\t\t\tlocal = u.hostname =='127.0.0.1' || u.hostname == 'localhost';\n\t\t\n\t\tvar tpath = !local?u.hostname+u.pathname:u.pathname.replace(/^\\/|\\/$/g,'');\n\t\tp.push(spt.assign(_trunc(tpath, chars), es(path)));\n\t\t\n\t\tif (!local) {\n\t\t\tp.push(tico.assign(u.protocol=='https:'?'lock':'unlock red1'));\n\t\t}\n\t\tif (u.username || u.password) p.push(tico.assign('torso'));\n\n\t\t\n\t\treturn p.join('');\n\t\t\n\t}\n}",
        "TTask": "function (e) {\n\t// renders tasklist row from pre-processed data\n\tvar that = this,\n\t\t\td = that.data;\n\t\n\tvar t = [\n\t\t'<div class=\"view-row pl8 pr8\">',\n\t\t'<div class=\"dib w20p ell fs95 gray vat\" title=\"{_pidsafe}\">{_pid}</div>',\n\t\t\t'<div class=\"dib w70p ell pr10 vat lh140 pt2 pb2\">{_type} {_desc}</div>',\n\t\t\t'<div class=\"dib w10p vat tar\">{_progress}</div>',\n\t\t'</div>'\n\t].join('');\n\t\n\treturn t.assign(e);\n\t\n}"
      },
      "files": {
        "favicon.png": {
          "content_type": "image/png",
          "digest": "md5-oC3qII0YKfXL0gZQl7Sm/g==",
          "data": "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"
        }
      },
      "stamp": 1505070168077
    },
    "cw-Sys-JSON": {
      "id": "cw.Sys.JSON",
      "build": 248,
      "Version": "2.1.1",
      "data": {
        "doc": {},
        "labelWidth": 115,
        "tree": {},
        "cmd": "",
        "title": "Untitled JSON",
        "raw": ""
      },
      "Root": "function () { return this; }",
      "RT": "function (key) {return key?this[key]:this;}",
      "params": {
        "restyle": 100,
        "delay": 0
      },
      "Lib": {
        "relist": "function ($o,that) {\n\t\tvar form = that;\n\t\tthat.List = that.MakeList(form.data);\n\t\t$($o[0].querySelector('.ilist')).trigger('recalc');\n\t\t$($o[0].querySelector('.idesc')).trigger('check');\n\t}",
        "kick": "function (cont,obj) {\n\t\tfor (var i in cont) delete cont[i];\n\t\tObject.merge(cont,obj);\n\t}",
        "isSystem": "function (d) {\n\t\tvar sys=false;\n\t\tif (d.level==1 && /^(_id|_rev|creator|created|crypto)$/.test(d.key) && d.value) {\n\t\t\tsys = true;\n\t\t}\n\t\treturn sys;\n\t}",
        "keyBind": "function (d,v,$o) {\n\t\tvar maxlen = this.labelWidth/5 | 0;\n\t\tif (d.key.length > maxlen) $o.attr('title',d.key.escapeHTML());\n\t\treturn (!/^(|\\s+)$/.test(d.key))?d.key.truncate(maxlen,'right','…').escapeHTML():'\"'+d.key.escapeHTML()+'\"'; \n\t}",
        "initEdit": "function ($o,that,oncommit) {\n\t\tvar d = that.data;\n\t\t$o.on(\"click.my\", function(evt){\n\t\t\t\n\t\t\tvar $t = $(evt.target);\n\t\t\tif ($t.is('a') || $t.is('img')) return;\n\t\t\t\n\t\t\tvar $n = that.my.find('.inav');\n\t\t\tif (!$n.hasClass(\"iseditor\")) {\n\n\t\t\t\tif (that.RT('Lib').isSystem.call(that, d)) {\n\t\t\t\t\tcw.lib.note(\"Can’t change system properties.\",\"error\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td.state = 2;\n\t\t\t\t\t$n.addClass(\"iseditor\");\n\t\t\t\t\t$o.addClass('hide');\n\t\t\t\t\t\n\t\t\t\t\t// Run editor\n\t\t\t\t\tthat.my.find('.ieditor').my(\n\t\t\t\t\t\tthat.RT('MEdit'), \n\t\t\t\t\t\t{text:d.value+'', mode:that.CM || 'auto'}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tthat.my.root()\n\t\t.on(\"editorcommit.my\", function(evt){\n\t\t\tevt.stopPropagation();\n\t\t\tvar $n = that.my.find('.inav');\n\t\t\tif ($n.hasClass(\"iseditor\")) {\n\t\t\t\tvar prev = d.value;\n\t\t\t\td.value = that.my.find('.ieditor').my('data').text;\n\t\t\t\t_closeEd();\n\t\t\t\tif (typeof oncommit == 'function') oncommit(d.value, prev);\n\t\t\t\telse {\n\t\t\t\t\t//$o.text('\"'+d.value.to(140)).escapeHTML().trigger(\"check\");\n\t\t\t\t\t$o.trigger(\"check\");\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.on(\"editorcancel.my\", function(evt){ \t\n\t\t\tevt.stopPropagation();\n\t\t\t_closeEd(); \n\t\t});\n\n\t\t// - - - - - -\n\n\t\tfunction _closeEd(){\n\t\t\td.state = 1;\n\t\t\td.hash = cw.lib.sdbm(d.value);\n\t\t\tthat.my.find('.ieditor').my('remove');\n\t\t\tthat.my.find('.inav').removeClass('iseditor');\n\t\t\t$o.removeClass('hide');\n\t\t\t//that.my.root().off('editorcommit.my').off('editorcancel.my')\n\t\t}\n\n\t}"
      },
      "MemState": "function (node) {\n\t\tvar d = this.data, old; \n\t\tif (!d.viewstate) this.data.viewstate={};\n\t\told = d.viewstate[node.path.join('❀')+'❀'+node.key];\n\t\tif (old != node.state) {\n\t\t\td.viewstate[node.path.join('❀')+'❀'+node.key] = node.state;\n\t\t\tif (d._id) this.MemStateSave();\n\t\t}\n\t}",
      "MemStateSave": "function () {\n\t\t// debounced by init\n\t\tvar d = this.data;\n\t\tif (d._id && Object.size(d.viewstate)) {\n\t\t\tthis.Ls(\"viewstate.\"+d._id, {stamp:Date.now(), state:d.viewstate});\n\t\t}\n\t}",
      "init": "function ($o,form) {\n\tvar i, that = this,\n\t\t\td = form.data,\n\t\t\tdur = Date.now(),\n\t\t\ttypeNames = Object.keys(that).map(function(e){return /^\\$[a-z]/.test(e)?e.from(1):''}).compact(true);\n\t\t\n\t// Singletone constructors init\n\tthat.Ls = that.Ls(\"\");\n\tif (Object.isFunction(that.Db)) that.Db = that.Db($o);\n\t\n\t// Render HTML\n\t$o.html(that.HTML.Main);\n\t\n\t// Debounce viewstate saver\n\tthat.MemStateSave = that.MemStateSave.debounce(700);\n\t\n\ttypeNames.forEach(function(i){\n\t\tvar e = that['$'+i];\n\t\te.labelWidth = d.labelWidth;\n\t\te.RT = that.RT;\n\t\te.Root = that.Root;\n\t\tif (i=='multi') {\n\t\t\te.HTML = that.HTML.ItemComplex;\n\t\t}\n\t\telse {\n\t\t\tif (!e[e.init?'HTML':'init']) e[e.init?'HTML':'init'] = that.HTML.ItemSimple;\n\t\t\tif (!e.ui['.ikey'].bind) e.ui['.ikey'].bind = that.Lib.keyBind;\n\t\t\tif (e.F && !e.F.initEdit) e.F.initEdit = that.Lib.initEdit;\n\t\t}\n\t\te.MakeList = that.MakeList;\n\t\tif (!e.params) e.params = {};\n\t\te.params.strict = true;\n\t});\n\t\n\t// First recursion step\n\t$.extend(that.Doc, {\n\t\tstate:2,\n\t\tlevel:0,\n\t\tpath:[],\n\t\ttype:\"object\",\n\t\tkey:\"Root\",\n\t\tvalue:form.data.doc\n\t});\n\t\n\td._id = d.doc._id||\"\";\n\t\n\tif (d.doc._rev === null) delete d.doc._rev;\n\n\t// Global handlers for buttons\n\t'add takeout copy'\n\t.split(' ').forEach(function(e){\n\t\t$o.on(\"click.my\", \".btn-\"+e, that.Event[e].fill(undefined, undefined, that, $o));\n\t});\n\t\n\t// Global handler for click on ikey\n\t$o.on('click.my', '.ikeysimple', function(evt){\n\t\tvar $k = $(evt.currentTarget),\n\t\t\t\t$f = $k.my().root,\n\t\t\t\tdata = $k.my().data;\n\t\t\n\t\t//console.log($f)\n\t\t//data.state = 2;\n\t\t$f.trigger('editorcancel.my');\n\t});\n\t\n\t// Replaces clean doc root node to ‘close doc’ action\n\t$o.on(\"click.my\", \"#doc>.iact>.btn-del\", function(evt){\n\t\tevt.stopPropagation();\n\t\t$o.trigger(\"cancel\");\n\t});\n\n}",
      "die": "function () {\n\t\tvar i, b = this.Blobs;\n\t\t// Free blobs objURLs cache\n\t\tfor (i in b) URL.revokeObjectURL (b[i]);\n\t}",
      "Blobs": {},
      "Doc": {},
      "ui": {
        "#btn-save": {
          "bind": "function (d,v,$o) {\n\t\t\tvar that =this;\n\t\t\tif (v!=null) {\n\t\t\t\t\n\t\t\t\tthat.db.save(d.doc)\n\t\t\t\t.then(\n\t\t\t\t\tfunction (res){\n\t\t\t\t\t\tvar doc = {doc:res};\n\t\t\t\t\t\t//push to app\n\t\t\t\t\t\tthat.Lib.kick(d.doc, res);\t\t\t\n\n\t\t\t\t\t\tvar vs = that.Ls(\"viewstate.\"+res._id);\n\t\t\t\t\t\tif (vs && (vs.stamp>doc.stamp || !Object.size(d.viewstate))) {\n\t\t\t\t\t\t\td.viewstate = vs.state;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\td._id = res._id||\"\";\n\n\t\t\t\t\t\tthat.Doc.state=1;\n\t\t\t\t\t\t$o.my(\"find\",\"#doc\").trigger(\"recalc\");\n\t\t\t\t\t\t$o.my(\"find\",\"#doc .idesc:eq(0)\").trigger(\"click\");\n\n\n\t\t\t\t\t}, \n\t\t\t\t\tfunction (e,msg) {\n\t\t\t\t\t\tcw.lib.note('Save failed, see console', 'error');\n\t\t\t\t\t\tconsole.log(msg, e);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}"
        },
        "#doctitle": {
          "bind": "function (d) {\n\t\t\td._id = d.doc._id;\n\t\t\td._rev = d.doc._rev;\n\t\t\td.title = (d.doc._db||(this.db||{name:\"NoDB\"}).name)+\"\\u2009\\u00b7\\u2009\"+(d.doc._id||\"\");\n\t\t\treturn d.title;\n\t\t}",
          "watch": "#doc",
          "delay": 30
        },
        "#doc": {
          "delay": 20,
          "bind": "this.Doc",
          "check": false,
          "manifest": "function (e) {\n\t\t\treturn this.$multi;\n\t\t}"
        }
      },
      "MakeList": "function (data,key,state) {\n\t\n\t// Object/array processor,\n\t// generates typed metaobject\n\t\n\tvar that=this,\n\t\t\tdt, a=[], man, bin, \n\t\t\thash, b = data.value,\n\t\t\tsdbm = cw.lib.sdbm;\n\t//for (var i in b) {\n\t\n\tObject.keys(b).forEach(function(i){\n\t\tdt = $.type(b[i]);\n\t\t\n\t\t// Detect multy\n\t\tman = /^(ob|ar)/.test(dt)?\"multi\":dt;\n\t\t\n\t\tif (dt == 'object') {\n\t\t\tman = 'multi';\n\t\t\t//hash = sdbm(b[i]);\n\t\t}\n\t\t\n\t\t// Detect string-derived types\n\t\tif (dt===\"string\"){\n\t\t\tif (b[i].length > 12 && b[i].to(8) == 'function' && /\\}[\\r\\n\\t\\s]*$/.test(b[i].substr(-10))) {\n\t\t\t\tman = \"function\";\n\t\t\t}\n\t\t\telse if(\n\t\t\t\tb[i].length>160 \n\t\t\t\t&& /^[a-zA-Z0-9\\+\\/]+$/.test(b[i].substr(0,158))\n\t\t\t\t&& /^[a-zA-Z0-9\\+\\/]+={0,2}$/.test(b[i])\n\t\t\t) {\n\t\t\t\ttry {\n\t\t\t\t\tbin = window.atob(b[i]);\n\t\t\t\t\thash = sdbm(b[i]);\n\t\t\t\t\tman = \"base64\";\n\t\t\t\t}catch(e){}\n\t\t\t}\n\t\t\telse if(\n\t\t\t\tb[i].length>160 \n\t\t\t\t&& /^data:image\\/(jpeg|png|gif);base64,/.test(b[i])\n\t\t\t) {\n\t\t\t\ttry {\n\t\t\t\t\tbin = atob(b[i].replace(/^data:image\\/(jpeg|png|gif);base64,/,''));\n\t\t\t\t\thash = sdbm(b[i]);\n\t\t\t\t\tman = \"base64\";\n\t\t\t\t}catch(e){}\n\t\t\t}\n\t\t\thash = sdbm(b[i]);\n\t\t}\n\t\t\n\t\t// Do we have viewstate stashed?\n\t\tvar vs = that.data.viewstate,\n\t\t\t\tpath = data.path.slice(0).add(data.key),\n\t\t\t\tvkey = path.join('❀')+'❀'+i;\n\t\t\n\t\ta.push({\n\t\t\tstate:state?state:(vs && vs[vkey]?vs[vkey]:1),\n\t\t\tlevel:data.level+1,\n\t\t\tmanifest:\"$\"+man,\n\t\t\tpath:path,\n\t\t\ttype:dt,\n\t\t\tkey:i,\n\t\t\tid:i,\n\t\t\tvalue:b[i],\n\t\t\tbin:bin,\n\t\t\thash:hash\n\t\t});\n\t});\n\treturn a;\n}",
      "Rejoin": "function (d,list) {\n\tfor (var r, i=0;i<list.length;i++) {\n\t\tr=list[i];\n\t\tif (!/^(ob|ar)/.test(r.type)) d.value[r.key] = r.value;\n\t}\n}",
      "Ls": "function () {\n\t\n\t// Local storage manager\n\tvar ls = window.localStorage;\n\t\n\tvar storage =  function LS (key0, data){\n\t\tvar x,  key = \"JSON.Editor.\"+key0;\n\t\tif (data) {\n\t\t\treturn ls.setItem(key, JSON.stringify(data));\n\t\t}\n\t\telse if (data===null || data===false) {\n\t\t\treturn ls.removeItem(key);\n\t\t}\n\t\telse {\n\t\t\tvar x = ls.getItem(key);\n\t\t\tif (Object.isString(x)) return JSON.parse(x);\n\t\t\telse return null;\n\t\t}\n\t};\n\t\n\treturn storage;\n}",
      "j2h": "function j2h(source,maxChars,startKeys,depth,keysOnly) {\n\n\tvar k0 = startKeys || [],\n\t\t\tk1 = cw.lib.a2o(k0),\n\t\t\tko = !!keysOnly;\n\tvar h = [];\n\n\t_unwrap(_parse(source, maxChars, 0));\n\t\n\treturn h;\n\n\t// ================================================\n\n\tfunction _parseObj(src, chars, lvl) {\n\n\t\tvar res = {\n\t\t\tkey:null,\n\t\t\tval:null,\n\t\t\tempty:false,\n\t\t\tsize:2, \n\t\t\tleft:'{', \n\t\t\tright:'}',\n\t\t\ttrim:0,\n\t\t\ttype:'object',\n\t\t\trows:[]\n\t\t};\n\n\t\tvar i, j, tval, ckey, tkey;\n\t\tvar len = 0;\n\n\t\tvar skip = {},\n\t\t\t\tk = Object.keys(src);\n\n\t\t// empty obj\n\t\tif (!k.length) {\n\t\t\tres.empty = true;\n\t\t\tres.size = 2;\n\t\t\tres.val = '';\n\t\t\treturn res;\n\t\t}\n\n\t\t// return shortcut, no traverse\n\t\tif (lvl >= depth || k.length>50) {\n\t\t\tres.trim = k.length;\n\t\t\tres.size = 2;\n\t\t\treturn res;\n\t\t}\n\t\t\n\t\t// \n\n\t\tvar childchars = (1.5 * chars / k.length | 0).clamp(10, chars*0.9 | 0),\n\t\t\t\tctr = 0,\n\t\t\t\tskip = {};\n\n\t\t// Process priviledged keys\n\t\tfor (i=0; i<k0.length && len < chars - childchars/3; i++) {\n\t\t\tckey = k0[i];\n\t\t\tif (undefined != src[ckey]) {\n\t\t\t\tskip[ckey] = true;\n\t\t\t\ttkey = ckey.truncate((childchars/(ko?1:2)).clamp(12,100),'right','…');\n\t\t\t\tif (/\\s/.test(tkey) || !tkey) tkey = '\"'+tkey+'\"';\n\t\t\t\ttval = _parse(src[ckey], childchars, lvl+1);\n\t\t\t\ttval.key = tkey;\n\t\t\t\tlen += tkey.length + (ko?0:tval.size);\n\t\t\t\tctr+=1;\n\t\t\t\tres.rows.push(tval);\n\t\t\t}\n\t\t}\n\n\t\t// Other keys\n\t\tfor (i=0; i<k.length && len < chars - childchars/3; i++) {\n\t\t\tckey = k[i];\n\t\t\tif (!skip[ckey]) {\n\t\t\t\ttkey = ckey.truncate((childchars/(ko?1:2)).clamp(12,100),'right','…');\n\t\t\t\tif (/\\s/.test(tkey) || !tkey) tkey = '\"'+tkey+'\"';\n\t\t\t\ttval = _parse(src[ckey], childchars, lvl+1);\n\t\t\t\ttval.key = tkey;\n\t\t\t\tlen += tkey.length + (ko?0:tval.size);\n\t\t\t\tctr+=1;\n\t\t\t\tres.rows.push(tval);\n\t\t\t}\n\t\t}\n\t\tres.trim = k.length - ctr;\n\t\tres.size = len;\n\t\treturn res;\n\t}\n\n\n\t// ================================================\n\n\tfunction _parse(src, chars, lvl) {\n\t\t// returns {size: charsSpent, left:'{', right:'r', rows:[]}\n\t\t// strings in .r should be treated as a markup\n\n\t\tvar res = {\n\t\t\tkey:null,\n\t\t\tval:null,\n\t\t\tempty:false,\n\t\t\tsize:0, \n\t\t\tleft:'', \n\t\t\tright:'',\n\t\t\ttrim:0,\n\t\t\ttype:'',\n\t\t\trows:[]\n\t\t};\n\t\tvar i, j, tval, tdiff;\n\t\tvar len = 0,\n\t\t\t\tclen = 0,\n\t\t\t\tchildchars = 0,\n\t\t\t\ttype = typeof src;\n\n\t\t// we have simple type ----------------------------\n\t\tif (null===src ||  type != 'object') {\n\n\t\t\tif (type != 'string') {\n\t\t\t\tres.type = type!='number'?'simple':type;\n\t\t\t\ttval = src+'';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres.type = 'string';\n\t\t\t\tclen = src.length;\n\t\t\t\tif (clen <= chars-1) tval = src;\n\t\t\t\telse {\n\t\t\t\t\ttval = src.substr(0, chars);\n\t\t\t\t\tres.trim = clen - chars;\n\t\t\t\t}\n\t\t\t\tif (!tval.length || tval[0]=='-' || /\\s/.test(tval)) {\n\t\t\t\t\tres.left = res.right = '\"';\n\t\t\t\t\tlen+=2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlen += tval.length;\n\t\t\tres.size = len;\n\t\t\tres.empty = !tval.length;\n\t\t\tres.val = tval;\n\t\t\treturn res;\n\t\t} \n\n\t\t// we have an array -----------------------------\n\t\telse if (Object.isArray(src)) {\n\t\t\tres.type='array';\n\t\t\tres.left='['; res.right=']'; len +=2;\n\t\t\t// empty arr\n\t\t\tif (!src.length) {\n\t\t\t\tres.empty = true;\n\t\t\t\tlen = 2;\n\t\t\t\tres.val = '';\n\t\t\t}\n\t\t\t// array with elts\n\t\t\telse {\n\t\t\t\tif (lvl < depth && src.length<50 && chars / src.length > 5) {\n\t\t\t\t\tvar childchars = (1.5 * chars / src.length | 0).clamp(10, chars*0.9 | 0),\n\t\t\t\t\t\t\tclen = 0,\n\t\t\t\t\t\t\tctr = 0;\n\n\t\t\t\t\tfor (i=0; i<src.length && clen < chars - childchars/3; i++) {\n\t\t\t\t\t\t// recursion\n\t\t\t\t\t\ttval = _parse(src[i], childchars, lvl + 1);\n\t\t\t\t\t\tlen += tval.size;\n\t\t\t\t\t\tclen += tval.size;\n\t\t\t\t\t\tctr+=1;\n\t\t\t\t\t\tres.rows.push(tval);\n\t\t\t\t\t}\n\n\t\t\t\t\tres.trim = src.length - ctr;\n\n\t\t\t\t}\n\t\t\t\telse res.trim = src.length;\n\t\t\t}\n\t\t}\n\n\t\t// we have an object ----------------------------\n\t\telse {\n\t\t\treturn _parseObj(src, chars, lvl);\n\t\t}\n\n\t\t// return result\n\n\t\tres.size = len;\n\t\treturn res;\n\t}\n\t\n\t\t\n\t// ================================================\n\n\n\tfunction p(a,b){ h.push([a,b]);}\n\n\tfunction _unwrap(x){\n\n\t\tif (null != x.key) {\n\t\t\tp('key', x.key);\n\t\t\tif (!ko) p('', ': ');\n\t\t}\n\n\t\t// empty\n\t\tif (x.empty) {\n\t\t\tp('empty', x.left+(x.val||'')+x.right); \n\t\t\treturn;\n\t\t}\n\n\t\tvar t = x.type,\n\t\t\t\tvalset = false;\n\n\t\t// val defined\n\t\tif (x.val != null){\n\t\t\tif (x.left) p('bracket', x.left);\n\t\t\tif (x.val.length < maxChars/5 && k1[x.key]) {\n\t\t\t\tvalset = true;\n\t\t\t}\n\t\t\tif (!ko || valset) {\n\t\t\t\tif (ko && valset) p('', ': ');\n\t\t\t\tp(t, x.val.escapeHTML());\n\t\t\t\tif (x.trim) {\n\t\t\t\t\tvar prefix = '+';\n\t\t\t\t\tif (t == 'object' || t == 'array') \tp('trim', prefix+x.trim);\n\t\t\t\t\telse p('trim','…');\n\t\t\t\t}\n\t\t\t} \n\t\t\tif (x.right) p('bracket', x.right);\n\t\t\t\n\t\t\tif (!valset && ko && !x.right && t !='simple' && t !='number') {\n\t\t\t\tp('bracket', t=='string'?'\"\"':t=='object'?'{}':'[]')\n\t\t\t}\n\t\t}\n\n\t\t// rows\n\n\t\telse if (x.rows.length){\n\t\t\tif (x.left) p('bracket', x.left);\n\n\t\t\tvar i, rl = x.rows.length;\n\t\t\tfor (i=0; i<rl;i++) {\n\t\t\t\t_unwrap(x.rows[i]);\n\t\t\t\tif (i!=rl-1 || x.trim) p('',', ');\n\t\t\t}\n\n\t\t\tif (x.trim) {\n\t\t\t\tvar prefix = '+';\n\t\t\t\tif (t == 'object' || t == 'array') \tp('trim', prefix+x.trim);\n\t\t\t\telse p('trim','…');\n\t\t\t}\n\t\t\tif (x.right) p('bracket', x.right);\n\t\t}\n\n\t\t// no rows, trim\n\t\telse if (x.trim) {\n\t\t\tif (t == 'object') \t\t\tp('short', '{'+x.trim+'}');\n\t\t\telse if (t == 'array') \tp('short', '['+x.trim+']');\n\t\t}\n\t}\n\n}",
      "Event": {
        "add": "function (evt,data,that,$o) {\n\tevt.stopPropagation();\n\tvar $b = $(this),\n\t\t\t$f = $b.parents(\".my-form\").eq(0);\t\t\n\tvar $p = $b,\n\t\t\tp = $f.data(\"my\").data,\n\t\t\tmn = $f.data(\"my\").manifest,\n\t\t\tt = $.type(p.value),\n\t\t\tisa = t==\"array\",\n\t\t\tkey = $f.my(\"data\").key,\n\t\t\tclip = that.Ls(\"Clip\")||{type:\"\"},\n\t\t\tsample = {\n\t\t\t\tobject:{},\n\t\t\t\tarray:[],\n\t\t\t\tstring:\"\",\n\t\t\t\tboolean:true,\n\t\t\t\tnumber:0\n\t\t\t};\n\t$b.parent().addClass(\"hover\");\n\t$f.addClass(\"hover\");\n\t$(this).modal({\n\t\tmanifest:that.MAdd,\n\t\tdata:{\n\t\t\tcmd:'prepend',\n\t\t\ttext:'New '+(isa?'member':'property')+' in <b>'+p.key+':'+(isa?'[]':'{}')+'</b>',\n\t\t\tprepend:(isa?'Insert':'Prepend'),\n\t\t\tappend:(isa?'':'Append'),\n\t\t\tisarray:isa,\n\t\t\tkey:isa?\"0\":'',\n\t\t\tclip:clip,\n\t\t\tkeys:isa?{}:Object.keys(p.value).reduce(function(a,b){a[b]=true;return a;},{}),\n\t\t\tfile:{}\n\t\t},\n\t\twidth:300,\n\t\talign:\"top:100%\",\n\t\troot:$o,\n\t\tbound:1,\n\t\tnose:\"top\",\n\t\tscreen:\"rgba(255,255,255,0)\",\n\t\tclose:false,\n\t\tesc:true,\n\t\tenter:true\n\t})\n\t.then(function(data){\n\t\tvar i, cmd = data.cmd,\n\t\t\t\tredraw = true, \n\t\t\t\tkeys=[], vals=[], ins;\n\t\t\n\t\tif (data.clip.type && data.type==\"clip\") sample.clip = data.clip.value; \n\t\t\n\t\tins = Object.clone(data.type==\"file\"?data.file:sample[data.type],true);\n\t\t\n\t\tif (!data.isarray) {\n\t\t\tif (data.type==\"string\" && data.file.data) ins=\"data:\"+data.file.content_type+\";base64,\"+data.file.data;\n\t\t\telse delete ins.name;\n\t\t}\n\t\t\t\t\n\t\tif (p.level==1 && /^(_id|_rev)$/.test(data.key)) {\n\t\t\tcw.lib.note(\"Can’t change system properties.\",\"error\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Object\n\t\tif (/^(ob)/.test(t)) {\n\t\t\t\n\t\t\t// Append/replace is simple\n\t\t\tif (cmd==\"append\" || p.value[data.key]!=null) { \n\t\t\t\tp.value[data.key] = ins; \n\t\t\t}\n\t\t\t\n\t\t\t// Prepend is more complex\n\t\t\telse if (cmd==\"prepend\") {\n\t\t\t\t\n\t\t\t\tkeys = Object.keys(p.value);\n\t\t\t\tfor (i in keys) {\n\t\t\t\t\tvals.push(p.value[keys[i]]);\n\t\t\t\t\tdelete p.value[keys[i]];\n\t\t\t\t}\n\t\t\t\tp.value[data.key] = ins;\n\t\t\t\tfor (i in keys) {\n\t\t\t\t\tif (keys[i]!==data.key) p.value[keys[i]] = vals[i];\n\t\t\t\t}\n\t\t\t\tvals=keys=null;\n\t\t\t}\n\t\t\t//Unknown cmd\n\t\t\telse redraw = false;\n\t\t}\n\t\t\n\t\t// Array\n\t\telse if (isa) {\n\t\t\tp.value.insert(ins, data.key);\n\t\t}\n\t\telse redraw = false;\n\t\t\n\t\tif (redraw) {\n\t\t\t// force redraw\n\t\t\tmn.ShowItems = null;\n\t\t\tmn.List = that.MakeList(p);\n\t\t\tp.state=2;\n\t\t\t$f.find(\".idesc:eq(0)\").trigger(\"check\");\n\t\t\t$f.find(\".ilist:eq(0)\").trigger(\"recalc\");\n\t\t}\n\t})\n\t.always(function(){\n\t\t$b.parent().removeClass(\"hover\");\n\t\t$f.removeClass(\"hover\");\n\t});\n}",
        "takeout": "function (evt,data,that,$o) {\n\tevt.stopPropagation();\n\tvar $b = $(this),\n\t\t\t$f = $b.parents(\".my-form\").eq(0),\n\t\t\tp = $f.data(\"my\").data,\n\t\t\tmn = $f.data(\"my\").manifest;\n\t$b.parent().addClass(\"hover\");\n\t$f.addClass(\"hover\");\n\t$b.modal({\n\t\tmanifest:that.MTakeout,\n\t\tdata:{\n\t\t\tjson:JSON.stringify(p.value,null,'  '),\n\t\t\tpath:p.path,\n\t\t\tkey:p.key,\n\t\t\treplace:Object.size(p.value)?\"Replace\":\"Save\",\n\t\t\textend:Object.size(p.value)?\"Extend\":\"\"\n\t\t},\n\t\twidth:($f.width()-160).clamp(500,1000),\n\t\talign:\"top:103%;\",\n\t\troot:$o,\n\t\tbound:1,\n\t\tnose:\"top\",\n\t\tscreen:\"rgba(255,255,255,0)\",\n\t\tclose:true,\n\t\tesc:true,\n\t\tenter:true\n\t})\n\t.then(function(res){\n\t\tvar redraw = true,\n\t\t\t\tres1;\n\n\t\tif (that.my.parent() && that.my.parent().data.isNew) res1 = res.node;\n\t\telse res1 = p.level==0?Object.reject(res.node,/^(_id|_rev)$/):res.node;\n\t\t\n\t\tif (res.cmd==\"extend\") {\n\t\t\tObject.merge( p.value,  res1, true);\n\t\t}\n\t\telse if (res.cmd==\"replace\") {\n\t\t\tvar temp = {};\n\t\t\tif (p.level == 0 && p.value._rev) temp = Object.select(p.value, /^(_id|_rev)$/);\n\t\t\tthat.RT('Lib').kick(p.value, res1);\n\t\t\tif (p.level == 0) Object.merge(p.value, temp);\n\t\t}\n\t\telse redraw = false;\n\t\t\n\t\tif (redraw) {\n\t\t\t// force redraw\n\t\t\tmn.ShowItems = null;\n\t\t\tp.state=2;\n\t\t\t\n\t\t\tthat.RT('Lib').relist($f, mn);\n\t\t\t/*mn.List = that.Root().MakeList(p);\n\t\t\t$f.find(\".idesc:eq(0)\").trigger(\"check\");\n\t\t\t$f.find(\".ilist:eq(0)\").trigger(\"recalc\");*/\n\t\t}\n\t\t\n\t})\n\t.always(function(){\n\t\t$b.parent().removeClass(\"hover\");\n\t\t$f.removeClass(\"hover\");\n\t});\n}",
        "copy": "function (evt,data,that,$o) {\n\tevt.stopPropagation();\n\tvar $b = $(this),\n\t\t\t$f = $b.parents(\".my-form\").eq(0),\n\t\t\tp = $f.data(\"my\").data,\n\t\t\tt = $.type(p.value),\n\t\t\tobj={};\n\t\n\tif (!p.level) obj = {key:\"\",type:p.type,value:p.value}\n\telse {\n\t\tobj={key:p.key,type:p.type,value:p.value}\n\t}\n\tthat.Ls(\"Clip\", obj);\n\tif (cw.lib) cw.lib.note(\"Clip stashed\",\"ok\");\n}"
      },
      "HTML": {
        "Main": "<section style=\"\">\n\t<section id=\"editor\" class=\"dibw100p\">\n\t\t<div class=\"pb5 fs130 nocwmin\">\n\t\t\t<input type=\"text\" id=\"doctitle\" class=\"fs110 pt7 pb7 pl12 bold\" placeholder=\"Doc title\" disabled=true>\n\t\t\t<button class=\"button mr0 fr p10 w150\" id=\"btn-save\">Save</button>\n\t\t</div>\n\t\t<div id=\"doc\" class=\"irow\txgray\"></div>\n\t</section>\n</section>",
        "ItemComplex": "<div class=\"inav\"><div class=\"ikey\"></div><div class=\"idesc cp\">–</div></div><div class=\"ivalue imulti hide\"><div class=\"ilist\"></div></div><div class=\"iact buttons\"><button class=\"btn-add button green\" title=\"Add new property\">&thinsp;<span class=\"fi-plus\"></span>&thinsp;</button><button class=\"btn-takeout button\" title=\"Copy / paste / edit as JSON\"><span class=\"fi-shopping-bag\"></span></button><button class=\"btn-copy button\" title=\"Stash node as clip\"><span class=\"fi-clipboard\"></span></button><button class=\"btn-del button red\"  title=\"Del node\">&thinsp;<span class=\"fi-x\"></span>&thinsp;</button></div>",
        "ItemSimple": "<div class=\"inav\"><div class=\"ikey ikeysimple\"></div><div class=\"ivalue\"></div><div class=\"ieditor\"></div></div><div class=\"iact buttons\"><button class=\"btn-copy button\" title=\"Stash property as clip\"><span class=\"fi-clipboard\"></span></button><button class=\"btn-del button red\" title=\"Del property\">&thinsp;<span class=\"fi-x\"></span>&thinsp;</button></div>"
      },
      "style": {
        " ": "font-size:15px;font-family: '-apple-system','BlinkMacSystemFont','Helvetica Neue','Segoe UI',Helvetica,Tahoma,Verdana,Sans-serif;font-weight:300;min-height:500px;max-width:1900px;",
        " .bolder": "font-weight:bolder;",
        " #doctitle": "function ($o,b,c) {\n\t\treturn \"width:\"+($o.width().clamp(0,1500)-220-20-144)+\"px\"\n\t}",
        "  .irow": "function () {\n\t\tvar x = this.data.labelWidth;\n\t\treturn {\n\t\t\t' .ikey':'width:'+x+'px;',\n\t\t\t' .inav':'padding-left:'+x+'px;',\n\t\t\t' .inav>.ikey':'margin-left:-'+x+'px;'\n\t\t}\n\t}",
        " .jval-bracket": "font-weight:inherit;color: rgba(0, 181, 161, 0.72);",
        " .jval-trim": "display:inline-block;border-radius:2px;padding:0px 2px 1px 2px;line-height:1.1em;color:rgba(213, 48, 89, 0.63);background-color:rgba(43, 107, 192, 0.07);",
        " .jval-short": "color:rgba(88,101,123,0.63);",
        " .jval-empty": "color:rgba(88,101,123,0.63);",
        " .jval-key": "font-weight:inherit;margin-left:3px;",
        " .jval-bracket+.jval-key": "margin-left:1px;",
        " .jval-simple": "color:rgba(52, 143, 27, 0.78);",
        " .jval-number": "color:rgba(255,97,0,0.87)",
        " .jval-null": "color:rgba(214,0,26,0.83)",
        " .jval-string": "color:#366599;",
        " .jval-function": "color:rgba(143,36,158,0.8);",
        "": {
          " textarea": "font-family:'PT Mono',Monaco,'Lucida Console',monospace;",
          " .irow": "width:calc(100% - 1px);display:inline-block; vertical-align:top; padding:0px 0px 0px 25px; border-left:1px solid #d1dfe9; line-height:1.3em; margin-left:1px;",
          " .irow:before": "content:\"\";position:absolute;top:15px;left:0;width:18px;border-bottom:1px solid #d1dfe9;",
          " .irow:last-child": "border:none;",
          " .irow:last-child:after": "content:\"\";position:absolute;top:0;left:0;height:15px;border-left:1px solid #d1dfe9;",
          " .irow:hover,.irow.hover": "background-color:rgba(128, 171, 238, 0.04);",
          " .ikey": "padding-right:10px;display:inline-block; word-break:break-all;font-size:95%; line-height:1.2em;opacity:0.8; overflow:hidden;vertical-align:top;margin:0.25em 0 0.3em 0px;",
          " .ilabel": "font-size:80%;padding:0 5px; background-color: rgba(0,0,0,0.05); border-radius:2px;opacity:0.9; display:inline-block; margin:-1px 5px 0 0px;",
          " .ivalue, .ilist": "word-break: break-all;",
          " .ivalue": "line-height: 1.6em;cursor:pointer;",
          " .idesc": "line-height: 1.5em;",
          " .ivalue, .ilist, .idesc": "width:100%;display:inline-block; vertical-align:top;",
          " .imulti.ivalue": "cursor:inherit;",
          " .iseditor .ivalue": "word-wrap: break-word; white-space:pre; padding:0.2em 0.3em 0.2em 0.4em; font-family:'PT Mono',Monaco,'Lucida Console',monospace; max-height:400px; overflow:auto;overflow:overlay; outline:none; border:1px solid rgba(0,0,0,0.2); font-size:90%; border-radius:2px;margin:-1px 0 -1px 0; tab-size:2; background-color:rgba(255,255,240,0.8); cursor:text;",
          " .iboolean-tag": "padding:0 9px 1px 9px; display:inline-block; vertical-align:top; border-radius:100px;",
          " .inav": "margin:2px 0;",
          " .inav .ieditor": "width:100%;display:none;word-break:normal;",
          " .inav .ivalue.hide~.ieditor": "display:inline-block;",
          " .inav .ieditor .icmframe": "overflow:hidden; border:1px solid #d1dfe9; border-radius:2px;",
          " .inav .ieditor .button": "padding: 0.25em 0.7em 0.15em 0.7em;margin-top: 0; margin-bottom: 0;",
          " .CodeMirror": "font:13px 'PT Mono',Monaco,monospace;line-height:1.4em; color: #434e5d;",
          " .CodeMirror-scroll": "max-height:calc(20 * 16px + 6px);",
          " .CodeMirror-linenumbers": "transition: background-color 0.3s;",
          " .ed-error .CodeMirror-linenumbers": "background-color:rgba(255, 200, 200, 0.75);",
          " .CodeMirror .cm-property": "color:#434e5d;",
          " .CodeMirror .cm-variable": "color:#33bfad;",
          " .CodeMirror .cm-keyword": "color:#90259e;",
          " .my-modal-form .CodeMirror": "min-height:150px; height:auto;",
          " .my-modal-form .CodeMirror-scroll": "min-height:150px;",
          " .inav .ieditor .CodeMirror": "min-height:25px; height:auto;",
          " .iact": "position:absolute; top:3px; right:3px;opacity:0;transition:opacity 0.3s;border-radius:3px;",
          " .iact:hover, .iact.hover": "display:block;opacity:1!important;",
          " .inav:hover~.iact": "display:block;opacity:0.7;xbackground:rgba(255,255,255,0.8);",
          " .iact .button": "padding:0.25em 0 0.15em 0;margin-top:0;margin-bottom:0;text-align:center;width:36px;white-space:nowrap;",
          " .inav.iseditor~.iact": "display:none;",
          " #doc": "padding:0; border:none;overflow:visible;",
          " #doc:before, #doc:after": "display:none;",
          " #doc:hover": "background:white;",
          " #doc>.inav": "padding-left:120px;",
          " #doc>.inav .ikey": "font-size:105%;font-weight:bold;margin:0 0 0 -120px;width:120px;",
          " #doc>.iact": "opacity:0.3;top:0;right:0;",
          " .tag.active": "background-color: rgba(135, 212, 0, 0.17)!important;color: rgb(65, 132, 0)!important;",
          " .buttons button": "border-radius:0;margin-right:2px; padding:0.4em 0.7em 0.4em 0.7em;width:36px;font-size:90%;",
          " .buttons button:last-child": "border-top-right-radius:3px; border-bottom-right-radius:3px; margin-right:0;",
          " .buttons button:first-child": "border-top-left-radius:3px; border-bottom-left-radius:3px;",
          " .buttons .button": "border-radius:0;margin-right:2px;",
          " .buttons .button:last-child": "border-top-right-radius:3px; border-bottom-right-radius:3px; margin-right:0;",
          " .buttons .button:first-child": "border-top-left-radius:3px; border-bottom-left-radius:3px;",
          " a.base64image img": "background: white; border: 1px solid #ddd!important; padding: 3px; max-width: 10%; min-width: 2%; max-height: 60px;",
          " .base64image~div": "width:87%;",
          " .base64ico~div": "width:87%;",
          " .w55": "width:55px;",
          " .h55": "height:55px;"
        }
      },
      "MTakeout": {
        "init": "function ($o,form) {\n\t\tvar that = this;\n\t\tthat.StartHash = $.my.f.sdbmCode(form.data.json);\n\t\t$o.formgen([\n\t\t\t'<div id=\"title\"></div>',\n\t\t\t'<div style=\"border:1px solid #ddd; margin:2px 0 10px 0;border-radius:2px\">',\n\t\t\t'<textarea id=\"json\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"></textarea>',\n\t\t\t'</div>',\n\t\t\t'<div>',\n\t\t\t'<div class=\"fr gray pt5\" id=\"info\"></div>',\n\t\t\t'<div class=\"buttons dib vat fs110 mt4\">',\n\t\t\t\t'<button class=\"button w90\" id=\"btn-replace\">Replace</button>',\n\t\t\t\t'<button class=\"button w90\" id=\"btn-extend\">Extend</button>',\n\t\t\t\t'<button class=\"button w90\" id=\"btn-cancel\">Cancel</button>',\n\t\t\t'</div>',\n\t\t\t'<div class=\"lgray pl30 dib vat pt5\" id=\"info\">JSON or js expression ⇡</div>',\n\t\t\t'</div>' \n\t\t]);\n\n\t}",
        "ui": {
          "#title": "function (d,v,$o) {\n\t\t\treturn \"JSON for \"+d.path.slice(0).add(d.key).join(\"/\").truncate(70,\"middle\",\"…\");\n\t\t}",
          "#json": {
            "delay": 20,
            "bind": "json",
            "init": "function ($o,form) {\n\t\t\t\tvar that = this;\n\t\t\t\tif (that.data.json.length < 1e6) {\n\t\t\t\t\tCodeMirror.fromTextArea($o[0], {\n\t\t\t\t\t\tmode:\"javascript\",\n\t\t\t\t\t\tlineNumbers:true,\n\t\t\t\t\t\tindentWithTabs:!0,\n\t\t\t\t\t\tindentUnit:2,\n\t\t\t\t\t\tscrollbarStyle:null,\n\t\t\t\t\t\t//lineWrapping:true,\n\t\t\t\t\t\ttabSize:2,\n\t\t\t\t\t\ttheme: \"default\",\n\t\t\t\t\t\tautofocus:true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}"
          },
          "#btn-replace": {
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v!=null) {\n\t\t\t\t\td.node = this.Parsed;\n\t\t\t\t\td.cmd = \"replace\";\n\t\t\t\t\t$o.trigger(\"commit\");\n\t\t\t\t}\n\t\t\t\treturn d.replace;\n\t\t\t}",
            "css": {
              ":disabled": "function (d,v) {return !this.Dirty || !this.Parsed;}",
              "self:orange": "function (d,v) {return this.Dirty && !!this.Parsed;}"
            },
            "watch": "#info"
          },
          "#btn-extend": {
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v!=null) {\n\t\t\t\t\td.node = this.Parsed;\n\t\t\t\t\td.cmd = \"extend\";\n\t\t\t\t\t$o.trigger(\"commit\");\n\t\t\t\t}\n\t\t\t\treturn d.extend;\n\t\t\t}",
            "css": {
              ":disabled": "function (d,v) {return !this.Dirty || !this.Parsed;}",
              "self:orange": "function (d,v) {return this.Dirty && !!this.Parsed;}",
              "self:hide": "function (d) { return !d.extend}"
            },
            "watch": "#info"
          },
          "#btn-cancel": {
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v!=null) {\n\t\t\t\t\t$o.trigger(\"cancel\");\n\t\t\t\t}\n\t\t\t}"
          },
          "#info": {
            "delay": 400,
            "bind": "function (d,v,$o) {\n\t\t\t\tvar parse, \n\t\t\t\t\t\ts = unescape(encodeURIComponent(d.json)).length;\n\t\t\t\ttry {\n\t\t\t\t\tparse = eval(\"(\"+d.json+\")\");\n\t\t\t\t\tif (!Object.isObject(parse) && !Object.isArray(parse)) parse=null;\n\t\t\t\t\telse {\n\t\t\t\t\t\tparse = JSON.parse($.my.tojson(parse));\n\t\t\t\t\t}\n\t\t\t\t}catch(e){\n\t\t\t\t\t//console.log(e)\n\t\t\t\t}\n\t\t\t\tthis.Parsed = parse?parse:null;\n\t\t\t\t\n\t\t\t\t$o.my().root.toggleClass(\"ed-error\",!parse);\n\n\t\t\t\tthis.Hash = $.my.f.sdbmCode(d.json);\n\t\t\t\tthis.Dirty = this.StartHash != this.Hash;\n\t\t\t\treturn s.metric(2)+\"b\";\n\t\t\t}",
            "watch": "#json"
          }
        },
        "style": {
          " #json": "border: none; width: 100%;display: block;height: 300px;font-size: 0.7em;word-wrap: normal; overflow-x: hidden;"
        }
      },
      "MAdd": {
        "init": "function ($o,form) {\n\t\tvar that=this;\n\t\t$o.formgen(that.HTML);\n\t\tif (form.data.isarray) {\n\t\t\t$o.find(\"#nkey\").attr(\"type\",\"number\");\n\t\t}\n\t}",
        "data": {
          "cmd": "",
          "key": "",
          "type": "string",
          "isarray": false,
          "text": "Create new property",
          "prepend": "Prepend",
          "append": "Append",
          "upload": "<span class=\"pseudolink dib w100p vat tac\">Select file...</span>",
          "keys": {},
          "file": {}
        },
        "ui": {
          "#ntext": "text",
          "#nkey": {
            "bind": "function (d,v) {\n\t\t\t\tif (v!=null) {\n\t\t\t\t\tif (d.isarray) d.key = v.replace(/\\D/g,'');\n\t\t\t\t\telse d.key = v;\n\t\t\t\t}\n\t\t\t\treturn d.key;\n\t\t\t}",
            "watch": "#ntype"
          },
          "#ntype": {
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v!=null) {\n\t\t\t\t\td.type=v;\n\t\t\t\t\tif (v==\"Clip\" && !d.key && !d.isarray) d.key = d.clip.key; \n\t\t\t\t}\n\t\t\t\treturn d.type;\n\t\t\t}",
            "init": "function ($o,form) {\n\t\t\t\t$o.tags({\n\t\t\t\t\ttags:[[\n\t\t\t\t\t\t{\"{}\":\"object\"},\n\t\t\t\t\t\t{\"[]\":\"array\"},\n\t\t\t\t\t\t{\"42\":\"number\"},\n\t\t\t\t\t\t{\"!0\":\"boolean\"},\n\t\t\t\t\t\t{\"File\":\"file\"}\n\t\t\t\t\t].add(form.data.clip.type?{\"Clip\":\"clip\"}:undefined)],\n\t\t\t\t\tempty:{'\"\"':\"string\"},\n\t\t\t\t\ttagcss:'tag blue cp pl6 pr6',\n\t\t\t\t\ttagshim:\"\",\n\t\t\t\t\tgroupshim:\"\"\n\t\t\t\t})\n\t\t\t}",
            "recalc": "#nkeytype"
          },
          "#nkeytype": "function (d) {return (d.isarray?'Index':'Key')}",
          "#xupload": {
            "watch": "#ntype",
            "css": {
              "hide": "function (d) {return d.type!=\"file\"}"
            }
          },
          "#upload": {
            "bind": "function (d,v,$o) {\n\t\tvar f, a={}, data;\n\t\tif (v!=null && v) {\n\t\t\tf = $o[0].files[0];\n\t\t\tif (f.size>d.limit){\n\t\t\t\tcw.note(\"Max upload file size is \"+(d.limit*1).abbr(1)+\"b\",\"error\");\n\t\t\t\t$o.wrap('<form>').closest('form').get(0).reset();\n\t\t\t}\n\t\t\telse if (f) (function(){\n\t\t\t\ta.name = f.name;\n\t\t\t\ta.content_type = f.type||\"application/octet-stream\";\n\t\t\t\tvar fr = new FileReader(), ri, sb64 = [];\n\t\t\t\tfr.onload=function(e){\n\t\t\t\t\tri = new Uint8Array(e.target.result);\n\t\t\t\t\tfor (var i=0; i<ri.length; i++) sb64.push(String.fromCharCode(ri[i]));\n\t\t\t\t\tdata = window.btoa(sb64.join(\"\"));\n\t\t\t\t\ta.data = data;\n\t\t\t\t\ta.length = sb64.length;\n\t\t\t\t\t\n\t\t\t\t\t$.extend(d.file, a);\n\t\t\t\t\tif (!d.key && !d.isarray) d.key = f.name;\n\t\t\t\t\tif (!d.key && d.isarray) 10000;\n\n\t\t\t\t\t$o.wrap('<form>').closest('form').get(0).reset();\n\t\t\t\t\t\n\t\t\t\t\t$o.my(\"find\",\".cw-att-upload>span\")\n\t\t\t\t\t.text(f.name.truncate(15,\"middle\",\"…\")+\" \"+a.length.metric(2,false)+\"b\");\n\t\t\t\t\t\n\t\t\t\t\tif (d.key == f.name) {\n\t\t\t\t\t\t$o.my(\"find\",\"#nkey\").val(d.key).trigger(\"blur\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tfr.readAsArrayBuffer(f);\t\n\t\t\t})();\n\t\t}\n\t}",
            "css": {
              "hide": "function (d) {return !d.upload}"
            }
          },
          ".cw-att-upload": "upload",
          "#btn-to0": {
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v!=null){\n\t\t\t\t\td.cmd = \"prepend\";\n\t\t\t\t\t$o.trigger(\"commit\");\n\t\t\t\t}\n\t\t\t\treturn d.keys[d.key]&&!d.isarray?'Replace':d.prepend;\n\t\t\t}",
            "css": {
              ":disabled": "function (d) {return !d.key}",
              "self:red": "function (d) {return d.keys[d.key]&&!d.isarray;}"
            },
            "watch": "#nkey"
          },
          "#btn-to1": {
            "bind": "function (d,v,$o) {\n\t\t\t\tif (v!=null){\n\t\t\t\t\td.cmd = \"append\";\n\t\t\t\t\t$o.trigger(\"commit\");\n\t\t\t\t}\n\t\t\t\treturn d.append;\n\t\t\t}",
            "css": {
              ":disabled": "function (d) {return !d.key}",
              "self:hide": "function (d) {return !d.append || /^\\d+$/.test(d.key) || d.keys[d.key]}"
            },
            "watch": "#nkey"
          },
          "#btn-cancel": "function (d,v,$o) {\n\t\t\tif(v!=null) $o.trigger(\"cancel\");\n\t\t}"
        },
        "HTML": [
          "<div id=\"ntext\"></div>",
          {
            "label": "60px",
            "row": "300px",
            "rowCss": "my-row pt5 pb5",
            "labelCss": "my-label gray fs90"
          },
          [
            "<span id=\"nkeytype\">Key</span>",
            "inp#nkey.w100p",
            "msg.mt2.mb-2"
          ],
          [
            "Type",
            "spn#ntype.div.vat.fs95"
          ],
          "<div id=\"xupload\" class=\"pl60 mt5 mb10 hide\">",
          "<span class=\"cw-att-upload button w100p\"></span>",
          "<input id=\"upload\" class=\"pl60\" type=\"file\" />",
          "</div>",
          {
            "rowCss": "my-row pt5 pb10 buttons pl60"
          },
          [
            "",
            "but#btn-to0.button.green.w80",
            {
              "txt": "Prepend"
            },
            "but#btn-to1.button.green.w80",
            {
              "txt": "Append"
            },
            "but#btn-cancel.button.w75",
            {
              "txt": "Cancel"
            }
          ]
        ],
        "style": {
          " .cw-att-item": "white-space:nowrap; overflow:hidden; padding:0.2em 0 0.2em 0; line-height:1.4em;",
          " input[type=file]": "width:240px;cursor:pointer;opacity:0; position:absolute;top:0;left:60px;height:35px;"
        }
      },
      "MEdit": {
        "data": {
          "text": "",
          "mode": "auto"
        },
        "init": [
          "<div style=\"width:calc(100% - 80px);\" class=\"icmframe dib vat mt-1 mb-1\">",
          "<textarea id=\"ied\" style =\"width:100%;max-height:300px;\" class=\"xgray\"></textarea>",
          "</div>",
          "<div class=\"buttons w80 dib vat tar o100 pr3 pt0\">",
          "<button id=\"btn-change\" class=\"button green w36\" title=\"Stash property as clip\"><span class=\"fi-check\"></span></button>",
          "<button id=\"btn-discard\" class=\"button w36\" title=\"Del property\"><span class=\"fi-minus-circle\"></span></button>",
          "</div>"
        ],
        "ui": {
          "#ied": {
            "init": "function ($o) {\n\t\t\t\t\n\t\t\t\tvar that = this,\n\t\t\t\t\t\td = that.data,\n\t\t\t\t\t\tt = d.text,\n\t\t\t\t\t\tmode = d.mode,\n\t\t\t\t\t\tisNumber = mode=='number',\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\twrap = false,\n\t\t\t\t\t\tlnums = true;\n\t\t\t\t\n\t\t\t\t// Simple heuristics to guess mode\n\t\t\t\tif (mode == 'auto') {\n\t\t\t\t\tstart = t.substr(0,800);\n\t\t\t\t\tif ((start.match(/(var\\s|const\\s|function[\\s\\(]|return\\s|[\\s\\t]if\\s)/g)||[]).length > 2) {\n\t\t\t\t\t\tmode = \"text/javascript\";\n\t\t\t\t\t\tvar maxl = 0;\n\t\t\t\t\t\tt.lines().forEach(function(e,i){\n\t\t\t\t\t\t\tif (i>200) return;\n\t\t\t\t\t\t\tif (e.length > maxl) maxl = e.length;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (maxl>150 && maxl<1000) wrap = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (\n\t\t\t\t\t\t/<\\/(div|span|p|a|script|head|title|svg|path)/.test(start)\n\t\t\t\t\t\t|| /<(svg|path|group)\\s/.test(start)\n\t\t\t\t\t) {\n\t\t\t\t\t\tmode = 'text/html';\n\t\t\t\t\t\twrap = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmode = 'text';\n\t\t\t\t\t\tif (!/[\\r\\n]/.test(start)) {\n\t\t\t\t\t\t\twrap = true;\n\t\t\t\t\t\t\tif (t.length < 800) lnums = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Special modes\n\t\t\t\tif (mode == 'number') {\n\t\t\t\t\tmode = \"text/javascript\";\n\t\t\t\t\tlnums = false;\n\t\t\t\t}\n\t\t\t\telse if (mode == 'b64') {\n\t\t\t\t\tmode = 'text/plain';\n\t\t\t\t\twrap = true;\n\t\t\t\t\tlnums = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tCodeMirror.fromTextArea($o[0], {\n\t\t\t\t\tmode: \t\t\t\t\tmode,\n\t\t\t\t\tviewportMargin:\t5,\n\t\t\t\t\tlineNumbers:\t\tlnums,\n\t\t\t\t\tindentWithTabs:\t!0,\n\t\t\t\t\tindentUnit:\t\t\t2,\n\t\t\t\t\ttabSize:\t\t\t\t2,\n\t\t\t\t\ttheme: \t\t\t\t\t'default',\n\t\t\t\t\tautofocus:\t\t\ttrue,\n\t\t\t\t\tlineWrapping:\t\twrap,\n\t\t\t\t\textraKeys:$.extend(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tEsc:_cancel,\n\t\t\t\t\t\t\t'Ctrl-Enter':_commit.debounce(20),\n\t\t\t\t\t\t\t'Cmd-Enter':_commit.debounce(20)\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t!isNumber?{}:{Enter:_commit}\n\t\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t// - - - -\n\t\t\t\tfunction _commit(){that.my.trigger('#ied','editorcommit.my')}\n\t\t\t\tfunction _cancel(){that.my.trigger('#ied','editorcancel.my')}\n\t\t\t}",
            "bind": "text"
          },
          "#btn-change": {
            "bind": "function (d,v) {if(v!=null) this.my.trigger('#ied','editorcommit.my')}"
          },
          "#btn-discard": {
            "bind": "function (d,v) {if(v!=null) this.my.trigger('#ied','editorcancel.my')}"
          }
        }
      },
      "$multi": {
        "id": "Sys.JSON.Object",
        "data": {},
        "List": [],
        "Txt": {
          "object": [
            "Object {",
            "}"
          ],
          "array": [
            "Array [",
            "]"
          ]
        },
        "init": "function _init_multi($o,form) {\n\t\tvar that = this, \n\t\t\t\td = form.data;\n\t\t$o.html(that.HTML);\n\t\t\n\t\tif (d.state > 1) that.List = that.MakeList(d);\n\t\t\n\t\t$o.find(\".ilist:eq(0)\").on(\"change.my\", function(){\n\t\t\tthat.RT('Rejoin')(d, that.List);\n\t\t}.debounce(300));\n\t\t\n\t\t$o.on(\"click.my\", \".ilist:eq(0) .btn-del\", function(evt){\n\t\t\tevt.stopPropagation();\n\t\t\tvar $f = $(this).parents(\".my-form\").eq(0);\t\t\n\t\t\tvar p = $f.parent().data(\"my\").data,\n\t\t\t\t\tt = $.type(p.value),\n\t\t\t\t\tkey = $f.my(\"data\").key;\n\t\t\t\n\t\t\tif (t==\"object\") delete p.value[key];\n\t\t\telse if (t==\"array\") p.value.removeAt(key);\n\t\t\t\n\t\t\tthat.RT('Lib').relist($o, that, form);\n\t\t});\n\t\t\n\t}",
        "ShowItems": null,
        "ui": {
          ".ivalue": {
            "css": {
              "hide": "function () {return !this.List.length}"
            },
            "watch": [
              ".idesc"
            ]
          },
          ".ilist": {
            "delay": 0,
            "bind": "this.List",
            "list": "<div class=\"irow\"></div>",
            "id": "function (e) {return e.id;}",
            "hash": "function (e) {return e.hash;}",
            "manifest": "function (e) {\n\t\t\t\tvar that = this;\n\t\t\t\treturn that.RT(e.manifest)||that.RT('$string');\n\t\t\t}",
            "watch": [
              ".idesc"
            ]
          },
          ".ikey": {
            "delay": 10,
            "bind": "function (d,v) {\n\t\t\t\treturn (!/^(|\\s+)$/.test(d.key))?d.key.truncate(25,'right','…'):'\"'+d.key+'\"'; \n\t\t\t}",
            "css": {
              "bold": "function (d) {return d.state!=1}"
            },
            "watch": [
              ".idesc"
            ]
          },
          ".idesc": {
            "delay": 10,
            "bind": "function (d,v,$o) {\n\t\t\t\tvar that = this,\n\t\t\t\t\t\tlist = this.List, \n\t\t\t\t\t\tt = that.Txt[d.type],\n\t\t\t\t\t\tds = Object.size(d.value),\n\t\t\t\t\t\th=\"\";\n\t\t\t\tif (v!=null) {\n\t\t\t\t\td.state = ((d.state==1 && !(d.manifest==\"$multi\" && !ds))|| !d.level?2:1);\n\t\t\t\t\tif (d.state==2) that.List = that.MakeList(d);\n\t\t\t\t\telse {\n\t\t\t\t\t\tthat.List = [];\n\t\t\t\t\t\tthat.ShowItems = null;\n\t\t\t\t\t}\n\t\t\t\t\tthat.RT('MemState')(d);\n\t\t\t\t}\n\n\t\t\t\tif (!that.List.length) {\n\t\t\t\t\tvar a = that.RT('j2h')(d.value, 50, ['id','name','length','status'], d.type!='array'?1:2, d.type!='array');\n\t\t\t\t\tif (a.length==1 && a[0][0]=='short') {\n\t\t\t\t\t\tif (a[0][1][0] == '{') a[0][1] ='Object '+a[0][1];\n\t\t\t\t\t\telse if (a[0][1][0] == '[') a[0][1]='Array '+a[0][1];\n\t\t\t\t\t}\n\t\t\t\t\th+=a.map(function(row){\n\t\t\t\t\t\tif (!row[0]) return row[1];\n\t\t\t\t\t\treturn '<span class=\"jval-'+row[0]+'\">'+row[1]+'</span>';\n\t\t\t\t\t}).join('');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn (d.type==\"object\"?'Object {'+ds+'}▾':'Array ['+ds+']▾');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn h;\n\t\t\t}",
            "events": "click.my"
          }
        }
      },
      "$string": {
        "id": "Sys.JSON.String",
        "CM": "auto",
        "F": {},
        "ui": {
          ".ikey": {},
          ".ivalue": {
            "init": "function ($o) {\n\t\t\t\tvar that = this,\n\t\t\t\t\t\td = that.data;\n\t\t\t\tthat.F.initEdit($o, that);\n\t\t\t}",
            "bind": "function (d,v) {\n\t\t\t\tif (d.state==1) {\n\t\t\t\t\t\n\t\t\t\t\treturn _conv(d.value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (v!=null) d.value = v;\n\t\t\t\t\treturn _conv(d.value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// ---\n\t\t\t\t\n\t\t\t\tfunction _conv(value){\n\t\t\t\t\tvar h='<span class=\"jval-bracket\">&quot;</span>';\n\t\t\t\t\tif (value.length>140) {\n\t\t\t\t\t\th+=value.truncate(140).escapeHTML()\n\t\t\t\t\t\t+'&quot; <span class=\"ilabel\">'\n\t\t\t\t\t\t+ value.length\n\t\t\t\t\t\t+' chars</span>';\n\t\t\t\t\t}\n\t\t\t\t\telse h+=value.escapeHTML()+'<span class=\"jval-bracket\">&quot;</span>';\n\t\t\t\t\treturn h;\n\t\t\t\t}\n\t\t\t}",
            "events": "input.my"
          }
        }
      },
      "$function": {
        "id": "Sys.JSON.Function",
        "CM": "text/javascript",
        "F": {},
        "ui": {
          ".ikey": {},
          ".ivalue": {
            "init": "function ($o,form) {\n\t\t\t\tvar that = this,\n\t\t\t\t\t\td = that.data;\n\t\t\t\tthat.F.initEdit($o, that);\n\t\t\t}",
            "bind": "function (d,v) {\n\t\t\t\tif (d.state==1) {\n\t\t\t\t\tvar h='';\n\t\t\t\t\tif (d.value.length>100) {\n\t\t\t\t\t\tvar head = d.value.split(\")\",1)[0];\n\t\t\t\t\t\th+=[\n\t\t\t\t\t\t\t'<span class=\"jval-function\">function</span> ',\n\t\t\t\t\t\t\thead.split('(')[0].replace('function',''),\n\t\t\t\t\t\t\t'(',\n\t\t\t\t\t\t\thead.split('(')[1]+') {',\n\t\t\t\t\t\t\t' <span class=\"ilabel lh140\">',\n\t\t\t\t\t\t\t((d.value.match(/[\\r\\n]+/g)||\"\").length+1)+' LOC, ',\n\t\t\t\t\t\t\td.value.length+' chars',\n\t\t\t\t\t\t\t'</span> ',\n\t\t\t\t\t\t\t'}'\n\t\t\t\t\t\t].join('')\n\t\t\t\t\t}\n\t\t\t\t\telse h = '<span class=\"jval-function\">function</span>'+d.value.replace(/^function/,'').escapeHTML();\n\t\t\t\t\t\n\t\t\t\t\treturn h;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (v!=null) d.value = v;\n\t\t\t\t\treturn d.value;\n\t\t\t\t}\n\t\t\t}",
            "events": "input.my"
          }
        }
      },
      "$base64": {
        "id": "Sys.JSON.Base64",
        "CM": "b64",
        "F": {},
        "init": "function ($o,form) {\n\t\tvar sig, that = this, \n\t\t\t\td = form.data;\n\t\t$o.html(that.HTML);\n\t\t\n\t\tif (!d.sig) {\n\t\t\tvar trimmed = d.value.replace(/^data:image\\/(jpeg|png|gif);base64,/,'');\n\t\t\td.sig = sig = window.atob(trimmed.to(40));\n\t\t\t\n\t\t\td.size = (trimmed.length/4*3).floor();\n\n\t\t\tif (sig.to(4)===\"ÿØÿà\") { \n\t\t\t\td.mime =  'image/jpeg'; \n\t\t\t}\n\t\t\telse if (sig.to(4)===\"\\u0089PNG\") { \n\t\t\t\td.mime = 'image/png'; \n\t\t\t}\n\t\t\t\n\t\t\tif (d.mime) {\n\t\t\t\t// we have mime so its an image\n\t\t\t} else {\n\t\t\t\t// try to guess it by name\n\t\t\t\tif (d.path.length==3 && d.path[1]==\"_attachments\") {\n\t\t\t\t\t// we have couchdb doc\n\t\t\t\t\tvar i, \n\t\t\t\t\t\t\tico=\"fi-paperclip\", \n\t\t\t\t\t\t\tmime=\"application/octet-stream\", \n\t\t\t\t\t\t\tfname = d.path[2];\n\t\t\t\t\tfor (i in that.Mime) if (that.Mime[i].test(fname)) mime = i;\n\t\t\t\t\tfor (i in that.Ico) if (that.Ico[i].test(fname)) ico = i;\n\t\t\t\t\td.mime = mime;\n\t\t\t\t\td.ico = ico;\n\t\t\t\t\td.fname = fname;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthat.RT('Blobs')[d.hash] = URL.createObjectURL(\n\t\t\t\t$.my.f.base642blob(d.value.replace(/^data:image\\/(jpeg|png|gif);base64,/,''), null, d.mime)\n\t\t\t);\n\t\t}\n\n\t}",
        "ui": {
          ".ikey": {},
          ".ivalue": {
            "init": "function ($o,form) {\n\t\t\t\tvar that = this,\n\t\t\t\t\t\td = that.data;\n\t\t\t\tthat.F.initEdit($o, that);\n\t\t\t}",
            "bind": "function (d,v,$o) {\n\t\t\t\tvar h=\"\", \n\t\t\t\t\t\tblobs = this.RT('Blobs'),\n\t\t\t\t\t\timg = /^image/.test(d.mime+\"\") && d.value.length < 5e5?blobs[d.hash]:null;\n\t\t\t\tif (d.state==1) {\n\t\t\t\t\t\n\t\t\t\t\tvar w = $o.width();\n\t\t\t\t\t\n\t\t\t\t\tif (img) {\n\t\t\t\t\t\th+='<a href=\"'+img+'\" target=\"_blank\" class=\"base64image\"><img src=\"'+img+'\" '\n\t\t\t\t\t\t+'class=\"fl mr10\"/></a>';\n\t\t\t\t\t\tw=w-80;\n\t\t\t\t\t} \n\t\t\t\t\telse if (d.mime && d.ico && d.fname){\n\t\t\t\t\t\th+='<a href=\"' + blobs[d.hash] + '\" '\n\t\t\t\t\t\t\t+' class=\"base64ico w55 h55 tac dib vat mr10 lgray fs200 bg-lgray br2\" '\n\t\t\t\t\t\t\t+ 'download=\"'+d.fname+'\" '\n\t\t\t\t\t\t\t+' title=\"Download '+d.fname+'\" '\n\t\t\t\t\t\t+' style=\"line-height:55px\"><span class=\"'+d.ico+'\"></span></a>';\n\t\t\t\t\t\tw = w-80;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar trim = ((w/10*2.5)|0).clamp(140,600);\n\t\t\t\t\t\n\t\t\t\t\th+='<div class=\"dib vat base64string\">';\n\t\t\t\t\th+='\"';\n\t\t\t\t\tif (d.value.length>trim) {\n\t\t\t\t\t\th+=d.value.truncate(trim)\n\t\t\t\t\t\t+'\"&nbsp;<a href=\"'+blobs[d.hash]+'\" '\n\t\t\t\t\t\t+'target=\"_blank\" class=\"ilabel tdn\">'\n\t\t\t\t\t\t+(d.mime?'Open':'Download')\n\t\t\t\t\t\t+'&nbsp;'+d.size.metric(2)+'b</a>';\n\t\t\t\t\t}\n\t\t\t\t\telse h+=d.value+'\"';\n\t\t\t\t\tif (img) h+='</div>';\n\t\t\t\t\treturn h;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (v!=null) d.value = v;\n\t\t\t\t\treturn d.value;\n\t\t\t\t}\n\t\t\t}",
            "events": "input.my"
          }
        },
        "Mime": {
          "application/x-compressed": "new RegExp(/\\.zip$/i)",
          "application/vnd.ms-excel": "new RegExp(/\\.xlsx?$/i)",
          "application/octet-stream": "new RegExp(/\\.(cdr|dat|rar)$/i)",
          "application/json": "new RegExp(/\\.(jsn|json)$/i)",
          "application/javascript": "new RegExp(/\\.js$/i)",
          "application/vnd.openxmlformats-officedocument.wordprocessingml.document": "new RegExp(/\\.docx$/i)",
          "application/msword": "new RegExp(/\\.doc?$/i)",
          "application/pdf": "new RegExp(/\\.pdf$/i)",
          "text/plain": "new RegExp(/\\.txt$/i)",
          "text/html": "new RegExp(/\\.([x]?htm[l]?)$/i)",
          "text/xml": "new RegExp(/\\.(xml|xsd|xsf|xsl|xslt)$/i)",
          "image/png": "new RegExp(/\\.png$/i)",
          "image/jpeg": "new RegExp(/\\.jpe?g$/i)",
          "image/gif": "new RegExp(/\\.gif$/i)"
        },
        "Ico": {
          "fi-photo": "new RegExp(/\\.(png|jp[e]?g|gif|tif[f]?|bmp)$/i)",
          "fi-social-adobe": "new RegExp(/\\.(pdf|ai|psd)$/i)",
          "fi-page-doc": "new RegExp(/\\.(doc[x]?|txt|rtf)$/i)",
          "fi-graph-pie": "new RegExp(/\\.(xls[x]?|csv)$/i)",
          "fi-archive": "new RegExp(/\\.(zip|rar|7z|7zip)$/i)",
          "fi-html5 pl2": "new RegExp(/\\.(htm[l]|php)$/i)",
          "fi-css3 pl2": "new RegExp(/\\.css$/i)",
          "fi-widget": "new RegExp(/\\.(js[on]?|php|asp|jar|c|erl)$/i)",
          "fi-sound": "new RegExp(/\\.(wav|aiff|mp3|ogg|mpeg3)$/i)"
        }
      },
      "$number": {
        "id": "Sys.JSON.Number",
        "CM": "number",
        "F": {
          "N2S": "function (v) {\n\t\t\tvar h = '<span class=\"orange\">'+v.toString()+'</span>';\n\t\t\tif (v<1e13&&v>8e11&&v===(+v).floor()) {\n\t\t\t\th+=' <span class=\"ilabel xgray lh140 vat mt4\"><span class=\"fi-clock\"></span> '\n\t\t\t\t+Date.create(v).format('{d} {Mon} {yyyy}, {H}:{mm}:{ss}, Local')\n\t\t\t\t+'</span>';\n\t\t\t}\n\t\t\treturn h;\n\t\t}",
          "Calc": "function (s,prev) {\n\t\t\tif (!isNaN(s)) return +s;\n\t\t\tvar n = null;\n\t\t\ttry {\n\t\t\t\tn = eval('('+s+')');\n\t\t\t} catch (e) {}\n\t\t\tif (n!==null && !isNaN(n)) return +n;\n\t\t\treturn prev;\n\t\t}"
        },
        "ui": {
          ".ikey": {},
          ".ivalue": {
            "init": "function ($o,form) {\n\t\t\t\tvar that = this,\n\t\t\t\t\t\td = that.data;\n\t\t\t\tthat.F.initEdit($o, that, function(newval, prev){\n\t\t\t\t\td.value = that.F.Calc(newval, prev);\n\t\t\t\t\t$o.trigger(\"check\");\n\t\t\t\t});\n\t\t\t}",
            "bind": "function (d,v) {\n\t\t\t\tif (d.state==1) return this.F.N2S(d.value);\n\t\t\t\telse {\n\t\t\t\t\tif (v!=null) d.value = this.F.Calc(v, d.value);\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t}",
            "events": "input.my"
          }
        }
      },
      "$boolean": {
        "id": "Sys.JSON.Boolean",
        "ui": {
          ".ikey": {},
          ".ivalue": {
            "bind": "function (d,v) {\n\t\t\t\tif (v!=null) d.value = !d.value;\n\t\t\t\treturn this.V[d.value?1:0];\n\t\t\t}",
            "events": "click.my"
          }
        },
        "V": [
          "<span class=\"iboolean-tag gray\">true</span><span class=\"iboolean-tag green bg-green4 o80\">false</span>",
          "<span class=\"iboolean-tag green bg-green4 o80\">true</span><span class=\"iboolean-tag gray\">false</span>"
        ]
      },
      "$null": {
        "id": "Sys.JSON.Null",
        "ui": {
          ".ikey": {},
          ".ivalue": {
            "bind": "function (d,v) {\n\t\t\t\treturn '<span class=\"red o80\">null</span>';\n\t\t\t}"
          }
        }
      },
      "stamp": 1504842371912
    }
  },
  "filters": {
    "photon": "function (doc) {\n\treturn doc._id == '_design/photon';\n}"
  },
  "run": [
    {
      "container": "#cw-space",
      "manifest": "cw.Photon",
      "data": {}
    }
  ],
  "_attachments": {
    "css/backend.css": {
      "content_type": "text/css",
      "revpos": 533,
      "digest": "md5-bl9N+nWYHi0EJ+SdeD+ebg==",
      "data": ""
    },
    "lib/backend.js": {
      "content_type": "text/javascript",
      "revpos": 535,
      "digest": "md5-80s1IvzOYfeAB4wZRhr6+g==",
      "data": ""
    },
    "lib/general.js": {
      "content_type": "text/javascript",
      "revpos": 488,
      "digest": "md5-lVaPljRs7sO7udTxA9naBw==",
      "data": ""
    },
    "css/foundation-icons.ttf": {
      "content_type": "application/octet-stream",
      "revpos": 488,
      "digest": "md5-4glF18kpJ573pvHbGEpEcA==",
      "data": ""
    },
    "css/foundation-icons.eot": {
      "content_type": "application/octet-stream",
      "revpos": 488,
      "digest": "md5-koJ/CIue2ocWm9wrmIjOUg==",
      "data": ""
    },
    "css/foundation-icons.woff": {
      "content_type": "application/font-woff",
      "revpos": 488,
      "digest": "md5-oYjC92jOUDPT9dR75ygOJQ==",
      "data": ""
    },
    "i/loader-bar2.gif": {
      "content_type": "image/gif",
      "revpos": 488,
      "digest": "md5-/H2eMAHnXS1pcTVTYcisPw==",
      "data": ""
    },
    "i/select2x2.png": {
      "content_type": "image/png",
      "revpos": 488,
      "digest": "md5-HlPzjfKFbE9A7BAgzAwyFw==",
      "data": "iVBORw0KGgoAAAANSUhEUgAAAHgAAABQCAYAAADSm7GJAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAABDZJREFUeNrsnM9PE0EUx6eCYiDBkz8SDD9iwgFjhEQ4eOqdf9R/gIvxwBliijEaU1S0EULk1CZFTW3qGzpLnsu87Q7b2c4s32/y0qXzuiT97Jv9vtnu1gaDgYKqq1v4CgAYAmAoVE3jKwhLtVot2dwwr42M9Isc8lENAI5LGtwi+7uRlaMPCgkypujw4S6yahZzCPIGAMcrDjkNN3vKRx8c5DlYgtilmLO835KmaAAO22TlqdRWlsnCFB2uNLRWEbgAHAfkrjDWHdFCAXAkjnpOGJuzuGsAjrhdsrprqT0C4Djhdl0hA3A8cLXheiMYLyx0RK4WM1R53PWlol6LZj0j11Pz+iE9EEnPn4BctMAVc6R2qWoXG7SzXDPb3zJajFggq4xWqMEOXLFdclrJoorZppfZnOnntO+dkiu4TnHfbJ9R7EZYwWOV6zl431PuOLTA4CqzvXDTT96ugH9SnOTIOzG5Zek2xbrl/XUzBsAOOqDoZYz3TE6ZWhVOHbNmDIAdpI3LYcb4Ycnmhhsrm9aUvNwHwIJ0C3JuM1a29sSzNseUA8A5TNSkjZWkG2u4igBOG66yjZUSjNU4cicm3fqZqJtQGXGRk7W/ogsdB6yCyjZWynefPUHVU+ZwNyvH/Kpy1wdgbri6CvIBd9UC+UqOBHnasWIkwwX5bwMTyHWX1g8/ugvwHJwBsUMxb3m/KU3RABwmYOVQqSLcoi4a8isNrVkELgDHAbkjjHUEdw3AkTnqeWFs3owDcEXaJau7HrXQAcBxwe24QgbgeOBqw/VKMF4iZACOQ01mqPK4awCOqD1qWtzylRxfa9GQP8i2bWtOVi+MlayKC1M0AEMADAEwBMAQAEMADAEwAEMADAEwBMCQb+FqkidZHi+hb0RfoVimuJcaa6vhM0WOVOre66IXg3A1qRzA+s7GTTX6aQMarr5D8xiA4wG8rOz3JydfvO1ZUPumogsDxhTtVwspuJqWvkn+E8UpOwB0zDLYm6aajwsfaKhgbxWsp+NtNi33Kb5SvDfbXDMUz9TwwWZTbLreIT49uOgwtcLg6ir6oob3UPctuX8o3pppeZAyZWiTAtUy287z7BIN9h3Fb2EfAByYeCv0meJvjs/0E3Nl2QcABywXs3TGpmkFwHFoalL/GIDL0SOH3IdCbwzAganNtp/kXHOYUf8/7b0NwOGKmyX9KMXnI77vKZNzV9gHAAcmfuFAT7lLFC9MlaZ1h2KL4jGbnrXROuIPPruOsJLlSQaIXqp8mep1f1H8UMOlSl1gD8y0PGM5936n2Lv88DVYAbBfwMlihevFBitkAA4TcFLJeS4XDgTgF5ABOFzASuW/4L9hztdXIBOrPQCuxkGxNS7IcNFhas9My2kt0UGwhQquzrQuVXKbuL1GBVe3knNfZQLgeCEDcMUg83XpjzgHQ6jgm6B/AgwASf9JdGlG080AAAAASUVORK5CYII="
    },
    "i/spinner.gif": {
      "content_type": "image/gif",
      "revpos": 488,
      "digest": "md5-e5d2B21fzu9Jk7Vck4Pe3Q==",
      "data": "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"
    },
    "i/select2.png": {
      "content_type": "image/png",
      "revpos": 488,
      "digest": "md5-/eACIZzEn4jVrfYDV5u9sw==",
      "data": "iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAp9JREFUeNrsmdtLG1EQxjeapF6KYrWCV7y0UGsFqRSvD0Xf9KEP/TMF8Q+QgqilSGtooQUr3rDiLWgba7ygid/gt/V4WJo1NdadOPAjy1ldzrcz55yZ2VA6nXbyyQqcPLO8Exz2GgyFQoGYvLscOd8usAnWebsa1INY2li3YSWOa6K4SpAAZ6ADPOT9OW2Cd8FvCuwX54Mijq1rXMPi1SmwDx5QbBK8B1taN62opUeuI1p36UdgAJQyjBP0ch9o+B+Cowy1XFkZn3/EMJ6hcBmryngswZrdnd8YKwRr4CSLCb0CxWAiR4JXONef4JBjHyh21Y/gCtBujf2y//ka4dbC6xqwkaPz2J7bAfG1huesB6TANDjN0rvm9Y0tI0k4/OB3Dcd4gIvN86y7rrUz43GtHLy8c6klbZ9Cn4Iv//D8BTsC+aJTN6hDjp9B7jHfONZKpox1nTHT+spM5STLiXy+Jcd1gheMqCTnO8IXIdnX2J9l4FUPB6V4MExEDfPMPWMUhenxd9AY15Z4yJk7ymqpkGJ36dm41tSy3qiOxErsLEuT4CfgLQVLGC8ztXwDejQKLmAob4Nx8sMI76tZik1ArdEK6WKOXdGmZZf21QrStmn5jv17wfeCFVlQu5YR57JfdWg1KtQJln5zm3PZMtpjkbKmMaR7WRmdskkxz+7Ma+eiGa/Kw3VMIaVAmDRK1iUwBLp570iLhxv5O2vV53HW7dIZrdQU0hF2SRIe9/b86gmS4APOt87jnrt+jzUJXuSvfE2oNbwurZ0WvpDtTA8JWvHQSsEOQzvKutc1aeB9+lvxELRzeJFCn/E4kh35O3U8J+Ktj5oSjx1iW4rh3UbRMcfjw4GmXDrGjCvFCHicD8WDfDBwP4Anvf7gXIABAFuqtY/cQK8hAAAAAElFTkSuQmCC"
    },
    "i/apple-icon.png": {
      "content_type": "image/png",
      "revpos": 519,
      "digest": "md5-Vuy7wLUCI7tmEVeT4a+Dlg==",
      "data": ""
    },
    "index.html": {
      "content_type": "text/html",
      "revpos": 531,
      "digest": "md5-MCf+DiaPgrhJ4HuG3IpXhg==",
      "data": "PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgoJCTxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD0xMTAwIj4KCgkJPGxpbmsgcmVsPSJpY29uIiAgdHlwZT0iaW1hZ2UvcG5nIiBocmVmPSJmYXZpY29uLnBuZyI+CgkJPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBocmVmPSJpL2FwcGxlLWljb24ucG5nIj4KCQkKCQk8dGl0bGU+IFBob3RvbiAwLjIgPC90aXRsZT4KCQkKCQk8bGluayBocmVmPSIvL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Q291c2luZXxGaXJhK01vbm98UFQrTW9ub3xSb2JvdG8rTW9ubyIgcmVsPSJzdHlsZXNoZWV0Ij4KCQk8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJjc3MvYmFja2VuZC5jc3MiIC8+CgkJCgkJPHNjcmlwdCBzcmM9ImxpYi9nZW5lcmFsLmpzIj48L3NjcmlwdD4KCQk8c2NyaXB0IHNyYz0ibGliL2JhY2tlbmQuanMiPjwvc2NyaXB0PgoJCTxzY3JpcHQ+CgoJCQl3aW5kb3cuRERPQyA9IHtfbWU6e25hbWU6Jycscm9sZXM6W119fTsKCgkJCS8vIFN0YXJ0IG9uIHBhZ2UgbG9hZAoJCQkKCQkJJChmdW5jdGlvbigpewoKCQkJCS8vIFBhcnNlIGN1cnJlbnQgcGF0aAoJCQkJdmFyIHBhdGggPSBsb2NhdGlvbi5wYXRobmFtZSwKCQkJCQkJaG9zdCA9IGxvY2F0aW9uLmhvc3QsCgkJCQkJCWh0ID0gbG9jYXRpb24ucHJvdG9jb2wsCgkJCQkJCWxvYyA9IHtiYXNlOicnLGRiOicnLGRvYzonJ307CgoJCQkJdmFyIHBwID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhdGgucmVwbGFjZSgvXlwvLywnJykpLnNwbGl0KCcvJykucmV2ZXJzZSgpLAoJCQkJCQlpc2Rkb2MgPSBwcFsyXSA9PSAnX2Rlc2lnbic7CgoJCQkJbG9jLmRvYyA9IGlzZGRvYz8nX2Rlc2lnbi8nK3BwWzFdOnBwWzFdOwoJCQkJbG9jLmRiID0gcHBbaXNkZG9jPzM6Ml07CgkJCQkKCQkJCXZhciB0YWlsID0gcHAuZnJvbShpc2Rkb2M/NDozKS5yZXZlcnNlKCk7CgkJCQlsb2MuYmFzZSA9IGh0KycvLycraG9zdCsnLycrKHRhaWwubGVuZ3RoP3RhaWwuam9pbignLycpKycvJzonJyk7CgoJCQkJLy8gTW9kYWxz4oCZIHBhcmVudCBub2RlCgkJCQkkLm15Lm1vZGFsLnBhcmVudCgiI2N3LWJvZHkiKTsKCQkJCQoJCQkJLy8gUmV0dXJucyB1c2VyIHNlc3Npb24gcHJvcGVydHkKCQkJCXdpbmRvdy5jdy5tZSA9IGZ1bmN0aW9uKGtleSl7CgkJCQkJdmFyIG1lID0gKHdpbmRvdy5ERE9DIHx8IHt9KS5fbWUgfHwge25hbWU6Jycscm9sZXM6W10sbG9jYWxlOidlbid9OwoJCQkJCWlmIChrZXkgPT09IG51bGwpIHJldHVybiBtZTsKCQkJCQllbHNlIGlmIChrZXkgPT09IHVuZGVmaW5lZCkgcmV0dXJuIG1lLm5hbWU7CgkJCQkJcmV0dXJuIG1lW2tleV07CgkJCQl9CgoJCQkJLy8gU3RhcnQgc2VxdWVuY2UKCQkJCV9sb2FkRGRvYygpCgkJCQkudGhlbihfc2Vzc2lvbikKCQkJCS50aGVuKF9ydW5BcHBzKQoJCQkJLmZhaWwoZnVuY3Rpb24oZXJyKXsKCQkJCQljb25zb2xlLmxvZyhlcnIpOwoJCQkJCWN3LmxpYi5ub3RlKCdQaG90b24gZmFpbGVkIHRvIHN0YXJ0LCBzZWUgY29uc29sZSBmb3IgZGV0YWlscycsJ2Vycm9yJywgMzAwMDApOwoJCQkJfSk7CgoJCQkJLy8gLSAtIC0gLSAtIC0gLSAtCgoJCQkJZnVuY3Rpb24gX2xvYWREZG9jKCkgewoJCQkJCXJldHVybiAkLmFqYXgoewoJCQkJCQl1cmw6bG9jLmJhc2UrbG9jLmRiKycvJytsb2MuZG9jKyc/Y29uZmxpY3RzPXRydWUmbG9jYWxfc2VxPXRydWUmcmV2c19pbmZvPXRydWUnLAoJCQkJCQltZXRob2Q6J2dldCcsIAoJCQkJCQlkYXRhVHlwZTonanNvbicsCgkJCQkJCWhlYWRlcnM6eydhY2NlcHQnOidhcHBsaWNhdGlvbi9qc29uJ30sCgkJCQkJCWNhY2hlOmZhbHNlIAoJCQkJCX0pCgkJCQkJLnRoZW4oZnVuY3Rpb24ocmVzKXsKCQkJCQkJdmFyIGRkb2MgPSB3aW5kb3cuRERPQyA9ICQuZXh0ZW5kICh0cnVlLCB7fSwgcmVzLCB7X2Jhc2U6bG9jLmJhc2UsIF9kYjpsb2MuZGJ9LCB3aW5kb3cuRERPQyk7CgkJCQkJCV9jYWNoZUFwcHMoZGRvYyk7CgkJCQkJfSk7CgkJCQl9CgkJCQkKCQkJCS8vIC0gLSAtIC0gLSAtIC0gLQoKCQkJCWZ1bmN0aW9uIF9zZXNzaW9uKCkgewoJCQkJCXZhciBwaSA9ICQuRGVmZXJyZWQoKTsKCQkJCQkKCQkJCQkkLmFqYXgoewoJCQkJCQl1cmw6bG9jLmJhc2UrJ19zZXNzaW9uJywKCQkJCQkJbWV0aG9kOidnZXQnLCAKCQkJCQkJZGF0YVR5cGU6J2pzb24nLAoJCQkJCQloZWFkZXJzOnsnYWNjZXB0JzonYXBwbGljYXRpb24vanNvbid9LAoJCQkJCQljYWNoZTpmYWxzZSAKCQkJCQl9KQoJCQkJCS50aGVuKGZ1bmN0aW9uKHJlcyl7CgkJCQkJCXZhciBtZSA9IERET0MuX21lOwoJCQkJCQlpZiAoT2JqZWN0LmlzT2JqZWN0KHJlcykgJiYgcmVzLnVzZXJDdHggJiYgcmVzLnVzZXJDdHgubmFtZSkgewoJCQkJCQkJbWUubmFtZSA9IHJlcy51c2VyQ3R4Lm5hbWUgfHwgJyc7CgkJCQkJCQltZS5yb2xlcyA9IHJlcy51c2VyQ3R4LnJvbGVzOwoJCQkJCQkJKE9iamVjdC5pc0FycmF5KG1lLnJvbGVzKT9tZS5yb2xlczpbXSkuZm9yRWFjaChmdW5jdGlvbihpKXsKCQkJCQkJCQlpZiAoL15sYW5nXC1bYS16XXsyfSQvLnRlc3QoaSkpIHsKCQkJCQkJCQkJbWUubG9jYWxlID0gaS5zcGxpdCgnLScpWzFdOwoJCQkJCQkJCQkkLm15LmxvY2FsZShtZS5sb2NhbGUpOwoJCQkJCQkJCX0KCQkJCQkJCX0pOwoJCQkJCQl9CgkJCQkJfSkKCQkJCQkuYWx3YXlzKGZ1bmN0aW9uKCl7CgkJCQkJCXBpLnJlc29sdmUoRERPQy5fbWUpOwoJCQkJCX0pOwoJCQkJCQoJCQkJCXJldHVybiBwaS5wcm9taXNlKCk7CgkJCQl9CgoJCQkJLy8gLSAtIC0gLSAtIC0gLSAtCgoJCQkJZnVuY3Rpb24gX2NhY2hlQXBwcyAoZGRvYykgewoJCQkJCU9iamVjdC5rZXlzKGRkb2MuYXBwcyB8fCB7fSkuZm9yRWFjaChmdW5jdGlvbihrKXsKCQkJCQkJJC5teS5jYWNoZShkZG9jLmFwcHNba10pOwoJCQkJCX0pOwoJCQkJfQoKCQkJCS8vIC0gLSAtIC0gLSAtIC0gLQoKCQkJCWZ1bmN0aW9uIF9ydW5BcHBzICgpIHsKCQkJCQl2YXIgcnVubGlzdCA9IERET0MucnVuLAoJCQkJCQkJYXBwcyA9IFtdOwoJCQkJCXJ1bmxpc3QuZm9yRWFjaChmdW5jdGlvbihhcHApewoJCQkJCQl2YXIgJHJvb3QgPSAkKGFwcC5jb250YWluZXIpOwoJCQkJCQlhcHBzLnB1c2goJHJvb3QubXkoYXBwLm1hbmlmZXN0LCBhcHAuZGF0YSB8fCB7fSkpOwoJCQkJCX0pOwoJCQkJCXJldHVybiBRLmFsbChhcHBzKTsKCQkJCX0KCQkJfSkKCQk8L3NjcmlwdD4KCTwvaGVhZD4KCgk8Ym9keSBzdHlsZT0iZm9udC13ZWlnaHQ6MzAwOyI+CgkJPGRpdiBpZD0iY3ctbm90ZXMiPjwvZGl2PgoJCTxkaXYgaWQ9ImN3LWJvZHkiID4KCQkJPGRpdiBpZD0iY3ctaGVhZGVyIj48L2Rpdj4KCQkJPGRpdiBpZD0iY3ctc3BhY2UiIGNsYXNzPSJwdDAiIHN0eWxlPSJtaW4td2lkdGg6MTAyM3B4OyB3aWR0aDoxMDAlIj48L2Rpdj4KCQk8L2Rpdj4KCTwvYm9keT4KCTwhLS0gUGhvdG9uLCDCqSAyMDE3IGVybW91dGggLS0+CjwvaHRtbD4="
    },
    "favicon.png": {
      "content_type": "image/png",
      "revpos": 520,
      "digest": "md5-oC3qII0YKfXL0gZQl7Sm/g==",
      "data": "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"
    }
  }
}